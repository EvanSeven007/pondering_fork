<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="614" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="597.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="597.00"> </text><svg id="frames" x="10" width="1180" total_samples="525883"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (97 samples, 0.02%)</title><rect x="0.0154%" y="325" width="0.0184%" height="15" fill="rgb(227,0,7)" fg:x="81" fg:w="97"/><text x="0.2654%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (97 samples, 0.02%)</title><rect x="0.0154%" y="309" width="0.0184%" height="15" fill="rgb(217,0,24)" fg:x="81" fg:w="97"/><text x="0.2654%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (97 samples, 0.02%)</title><rect x="0.0154%" y="293" width="0.0184%" height="15" fill="rgb(221,193,54)" fg:x="81" fg:w="97"/><text x="0.2654%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (97 samples, 0.02%)</title><rect x="0.0154%" y="277" width="0.0184%" height="15" fill="rgb(248,212,6)" fg:x="81" fg:w="97"/><text x="0.2654%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (97 samples, 0.02%)</title><rect x="0.0154%" y="261" width="0.0184%" height="15" fill="rgb(208,68,35)" fg:x="81" fg:w="97"/><text x="0.2654%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (97 samples, 0.02%)</title><rect x="0.0154%" y="245" width="0.0184%" height="15" fill="rgb(232,128,0)" fg:x="81" fg:w="97"/><text x="0.2654%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (95 samples, 0.02%)</title><rect x="0.0158%" y="229" width="0.0181%" height="15" fill="rgb(207,160,47)" fg:x="83" fg:w="95"/><text x="0.2658%" y="239.50"></text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth::{{closure}} (89 samples, 0.02%)</title><rect x="0.0169%" y="213" width="0.0169%" height="15" fill="rgb(228,23,34)" fg:x="89" fg:w="89"/><text x="0.2669%" y="223.50"></text></g><g><title>crabchess::engine::candidacy::candidacy (88 samples, 0.02%)</title><rect x="0.0171%" y="197" width="0.0167%" height="15" fill="rgb(218,30,26)" fg:x="90" fg:w="88"/><text x="0.2671%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (103 samples, 0.02%)</title><rect x="0.0152%" y="389" width="0.0196%" height="15" fill="rgb(220,122,19)" fg:x="80" fg:w="103"/><text x="0.2652%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (103 samples, 0.02%)</title><rect x="0.0152%" y="373" width="0.0196%" height="15" fill="rgb(250,228,42)" fg:x="80" fg:w="103"/><text x="0.2652%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (102 samples, 0.02%)</title><rect x="0.0154%" y="357" width="0.0194%" height="15" fill="rgb(240,193,28)" fg:x="81" fg:w="102"/><text x="0.2654%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (102 samples, 0.02%)</title><rect x="0.0154%" y="341" width="0.0194%" height="15" fill="rgb(216,20,37)" fg:x="81" fg:w="102"/><text x="0.2654%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable (112 samples, 0.02%)</title><rect x="0.0352%" y="389" width="0.0213%" height="15" fill="rgb(206,188,39)" fg:x="185" fg:w="112"/><text x="0.2852%" y="399.50"></text></g><g><title>core::slice::sort::quicksort (112 samples, 0.02%)</title><rect x="0.0352%" y="373" width="0.0213%" height="15" fill="rgb(217,207,13)" fg:x="185" fg:w="112"/><text x="0.2852%" y="383.50"></text></g><g><title>core::slice::sort::recurse (112 samples, 0.02%)</title><rect x="0.0352%" y="357" width="0.0213%" height="15" fill="rgb(231,73,38)" fg:x="185" fg:w="112"/><text x="0.2852%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_cached_key (255 samples, 0.05%)</title><rect x="0.0095%" y="405" width="0.0485%" height="15" fill="rgb(225,20,46)" fg:x="50" fg:w="255"/><text x="0.2595%" y="415.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::ne (111 samples, 0.02%)</title><rect x="0.1304%" y="149" width="0.0211%" height="15" fill="rgb(210,31,41)" fg:x="686" fg:w="111"/><text x="0.3804%" y="159.50"></text></g><g><title>crabchess::board::Board::type_at_square (183 samples, 0.03%)</title><rect x="0.1192%" y="165" width="0.0348%" height="15" fill="rgb(221,200,47)" fg:x="627" fg:w="183"/><text x="0.3692%" y="175.50"></text></g><g><title>crabchess::engine::greedy::piece_value (68 samples, 0.01%)</title><rect x="0.1540%" y="165" width="0.0129%" height="15" fill="rgb(226,26,5)" fg:x="810" fg:w="68"/><text x="0.4040%" y="175.50"></text></g><g><title>crabchess::engine::Eval::pawns (54 samples, 0.01%)</title><rect x="0.1567%" y="149" width="0.0103%" height="15" fill="rgb(249,33,26)" fg:x="824" fg:w="54"/><text x="0.4067%" y="159.50"></text></g><g><title>crabchess::engine::positional::value_at_square (97 samples, 0.02%)</title><rect x="0.1670%" y="165" width="0.0184%" height="15" fill="rgb(235,183,28)" fg:x="878" fg:w="97"/><text x="0.4170%" y="175.50"></text></g><g><title>crabchess::engine::Eval::pawns (88 samples, 0.02%)</title><rect x="0.1687%" y="149" width="0.0167%" height="15" fill="rgb(221,5,38)" fg:x="887" fg:w="88"/><text x="0.4187%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (537 samples, 0.10%)</title><rect x="0.0917%" y="293" width="0.1021%" height="15" fill="rgb(247,18,42)" fg:x="482" fg:w="537"/><text x="0.3417%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (537 samples, 0.10%)</title><rect x="0.0917%" y="277" width="0.1021%" height="15" fill="rgb(241,131,45)" fg:x="482" fg:w="537"/><text x="0.3417%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (537 samples, 0.10%)</title><rect x="0.0917%" y="261" width="0.1021%" height="15" fill="rgb(249,31,29)" fg:x="482" fg:w="537"/><text x="0.3417%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (537 samples, 0.10%)</title><rect x="0.0917%" y="245" width="0.1021%" height="15" fill="rgb(225,111,53)" fg:x="482" fg:w="537"/><text x="0.3417%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (537 samples, 0.10%)</title><rect x="0.0917%" y="229" width="0.1021%" height="15" fill="rgb(238,160,17)" fg:x="482" fg:w="537"/><text x="0.3417%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (528 samples, 0.10%)</title><rect x="0.0934%" y="213" width="0.1004%" height="15" fill="rgb(214,148,48)" fg:x="491" fg:w="528"/><text x="0.3434%" y="223.50"></text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth::{{closure}} (507 samples, 0.10%)</title><rect x="0.0974%" y="197" width="0.0964%" height="15" fill="rgb(232,36,49)" fg:x="512" fg:w="507"/><text x="0.3474%" y="207.50"></text></g><g><title>crabchess::engine::candidacy::candidacy (504 samples, 0.10%)</title><rect x="0.0979%" y="181" width="0.0958%" height="15" fill="rgb(209,103,24)" fg:x="515" fg:w="504"/><text x="0.3479%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (541 samples, 0.10%)</title><rect x="0.0913%" y="309" width="0.1029%" height="15" fill="rgb(229,88,8)" fg:x="480" fg:w="541"/><text x="0.3413%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (556 samples, 0.11%)</title><rect x="0.0903%" y="373" width="0.1057%" height="15" fill="rgb(213,181,19)" fg:x="475" fg:w="556"/><text x="0.3403%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (556 samples, 0.11%)</title><rect x="0.0903%" y="357" width="0.1057%" height="15" fill="rgb(254,191,54)" fg:x="475" fg:w="556"/><text x="0.3403%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (555 samples, 0.11%)</title><rect x="0.0905%" y="341" width="0.1055%" height="15" fill="rgb(241,83,37)" fg:x="476" fg:w="555"/><text x="0.3405%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (551 samples, 0.10%)</title><rect x="0.0913%" y="325" width="0.1048%" height="15" fill="rgb(233,36,39)" fg:x="480" fg:w="551"/><text x="0.3413%" y="335.50"></text></g><g><title>core::slice::sort::insertion_sort (153 samples, 0.03%)</title><rect x="0.2118%" y="325" width="0.0291%" height="15" fill="rgb(226,3,54)" fg:x="1114" fg:w="153"/><text x="0.4618%" y="335.50"></text></g><g><title>core::slice::sort::shift_tail (124 samples, 0.02%)</title><rect x="0.2173%" y="309" width="0.0236%" height="15" fill="rgb(245,192,40)" fg:x="1143" fg:w="124"/><text x="0.4673%" y="319.50"></text></g><g><title>core::slice::sort::partition (167 samples, 0.03%)</title><rect x="0.2463%" y="325" width="0.0318%" height="15" fill="rgb(238,167,29)" fg:x="1295" fg:w="167"/><text x="0.4963%" y="335.50"></text></g><g><title>core::slice::sort::partition_in_blocks (109 samples, 0.02%)</title><rect x="0.2573%" y="309" width="0.0207%" height="15" fill="rgb(232,182,51)" fg:x="1353" fg:w="109"/><text x="0.5073%" y="319.50"></text></g><g><title>core::slice::sort::insertion_sort (140 samples, 0.03%)</title><rect x="0.2818%" y="309" width="0.0266%" height="15" fill="rgb(231,60,39)" fg:x="1482" fg:w="140"/><text x="0.5318%" y="319.50"></text></g><g><title>core::slice::sort::shift_tail (104 samples, 0.02%)</title><rect x="0.2887%" y="293" width="0.0198%" height="15" fill="rgb(208,69,12)" fg:x="1518" fg:w="104"/><text x="0.5387%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable (586 samples, 0.11%)</title><rect x="0.1972%" y="373" width="0.1114%" height="15" fill="rgb(235,93,37)" fg:x="1037" fg:w="586"/><text x="0.4472%" y="383.50"></text></g><g><title>core::slice::sort::quicksort (586 samples, 0.11%)</title><rect x="0.1972%" y="357" width="0.1114%" height="15" fill="rgb(213,116,39)" fg:x="1037" fg:w="586"/><text x="0.4472%" y="367.50"></text></g><g><title>core::slice::sort::recurse (585 samples, 0.11%)</title><rect x="0.1974%" y="341" width="0.1112%" height="15" fill="rgb(222,207,29)" fg:x="1038" fg:w="585"/><text x="0.4474%" y="351.50"></text></g><g><title>core::slice::sort::recurse (161 samples, 0.03%)</title><rect x="0.2780%" y="325" width="0.0306%" height="15" fill="rgb(206,96,30)" fg:x="1462" fg:w="161"/><text x="0.5280%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_cached_key (1,319 samples, 0.25%)</title><rect x="0.0679%" y="389" width="0.2508%" height="15" fill="rgb(218,138,4)" fg:x="357" fg:w="1319"/><text x="0.3179%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (53 samples, 0.01%)</title><rect x="0.3086%" y="373" width="0.0101%" height="15" fill="rgb(250,191,14)" fg:x="1623" fg:w="53"/><text x="0.5586%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (129 samples, 0.02%)</title><rect x="0.4710%" y="357" width="0.0245%" height="15" fill="rgb(239,60,40)" fg:x="2477" fg:w="129"/><text x="0.7210%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (129 samples, 0.02%)</title><rect x="0.4710%" y="341" width="0.0245%" height="15" fill="rgb(206,27,48)" fg:x="2477" fg:w="129"/><text x="0.7210%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (129 samples, 0.02%)</title><rect x="0.4710%" y="325" width="0.0245%" height="15" fill="rgb(225,35,8)" fg:x="2477" fg:w="129"/><text x="0.7210%" y="335.50"></text></g><g><title>__GI___libc_free (54 samples, 0.01%)</title><rect x="0.4955%" y="357" width="0.0103%" height="15" fill="rgb(250,213,24)" fg:x="2606" fg:w="54"/><text x="0.7455%" y="367.50"></text></g><g><title>_int_free (57 samples, 0.01%)</title><rect x="0.5085%" y="357" width="0.0108%" height="15" fill="rgb(247,123,22)" fg:x="2674" fg:w="57"/><text x="0.7585%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (100 samples, 0.02%)</title><rect x="0.5193%" y="357" width="0.0190%" height="15" fill="rgb(231,138,38)" fg:x="2731" fg:w="100"/><text x="0.7693%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (100 samples, 0.02%)</title><rect x="0.5193%" y="341" width="0.0190%" height="15" fill="rgb(231,145,46)" fg:x="2731" fg:w="100"/><text x="0.7693%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.01%)</title><rect x="0.5534%" y="197" width="0.0133%" height="15" fill="rgb(251,118,11)" fg:x="2910" fg:w="70"/><text x="0.8034%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (80 samples, 0.02%)</title><rect x="0.5817%" y="181" width="0.0152%" height="15" fill="rgb(217,147,25)" fg:x="3059" fg:w="80"/><text x="0.8317%" y="191.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (72 samples, 0.01%)</title><rect x="0.5832%" y="165" width="0.0137%" height="15" fill="rgb(247,81,37)" fg:x="3067" fg:w="72"/><text x="0.8332%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (72 samples, 0.01%)</title><rect x="0.5832%" y="149" width="0.0137%" height="15" fill="rgb(209,12,38)" fg:x="3067" fg:w="72"/><text x="0.8332%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (72 samples, 0.01%)</title><rect x="0.5832%" y="133" width="0.0137%" height="15" fill="rgb(227,1,9)" fg:x="3067" fg:w="72"/><text x="0.8332%" y="143.50"></text></g><g><title>core::ptr::write (55 samples, 0.01%)</title><rect x="0.5864%" y="117" width="0.0105%" height="15" fill="rgb(248,47,43)" fg:x="3084" fg:w="55"/><text x="0.8364%" y="127.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::ne (790 samples, 0.15%)</title><rect x="0.8452%" y="133" width="0.1502%" height="15" fill="rgb(221,10,30)" fg:x="4445" fg:w="790"/><text x="1.0952%" y="143.50"></text></g><g><title>crabchess::board::Board::type_at_square (1,317 samples, 0.25%)</title><rect x="0.7631%" y="149" width="0.2504%" height="15" fill="rgb(210,229,1)" fg:x="4013" fg:w="1317"/><text x="1.0131%" y="159.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (95 samples, 0.02%)</title><rect x="0.9955%" y="133" width="0.0181%" height="15" fill="rgb(222,148,37)" fg:x="5235" fg:w="95"/><text x="1.2455%" y="143.50"></text></g><g><title>crabchess::engine::greedy::piece_value (660 samples, 0.13%)</title><rect x="1.0135%" y="149" width="0.1255%" height="15" fill="rgb(234,67,33)" fg:x="5330" fg:w="660"/><text x="1.2635%" y="159.50"></text></g><g><title>crabchess::engine::Eval::pawns (518 samples, 0.10%)</title><rect x="1.0405%" y="133" width="0.0985%" height="15" fill="rgb(247,98,35)" fg:x="5472" fg:w="518"/><text x="1.2905%" y="143.50"></text></g><g><title>crabchess::engine::positional::value_at_square (765 samples, 0.15%)</title><rect x="1.1390%" y="149" width="0.1455%" height="15" fill="rgb(247,138,52)" fg:x="5990" fg:w="765"/><text x="1.3890%" y="159.50"></text></g><g><title>crabchess::engine::Eval::pawns (715 samples, 0.14%)</title><rect x="1.1485%" y="133" width="0.1360%" height="15" fill="rgb(213,79,30)" fg:x="6040" fg:w="715"/><text x="1.3985%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (140 samples, 0.03%)</title><rect x="1.2845%" y="133" width="0.0266%" height="15" fill="rgb(246,177,23)" fg:x="6755" fg:w="140"/><text x="1.5345%" y="143.50"></text></g><g><title>crabchess::game::Game::get_board (181 samples, 0.03%)</title><rect x="1.2845%" y="149" width="0.0344%" height="15" fill="rgb(230,62,27)" fg:x="6755" fg:w="181"/><text x="1.5345%" y="159.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4,112 samples, 0.78%)</title><rect x="0.5667%" y="197" width="0.7819%" height="15" fill="rgb(216,154,8)" fg:x="2980" fg:w="4112"/><text x="0.8167%" y="207.50"></text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth::{{closure}} (3,953 samples, 0.75%)</title><rect x="0.5969%" y="181" width="0.7517%" height="15" fill="rgb(244,35,45)" fg:x="3139" fg:w="3953"/><text x="0.8469%" y="191.50"></text></g><g><title>crabchess::engine::candidacy::candidacy (3,908 samples, 0.74%)</title><rect x="0.6055%" y="165" width="0.7431%" height="15" fill="rgb(251,115,12)" fg:x="3184" fg:w="3908"/><text x="0.8555%" y="175.50"></text></g><g><title>crabchess::moves::Move::to_square (113 samples, 0.02%)</title><rect x="1.3271%" y="149" width="0.0215%" height="15" fill="rgb(240,54,50)" fg:x="6979" fg:w="113"/><text x="1.5771%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,196 samples, 0.80%)</title><rect x="0.5522%" y="277" width="0.7979%" height="15" fill="rgb(233,84,52)" fg:x="2904" fg:w="4196"/><text x="0.8022%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,196 samples, 0.80%)</title><rect x="0.5522%" y="261" width="0.7979%" height="15" fill="rgb(207,117,47)" fg:x="2904" fg:w="4196"/><text x="0.8022%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,196 samples, 0.80%)</title><rect x="0.5522%" y="245" width="0.7979%" height="15" fill="rgb(249,43,39)" fg:x="2904" fg:w="4196"/><text x="0.8022%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,196 samples, 0.80%)</title><rect x="0.5522%" y="229" width="0.7979%" height="15" fill="rgb(209,38,44)" fg:x="2904" fg:w="4196"/><text x="0.8022%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,190 samples, 0.80%)</title><rect x="0.5534%" y="213" width="0.7968%" height="15" fill="rgb(236,212,23)" fg:x="2910" fg:w="4190"/><text x="0.8034%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,232 samples, 0.80%)</title><rect x="0.5467%" y="293" width="0.8047%" height="15" fill="rgb(242,79,21)" fg:x="2875" fg:w="4232"/><text x="0.7967%" y="303.50"></text></g><g><title>__GI___libc_malloc (88 samples, 0.02%)</title><rect x="1.3524%" y="181" width="0.0167%" height="15" fill="rgb(211,96,35)" fg:x="7112" fg:w="88"/><text x="1.6024%" y="191.50"></text></g><g><title>tcache_get (53 samples, 0.01%)</title><rect x="1.3590%" y="165" width="0.0101%" height="15" fill="rgb(253,215,40)" fg:x="7147" fg:w="53"/><text x="1.6090%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (111 samples, 0.02%)</title><rect x="1.3522%" y="229" width="0.0211%" height="15" fill="rgb(211,81,21)" fg:x="7111" fg:w="111"/><text x="1.6022%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (111 samples, 0.02%)</title><rect x="1.3522%" y="213" width="0.0211%" height="15" fill="rgb(208,190,38)" fg:x="7111" fg:w="111"/><text x="1.6022%" y="223.50"></text></g><g><title>alloc::alloc::alloc (110 samples, 0.02%)</title><rect x="1.3524%" y="197" width="0.0209%" height="15" fill="rgb(235,213,38)" fg:x="7112" fg:w="110"/><text x="1.6024%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,399 samples, 0.84%)</title><rect x="0.5383%" y="357" width="0.8365%" height="15" fill="rgb(237,122,38)" fg:x="2831" fg:w="4399"/><text x="0.7883%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,399 samples, 0.84%)</title><rect x="0.5383%" y="341" width="0.8365%" height="15" fill="rgb(244,218,35)" fg:x="2831" fg:w="4399"/><text x="0.7883%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,387 samples, 0.83%)</title><rect x="0.5406%" y="325" width="0.8342%" height="15" fill="rgb(240,68,47)" fg:x="2843" fg:w="4387"/><text x="0.7906%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,357 samples, 0.83%)</title><rect x="0.5463%" y="309" width="0.8285%" height="15" fill="rgb(210,16,53)" fg:x="2873" fg:w="4357"/><text x="0.7963%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (122 samples, 0.02%)</title><rect x="1.3516%" y="293" width="0.0232%" height="15" fill="rgb(235,124,12)" fg:x="7108" fg:w="122"/><text x="1.6016%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (122 samples, 0.02%)</title><rect x="1.3516%" y="277" width="0.0232%" height="15" fill="rgb(224,169,11)" fg:x="7108" fg:w="122"/><text x="1.6016%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (122 samples, 0.02%)</title><rect x="1.3516%" y="261" width="0.0232%" height="15" fill="rgb(250,166,2)" fg:x="7108" fg:w="122"/><text x="1.6016%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (122 samples, 0.02%)</title><rect x="1.3516%" y="245" width="0.0232%" height="15" fill="rgb(242,216,29)" fg:x="7108" fg:w="122"/><text x="1.6016%" y="255.50"></text></g><g><title>core::slice::sort::choose_pivot (109 samples, 0.02%)</title><rect x="1.4267%" y="309" width="0.0207%" height="15" fill="rgb(230,116,27)" fg:x="7503" fg:w="109"/><text x="1.6767%" y="319.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (79 samples, 0.02%)</title><rect x="1.4324%" y="293" width="0.0150%" height="15" fill="rgb(228,99,48)" fg:x="7533" fg:w="79"/><text x="1.6824%" y="303.50"></text></g><g><title>core::slice::sort::choose_pivot::{{closure}} (77 samples, 0.01%)</title><rect x="1.4328%" y="277" width="0.0146%" height="15" fill="rgb(253,11,6)" fg:x="7535" fg:w="77"/><text x="1.6828%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (200 samples, 0.04%)</title><rect x="1.4507%" y="293" width="0.0380%" height="15" fill="rgb(247,143,39)" fg:x="7629" fg:w="200"/><text x="1.7007%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (200 samples, 0.04%)</title><rect x="1.4507%" y="277" width="0.0380%" height="15" fill="rgb(236,97,10)" fg:x="7629" fg:w="200"/><text x="1.7007%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.01%)</title><rect x="1.5715%" y="277" width="0.0101%" height="15" fill="rgb(233,208,19)" fg:x="8264" fg:w="53"/><text x="1.8215%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (53 samples, 0.01%)</title><rect x="1.5715%" y="261" width="0.0101%" height="15" fill="rgb(216,164,2)" fg:x="8264" fg:w="53"/><text x="1.8215%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (53 samples, 0.01%)</title><rect x="1.5715%" y="245" width="0.0101%" height="15" fill="rgb(220,129,5)" fg:x="8264" fg:w="53"/><text x="1.8215%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (53 samples, 0.01%)</title><rect x="1.5715%" y="229" width="0.0101%" height="15" fill="rgb(242,17,10)" fg:x="8264" fg:w="53"/><text x="1.8215%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (263 samples, 0.05%)</title><rect x="1.5815%" y="277" width="0.0500%" height="15" fill="rgb(242,107,0)" fg:x="8317" fg:w="263"/><text x="1.8315%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::CopyOnDrop&lt;(crabchess::engine::Eval,u32)&gt;&gt; (81 samples, 0.02%)</title><rect x="1.6315%" y="277" width="0.0154%" height="15" fill="rgb(251,28,31)" fg:x="8580" fg:w="81"/><text x="1.8815%" y="287.50"></text></g><g><title>&lt;core::slice::sort::CopyOnDrop&lt;T&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.02%)</title><rect x="1.6315%" y="261" width="0.0154%" height="15" fill="rgb(233,223,10)" fg:x="8580" fg:w="81"/><text x="1.8815%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (81 samples, 0.02%)</title><rect x="1.6315%" y="245" width="0.0154%" height="15" fill="rgb(215,21,27)" fg:x="8580" fg:w="81"/><text x="1.8815%" y="255.50"></text></g><g><title>core::slice::sort::insertion_sort (1,742 samples, 0.33%)</title><rect x="1.4475%" y="309" width="0.3313%" height="15" fill="rgb(232,23,21)" fg:x="7612" fg:w="1742"/><text x="1.6975%" y="319.50"></text></g><g><title>core::slice::sort::shift_tail (1,525 samples, 0.29%)</title><rect x="1.4887%" y="293" width="0.2900%" height="15" fill="rgb(244,5,23)" fg:x="7829" fg:w="1525"/><text x="1.7387%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable::{{closure}} (687 samples, 0.13%)</title><rect x="1.6481%" y="277" width="0.1306%" height="15" fill="rgb(226,81,46)" fg:x="8667" fg:w="687"/><text x="1.8981%" y="287.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (A,B)&gt;::lt (687 samples, 0.13%)</title><rect x="1.6481%" y="261" width="0.1306%" height="15" fill="rgb(247,70,30)" fg:x="8667" fg:w="687"/><text x="1.8981%" y="271.50"></text></g><g><title>&lt;crabchess::engine::Eval as core::cmp::PartialEq&gt;::ne (72 samples, 0.01%)</title><rect x="1.7650%" y="245" width="0.0137%" height="15" fill="rgb(212,68,19)" fg:x="9282" fg:w="72"/><text x="2.0150%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable::{{closure}} (80 samples, 0.02%)</title><rect x="1.8029%" y="293" width="0.0152%" height="15" fill="rgb(240,187,13)" fg:x="9481" fg:w="80"/><text x="2.0529%" y="303.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (A,B)&gt;::lt (80 samples, 0.02%)</title><rect x="1.8029%" y="277" width="0.0152%" height="15" fill="rgb(223,113,26)" fg:x="9481" fg:w="80"/><text x="2.0529%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (67 samples, 0.01%)</title><rect x="1.8890%" y="277" width="0.0127%" height="15" fill="rgb(206,192,2)" fg:x="9934" fg:w="67"/><text x="2.1390%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (97 samples, 0.02%)</title><rect x="1.9018%" y="277" width="0.0184%" height="15" fill="rgb(241,108,4)" fg:x="10001" fg:w="97"/><text x="2.1518%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (97 samples, 0.02%)</title><rect x="1.9018%" y="261" width="0.0184%" height="15" fill="rgb(247,173,49)" fg:x="10001" fg:w="97"/><text x="2.1518%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (71 samples, 0.01%)</title><rect x="1.9232%" y="277" width="0.0135%" height="15" fill="rgb(224,114,35)" fg:x="10114" fg:w="71"/><text x="2.1732%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable::{{closure}} (229 samples, 0.04%)</title><rect x="1.9461%" y="277" width="0.0435%" height="15" fill="rgb(245,159,27)" fg:x="10234" fg:w="229"/><text x="2.1961%" y="287.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (A,B)&gt;::lt (229 samples, 0.04%)</title><rect x="1.9461%" y="261" width="0.0435%" height="15" fill="rgb(245,172,44)" fg:x="10234" fg:w="229"/><text x="2.1961%" y="271.50"></text></g><g><title>core::slice::sort::partition (1,104 samples, 0.21%)</title><rect x="1.7816%" y="309" width="0.2099%" height="15" fill="rgb(236,23,11)" fg:x="9369" fg:w="1104"/><text x="2.0316%" y="319.50"></text></g><g><title>core::slice::sort::partition_in_blocks (883 samples, 0.17%)</title><rect x="1.8236%" y="293" width="0.1679%" height="15" fill="rgb(205,117,38)" fg:x="9590" fg:w="883"/><text x="2.0736%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (131 samples, 0.02%)</title><rect x="2.0061%" y="277" width="0.0249%" height="15" fill="rgb(237,72,25)" fg:x="10550" fg:w="131"/><text x="2.2561%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (131 samples, 0.02%)</title><rect x="2.0061%" y="261" width="0.0249%" height="15" fill="rgb(244,70,9)" fg:x="10550" fg:w="131"/><text x="2.2561%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (92 samples, 0.02%)</title><rect x="2.0681%" y="261" width="0.0175%" height="15" fill="rgb(217,125,39)" fg:x="10876" fg:w="92"/><text x="2.3181%" y="271.50"></text></g><g><title>core::slice::sort::insertion_sort (752 samples, 0.14%)</title><rect x="2.0042%" y="293" width="0.1430%" height="15" fill="rgb(235,36,10)" fg:x="10540" fg:w="752"/><text x="2.2542%" y="303.50"></text></g><g><title>core::slice::sort::shift_tail (611 samples, 0.12%)</title><rect x="2.0311%" y="277" width="0.1162%" height="15" fill="rgb(251,123,47)" fg:x="10681" fg:w="611"/><text x="2.2811%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable::{{closure}} (274 samples, 0.05%)</title><rect x="2.0951%" y="261" width="0.0521%" height="15" fill="rgb(221,13,13)" fg:x="11018" fg:w="274"/><text x="2.3451%" y="271.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (A,B)&gt;::lt (274 samples, 0.05%)</title><rect x="2.0951%" y="245" width="0.0521%" height="15" fill="rgb(238,131,9)" fg:x="11018" fg:w="274"/><text x="2.3451%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable (4,040 samples, 0.77%)</title><rect x="1.3792%" y="357" width="0.7682%" height="15" fill="rgb(211,50,8)" fg:x="7253" fg:w="4040"/><text x="1.6292%" y="367.50"></text></g><g><title>core::slice::sort::quicksort (4,040 samples, 0.77%)</title><rect x="1.3792%" y="341" width="0.7682%" height="15" fill="rgb(245,182,24)" fg:x="7253" fg:w="4040"/><text x="1.6292%" y="351.50"></text></g><g><title>core::slice::sort::recurse (4,034 samples, 0.77%)</title><rect x="1.3803%" y="325" width="0.7671%" height="15" fill="rgb(242,14,37)" fg:x="7259" fg:w="4034"/><text x="1.6303%" y="335.50"></text></g><g><title>core::slice::sort::recurse (820 samples, 0.16%)</title><rect x="1.9915%" y="309" width="0.1559%" height="15" fill="rgb(246,228,12)" fg:x="10473" fg:w="820"/><text x="2.2415%" y="319.50"></text></g><g><title>core::intrinsics::copy (106 samples, 0.02%)</title><rect x="2.1860%" y="325" width="0.0202%" height="15" fill="rgb(213,55,15)" fg:x="11496" fg:w="106"/><text x="2.4360%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_cached_key (9,655 samples, 1.84%)</title><rect x="0.3704%" y="373" width="1.8360%" height="15" fill="rgb(209,9,3)" fg:x="1948" fg:w="9655"/><text x="0.6204%" y="383.50">a..</text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (310 samples, 0.06%)</title><rect x="2.1474%" y="357" width="0.0589%" height="15" fill="rgb(230,59,30)" fg:x="11293" fg:w="310"/><text x="2.3974%" y="367.50"></text></g><g><title>core::ptr::swap (151 samples, 0.03%)</title><rect x="2.1777%" y="341" width="0.0287%" height="15" fill="rgb(209,121,21)" fg:x="11452" fg:w="151"/><text x="2.4277%" y="351.50"></text></g><g><title>__GI___libc_free (53 samples, 0.01%)</title><rect x="2.2119%" y="245" width="0.0101%" height="15" fill="rgb(220,109,13)" fg:x="11632" fg:w="53"/><text x="2.4619%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (104 samples, 0.02%)</title><rect x="2.2117%" y="277" width="0.0198%" height="15" fill="rgb(232,18,1)" fg:x="11631" fg:w="104"/><text x="2.4617%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (104 samples, 0.02%)</title><rect x="2.2117%" y="261" width="0.0198%" height="15" fill="rgb(215,41,42)" fg:x="11631" fg:w="104"/><text x="2.4617%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;crabchess::moves::Move&gt;&gt; (112 samples, 0.02%)</title><rect x="2.2117%" y="373" width="0.0213%" height="15" fill="rgb(224,123,36)" fg:x="11631" fg:w="112"/><text x="2.4617%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.02%)</title><rect x="2.2117%" y="357" width="0.0213%" height="15" fill="rgb(240,125,3)" fg:x="11631" fg:w="112"/><text x="2.4617%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;crabchess::moves::Move,alloc::alloc::Global&gt;&gt; (112 samples, 0.02%)</title><rect x="2.2117%" y="341" width="0.0213%" height="15" fill="rgb(205,98,50)" fg:x="11631" fg:w="112"/><text x="2.4617%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.02%)</title><rect x="2.2117%" y="325" width="0.0213%" height="15" fill="rgb(205,185,37)" fg:x="11631" fg:w="112"/><text x="2.4617%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;crabchess::moves::Move&gt;&gt; (112 samples, 0.02%)</title><rect x="2.2117%" y="309" width="0.0213%" height="15" fill="rgb(238,207,15)" fg:x="11631" fg:w="112"/><text x="2.4617%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.02%)</title><rect x="2.2117%" y="293" width="0.0213%" height="15" fill="rgb(213,199,42)" fg:x="11631" fg:w="112"/><text x="2.4617%" y="303.50"></text></g><g><title>core::cmp::max (371 samples, 0.07%)</title><rect x="2.4585%" y="357" width="0.0705%" height="15" fill="rgb(235,201,11)" fg:x="12929" fg:w="371"/><text x="2.7085%" y="367.50"></text></g><g><title>core::cmp::Ord::max (371 samples, 0.07%)</title><rect x="2.4585%" y="341" width="0.0705%" height="15" fill="rgb(207,46,11)" fg:x="12929" fg:w="371"/><text x="2.7085%" y="351.50"></text></g><g><title>core::cmp::max_by (371 samples, 0.07%)</title><rect x="2.4585%" y="325" width="0.0705%" height="15" fill="rgb(241,35,35)" fg:x="12929" fg:w="371"/><text x="2.7085%" y="335.50"></text></g><g><title>__GI___libc_free (158 samples, 0.03%)</title><rect x="2.5308%" y="229" width="0.0300%" height="15" fill="rgb(243,32,47)" fg:x="13309" fg:w="158"/><text x="2.7808%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (346 samples, 0.07%)</title><rect x="2.5293%" y="261" width="0.0658%" height="15" fill="rgb(247,202,23)" fg:x="13301" fg:w="346"/><text x="2.7793%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (346 samples, 0.07%)</title><rect x="2.5293%" y="245" width="0.0658%" height="15" fill="rgb(219,102,11)" fg:x="13301" fg:w="346"/><text x="2.7793%" y="255.50"></text></g><g><title>_int_free (151 samples, 0.03%)</title><rect x="2.5664%" y="229" width="0.0287%" height="15" fill="rgb(243,110,44)" fg:x="13496" fg:w="151"/><text x="2.8164%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;crabchess::moves::Move&gt;&gt; (389 samples, 0.07%)</title><rect x="2.5293%" y="357" width="0.0740%" height="15" fill="rgb(222,74,54)" fg:x="13301" fg:w="389"/><text x="2.7793%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (389 samples, 0.07%)</title><rect x="2.5293%" y="341" width="0.0740%" height="15" fill="rgb(216,99,12)" fg:x="13301" fg:w="389"/><text x="2.7793%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;crabchess::moves::Move,alloc::alloc::Global&gt;&gt; (389 samples, 0.07%)</title><rect x="2.5293%" y="325" width="0.0740%" height="15" fill="rgb(226,22,26)" fg:x="13301" fg:w="389"/><text x="2.7793%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (389 samples, 0.07%)</title><rect x="2.5293%" y="309" width="0.0740%" height="15" fill="rgb(217,163,10)" fg:x="13301" fg:w="389"/><text x="2.7793%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;crabchess::moves::Move&gt;&gt; (389 samples, 0.07%)</title><rect x="2.5293%" y="293" width="0.0740%" height="15" fill="rgb(213,25,53)" fg:x="13301" fg:w="389"/><text x="2.7793%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (389 samples, 0.07%)</title><rect x="2.5293%" y="277" width="0.0740%" height="15" fill="rgb(252,105,26)" fg:x="13301" fg:w="389"/><text x="2.7793%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (850 samples, 0.16%)</title><rect x="3.8394%" y="309" width="0.1616%" height="15" fill="rgb(220,39,43)" fg:x="20191" fg:w="850"/><text x="4.0894%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (850 samples, 0.16%)</title><rect x="3.8394%" y="293" width="0.1616%" height="15" fill="rgb(229,68,48)" fg:x="20191" fg:w="850"/><text x="4.0894%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (499 samples, 0.09%)</title><rect x="3.9062%" y="277" width="0.0949%" height="15" fill="rgb(252,8,32)" fg:x="20542" fg:w="499"/><text x="4.1562%" y="287.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,191 samples, 0.23%)</title><rect x="3.8394%" y="325" width="0.2265%" height="15" fill="rgb(223,20,43)" fg:x="20191" fg:w="1191"/><text x="4.0894%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (341 samples, 0.06%)</title><rect x="4.0011%" y="309" width="0.0648%" height="15" fill="rgb(229,81,49)" fg:x="21041" fg:w="341"/><text x="4.2511%" y="319.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (341 samples, 0.06%)</title><rect x="4.0011%" y="293" width="0.0648%" height="15" fill="rgb(236,28,36)" fg:x="21041" fg:w="341"/><text x="4.2511%" y="303.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::iter::traits::iterator::Iterator&gt;::next (15,670 samples, 2.98%)</title><rect x="4.0659%" y="325" width="2.9798%" height="15" fill="rgb(249,185,26)" fg:x="21382" fg:w="15670"/><text x="4.3159%" y="335.50">&lt;cr..</text></g><g><title>&lt;crabchess::square::Square as core::convert::From&lt;crabchess::bitboard::Bitboard&gt;&gt;::from (1,083 samples, 0.21%)</title><rect x="6.8397%" y="309" width="0.2059%" height="15" fill="rgb(249,174,33)" fg:x="35969" fg:w="1083"/><text x="7.0897%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (1,083 samples, 0.21%)</title><rect x="6.8397%" y="293" width="0.2059%" height="15" fill="rgb(233,201,37)" fg:x="35969" fg:w="1083"/><text x="7.0897%" y="303.50"></text></g><g><title>&lt;crabchess::engine::Eval as core::ops::arith::AddAssign&gt;::add_assign (2,048 samples, 0.39%)</title><rect x="7.0461%" y="325" width="0.3894%" height="15" fill="rgb(221,78,26)" fg:x="37054" fg:w="2048"/><text x="7.2961%" y="335.50"></text></g><g><title>&lt;crabchess::engine::Eval as core::ops::arith::SubAssign&gt;::sub_assign (2,833 samples, 0.54%)</title><rect x="7.4355%" y="325" width="0.5387%" height="15" fill="rgb(250,127,30)" fg:x="39102" fg:w="2833"/><text x="7.6855%" y="335.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (376 samples, 0.07%)</title><rect x="7.9742%" y="309" width="0.0715%" height="15" fill="rgb(230,49,44)" fg:x="41935" fg:w="376"/><text x="8.2242%" y="319.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (1,122 samples, 0.21%)</title><rect x="7.9742%" y="325" width="0.2134%" height="15" fill="rgb(229,67,23)" fg:x="41935" fg:w="1122"/><text x="8.2242%" y="335.50"></text></g><g><title>crabchess::board::Board::get_type (746 samples, 0.14%)</title><rect x="8.0457%" y="309" width="0.1419%" height="15" fill="rgb(249,83,47)" fg:x="42311" fg:w="746"/><text x="8.2957%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (783 samples, 0.15%)</title><rect x="9.0161%" y="293" width="0.1489%" height="15" fill="rgb(215,43,3)" fg:x="47414" fg:w="783"/><text x="9.2661%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (783 samples, 0.15%)</title><rect x="9.0161%" y="277" width="0.1489%" height="15" fill="rgb(238,154,13)" fg:x="47414" fg:w="783"/><text x="9.2661%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (783 samples, 0.15%)</title><rect x="9.0161%" y="261" width="0.1489%" height="15" fill="rgb(219,56,2)" fg:x="47414" fg:w="783"/><text x="9.2661%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,212 samples, 0.23%)</title><rect x="9.0161%" y="309" width="0.2305%" height="15" fill="rgb(233,0,4)" fg:x="47414" fg:w="1212"/><text x="9.2661%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (429 samples, 0.08%)</title><rect x="9.1650%" y="293" width="0.0816%" height="15" fill="rgb(235,30,7)" fg:x="48197" fg:w="429"/><text x="9.4150%" y="303.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (429 samples, 0.08%)</title><rect x="9.1650%" y="277" width="0.0816%" height="15" fill="rgb(250,79,13)" fg:x="48197" fg:w="429"/><text x="9.4150%" y="287.50"></text></g><g><title>&lt;crabchess::engine::Eval as core::ops::arith::AddAssign&gt;::add_assign (1,740 samples, 0.33%)</title><rect x="9.2465%" y="309" width="0.3309%" height="15" fill="rgb(211,146,34)" fg:x="48626" fg:w="1740"/><text x="9.4965%" y="319.50"></text></g><g><title>&lt;crabchess::engine::Eval as core::ops::arith::Mul&lt;u32&gt;&gt;::mul (588 samples, 0.11%)</title><rect x="9.5774%" y="309" width="0.1118%" height="15" fill="rgb(228,22,38)" fg:x="50366" fg:w="588"/><text x="9.8274%" y="319.50"></text></g><g><title>&lt;crabchess::engine::Eval as core::ops::arith::SubAssign&gt;::sub_assign (346 samples, 0.07%)</title><rect x="9.6892%" y="309" width="0.0658%" height="15" fill="rgb(235,168,5)" fg:x="50954" fg:w="346"/><text x="9.9392%" y="319.50"></text></g><g><title>&lt;crabchess::square::Square as core::convert::From&lt;crabchess::bitboard::Bitboard&gt;&gt;::from (295 samples, 0.06%)</title><rect x="9.7550%" y="309" width="0.0561%" height="15" fill="rgb(221,155,16)" fg:x="51300" fg:w="295"/><text x="10.0050%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (295 samples, 0.06%)</title><rect x="9.7550%" y="293" width="0.0561%" height="15" fill="rgb(215,215,53)" fg:x="51300" fg:w="295"/><text x="10.0050%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (10,259 samples, 1.95%)</title><rect x="9.8111%" y="309" width="1.9508%" height="15" fill="rgb(223,4,10)" fg:x="51595" fg:w="10259"/><text x="10.0611%" y="319.50">c..</text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (400 samples, 0.08%)</title><rect x="11.7983%" y="293" width="0.0761%" height="15" fill="rgb(234,103,6)" fg:x="62045" fg:w="400"/><text x="12.0483%" y="303.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (1,756 samples, 0.33%)</title><rect x="11.7619%" y="309" width="0.3339%" height="15" fill="rgb(227,97,0)" fg:x="61854" fg:w="1756"/><text x="12.0119%" y="319.50"></text></g><g><title>crabchess::board::Board::get_type (1,129 samples, 0.21%)</title><rect x="11.8812%" y="293" width="0.2147%" height="15" fill="rgb(234,150,53)" fg:x="62481" fg:w="1129"/><text x="12.1312%" y="303.50"></text></g><g><title>crabchess::engine::greedy::piece_value (2,139 samples, 0.41%)</title><rect x="12.0958%" y="309" width="0.4067%" height="15" fill="rgb(228,201,54)" fg:x="63610" fg:w="2139"/><text x="12.3458%" y="319.50"></text></g><g><title>crabchess::engine::Eval::pawns (2,139 samples, 0.41%)</title><rect x="12.0958%" y="293" width="0.4067%" height="15" fill="rgb(222,22,37)" fg:x="63610" fg:w="2139"/><text x="12.3458%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (712 samples, 0.14%)</title><rect x="12.5298%" y="293" width="0.1354%" height="15" fill="rgb(237,53,32)" fg:x="65892" fg:w="712"/><text x="12.7798%" y="303.50"></text></g><g><title>crabchess::game::Game::get_board (864 samples, 0.16%)</title><rect x="12.5026%" y="309" width="0.1643%" height="15" fill="rgb(233,25,53)" fg:x="65749" fg:w="864"/><text x="12.7526%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (125 samples, 0.02%)</title><rect x="12.7108%" y="293" width="0.0238%" height="15" fill="rgb(210,40,34)" fg:x="66844" fg:w="125"/><text x="12.9608%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (287 samples, 0.05%)</title><rect x="13.3054%" y="277" width="0.0546%" height="15" fill="rgb(241,220,44)" fg:x="69971" fg:w="287"/><text x="13.5554%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (136 samples, 0.03%)</title><rect x="13.3341%" y="261" width="0.0259%" height="15" fill="rgb(235,28,35)" fg:x="70122" fg:w="136"/><text x="13.5841%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (131 samples, 0.02%)</title><rect x="13.3606%" y="277" width="0.0249%" height="15" fill="rgb(210,56,17)" fg:x="70261" fg:w="131"/><text x="13.6106%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (131 samples, 0.02%)</title><rect x="13.3606%" y="261" width="0.0249%" height="15" fill="rgb(224,130,29)" fg:x="70261" fg:w="131"/><text x="13.6106%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (131 samples, 0.02%)</title><rect x="13.3606%" y="245" width="0.0249%" height="15" fill="rgb(235,212,8)" fg:x="70261" fg:w="131"/><text x="13.6106%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (277 samples, 0.05%)</title><rect x="13.3855%" y="277" width="0.0527%" height="15" fill="rgb(223,33,50)" fg:x="70392" fg:w="277"/><text x="13.6355%" y="287.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::ne (169 samples, 0.03%)</title><rect x="13.4382%" y="277" width="0.0321%" height="15" fill="rgb(219,149,13)" fg:x="70669" fg:w="169"/><text x="13.6882%" y="287.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::iter::traits::iterator::Iterator&gt;::next (423 samples, 0.08%)</title><rect x="13.4703%" y="277" width="0.0804%" height="15" fill="rgb(250,156,29)" fg:x="70838" fg:w="423"/><text x="13.7203%" y="287.50"></text></g><g><title>&lt;crabchess::square::Square as core::convert::From&lt;crabchess::bitboard::Bitboard&gt;&gt;::from (203 samples, 0.04%)</title><rect x="13.5121%" y="261" width="0.0386%" height="15" fill="rgb(216,193,19)" fg:x="71058" fg:w="203"/><text x="13.7621%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (203 samples, 0.04%)</title><rect x="13.5121%" y="245" width="0.0386%" height="15" fill="rgb(216,135,14)" fg:x="71058" fg:w="203"/><text x="13.7621%" y="255.50"></text></g><g><title>&lt;crabchess::square::Square as core::cmp::PartialEq&gt;::eq (130 samples, 0.02%)</title><rect x="13.5507%" y="277" width="0.0247%" height="15" fill="rgb(241,47,5)" fg:x="71261" fg:w="130"/><text x="13.8007%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (338 samples, 0.06%)</title><rect x="13.6578%" y="245" width="0.0643%" height="15" fill="rgb(233,42,35)" fg:x="71824" fg:w="338"/><text x="13.9078%" y="255.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (169 samples, 0.03%)</title><rect x="13.8493%" y="213" width="0.0321%" height="15" fill="rgb(231,13,6)" fg:x="72831" fg:w="169"/><text x="14.0993%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (137 samples, 0.03%)</title><rect x="13.8814%" y="213" width="0.0261%" height="15" fill="rgb(207,181,40)" fg:x="73000" fg:w="137"/><text x="14.1314%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1,163 samples, 0.22%)</title><rect x="13.9075%" y="213" width="0.2212%" height="15" fill="rgb(254,173,49)" fg:x="73137" fg:w="1163"/><text x="14.1575%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1,038 samples, 0.20%)</title><rect x="13.9312%" y="197" width="0.1974%" height="15" fill="rgb(221,1,38)" fg:x="73262" fg:w="1038"/><text x="14.1812%" y="207.50"></text></g><g><title>checked_request2size (204 samples, 0.04%)</title><rect x="14.8541%" y="181" width="0.0388%" height="15" fill="rgb(206,124,46)" fg:x="78115" fg:w="204"/><text x="15.1041%" y="191.50"></text></g><g><title>__GI___libc_malloc (3,966 samples, 0.75%)</title><rect x="14.3849%" y="197" width="0.7542%" height="15" fill="rgb(249,21,11)" fg:x="75648" fg:w="3966"/><text x="14.6349%" y="207.50"></text></g><g><title>tcache_get (1,295 samples, 0.25%)</title><rect x="14.8929%" y="181" width="0.2463%" height="15" fill="rgb(222,201,40)" fg:x="78319" fg:w="1295"/><text x="15.1429%" y="191.50"></text></g><g><title>__rdl_alloc (466 samples, 0.09%)</title><rect x="15.1391%" y="197" width="0.0886%" height="15" fill="rgb(235,61,29)" fg:x="79614" fg:w="466"/><text x="15.3891%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (189 samples, 0.04%)</title><rect x="15.1918%" y="181" width="0.0359%" height="15" fill="rgb(219,207,3)" fg:x="79891" fg:w="189"/><text x="15.4418%" y="191.50"></text></g><g><title>__rust_alloc (227 samples, 0.04%)</title><rect x="15.2277%" y="197" width="0.0432%" height="15" fill="rgb(222,56,46)" fg:x="80080" fg:w="227"/><text x="15.4777%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (6,209 samples, 1.18%)</title><rect x="14.1286%" y="213" width="1.1807%" height="15" fill="rgb(239,76,54)" fg:x="74300" fg:w="6209"/><text x="14.3786%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (202 samples, 0.04%)</title><rect x="15.2709%" y="197" width="0.0384%" height="15" fill="rgb(231,124,27)" fg:x="80307" fg:w="202"/><text x="15.5209%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array (386 samples, 0.07%)</title><rect x="15.3093%" y="213" width="0.0734%" height="15" fill="rgb(249,195,6)" fg:x="80509" fg:w="386"/><text x="15.5593%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::repeat (386 samples, 0.07%)</title><rect x="15.3093%" y="197" width="0.0734%" height="15" fill="rgb(237,174,47)" fg:x="80509" fg:w="386"/><text x="15.5593%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (289 samples, 0.05%)</title><rect x="15.3277%" y="181" width="0.0550%" height="15" fill="rgb(206,201,31)" fg:x="80606" fg:w="289"/><text x="15.5777%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (289 samples, 0.05%)</title><rect x="15.3277%" y="165" width="0.0550%" height="15" fill="rgb(231,57,52)" fg:x="80606" fg:w="289"/><text x="15.5777%" y="175.50"></text></g><g><title>core::cmp::max (609 samples, 0.12%)</title><rect x="15.3827%" y="213" width="0.1158%" height="15" fill="rgb(248,177,22)" fg:x="80895" fg:w="609"/><text x="15.6327%" y="223.50"></text></g><g><title>core::cmp::Ord::max (609 samples, 0.12%)</title><rect x="15.3827%" y="197" width="0.1158%" height="15" fill="rgb(215,211,37)" fg:x="80895" fg:w="609"/><text x="15.6327%" y="207.50"></text></g><g><title>core::cmp::max_by (609 samples, 0.12%)</title><rect x="15.3827%" y="181" width="0.1158%" height="15" fill="rgb(241,128,51)" fg:x="80895" fg:w="609"/><text x="15.6327%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10,117 samples, 1.92%)</title><rect x="13.5926%" y="277" width="1.9238%" height="15" fill="rgb(227,165,31)" fg:x="71481" fg:w="10117"/><text x="13.8426%" y="287.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10,002 samples, 1.90%)</title><rect x="13.6144%" y="261" width="1.9019%" height="15" fill="rgb(228,167,24)" fg:x="71596" fg:w="10002"/><text x="13.8644%" y="271.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9,436 samples, 1.79%)</title><rect x="13.7221%" y="245" width="1.7943%" height="15" fill="rgb(228,143,12)" fg:x="72162" fg:w="9436"/><text x="13.9721%" y="255.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8,907 samples, 1.69%)</title><rect x="13.8227%" y="229" width="1.6937%" height="15" fill="rgb(249,149,8)" fg:x="72691" fg:w="8907"/><text x="14.0727%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (94 samples, 0.02%)</title><rect x="15.4985%" y="213" width="0.0179%" height="15" fill="rgb(243,35,44)" fg:x="81504" fg:w="94"/><text x="15.7485%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (94 samples, 0.02%)</title><rect x="15.4985%" y="197" width="0.0179%" height="15" fill="rgb(246,89,9)" fg:x="81504" fg:w="94"/><text x="15.7485%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (190 samples, 0.04%)</title><rect x="15.5164%" y="277" width="0.0361%" height="15" fill="rgb(233,213,13)" fg:x="81598" fg:w="190"/><text x="15.7664%" y="287.50"></text></g><g><title>__GI___libc_malloc (98 samples, 0.02%)</title><rect x="15.5550%" y="165" width="0.0186%" height="15" fill="rgb(233,141,41)" fg:x="81801" fg:w="98"/><text x="15.8050%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (130 samples, 0.02%)</title><rect x="15.5525%" y="277" width="0.0247%" height="15" fill="rgb(239,167,4)" fg:x="81788" fg:w="130"/><text x="15.8025%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (130 samples, 0.02%)</title><rect x="15.5525%" y="261" width="0.0247%" height="15" fill="rgb(209,217,16)" fg:x="81788" fg:w="130"/><text x="15.8025%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (127 samples, 0.02%)</title><rect x="15.5531%" y="245" width="0.0241%" height="15" fill="rgb(219,88,35)" fg:x="81791" fg:w="127"/><text x="15.8031%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (127 samples, 0.02%)</title><rect x="15.5531%" y="229" width="0.0241%" height="15" fill="rgb(220,193,23)" fg:x="81791" fg:w="127"/><text x="15.8031%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (124 samples, 0.02%)</title><rect x="15.5536%" y="213" width="0.0236%" height="15" fill="rgb(230,90,52)" fg:x="81794" fg:w="124"/><text x="15.8036%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (124 samples, 0.02%)</title><rect x="15.5536%" y="197" width="0.0236%" height="15" fill="rgb(252,106,19)" fg:x="81794" fg:w="124"/><text x="15.8036%" y="207.50"></text></g><g><title>alloc::alloc::alloc (122 samples, 0.02%)</title><rect x="15.5540%" y="181" width="0.0232%" height="15" fill="rgb(206,74,20)" fg:x="81796" fg:w="122"/><text x="15.8040%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (1,969 samples, 0.37%)</title><rect x="15.5772%" y="277" width="0.3744%" height="15" fill="rgb(230,138,44)" fg:x="81918" fg:w="1969"/><text x="15.8272%" y="287.50"></text></g><g><title>__GI___libc_free (1,208 samples, 0.23%)</title><rect x="15.9743%" y="197" width="0.2297%" height="15" fill="rgb(235,182,43)" fg:x="84006" fg:w="1208"/><text x="16.2243%" y="207.50"></text></g><g><title>__rdl_dealloc (172 samples, 0.03%)</title><rect x="16.2040%" y="197" width="0.0327%" height="15" fill="rgb(242,16,51)" fg:x="85214" fg:w="172"/><text x="16.4540%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (172 samples, 0.03%)</title><rect x="16.2040%" y="181" width="0.0327%" height="15" fill="rgb(248,9,4)" fg:x="85214" fg:w="172"/><text x="16.4540%" y="191.50"></text></g><g><title>__rust_dealloc (169 samples, 0.03%)</title><rect x="16.2367%" y="197" width="0.0321%" height="15" fill="rgb(210,31,22)" fg:x="85386" fg:w="169"/><text x="16.4867%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,221 samples, 0.80%)</title><rect x="15.9520%" y="229" width="0.8027%" height="15" fill="rgb(239,54,39)" fg:x="83889" fg:w="4221"/><text x="16.2020%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (4,221 samples, 0.80%)</title><rect x="15.9520%" y="213" width="0.8027%" height="15" fill="rgb(230,99,41)" fg:x="83889" fg:w="4221"/><text x="16.2020%" y="223.50"></text></g><g><title>_int_free (2,555 samples, 0.49%)</title><rect x="16.2688%" y="197" width="0.4858%" height="15" fill="rgb(253,106,12)" fg:x="85555" fg:w="2555"/><text x="16.5188%" y="207.50"></text></g><g><title>tcache_put (303 samples, 0.06%)</title><rect x="16.6971%" y="181" width="0.0576%" height="15" fill="rgb(213,46,41)" fg:x="87807" fg:w="303"/><text x="16.9471%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;crabchess::moves::Move&gt;&gt; (4,400 samples, 0.84%)</title><rect x="15.9516%" y="277" width="0.8367%" height="15" fill="rgb(215,133,35)" fg:x="83887" fg:w="4400"/><text x="16.2016%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;crabchess::moves::Move&gt;&gt; (4,400 samples, 0.84%)</title><rect x="15.9516%" y="261" width="0.8367%" height="15" fill="rgb(213,28,5)" fg:x="83887" fg:w="4400"/><text x="16.2016%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,400 samples, 0.84%)</title><rect x="15.9516%" y="245" width="0.8367%" height="15" fill="rgb(215,77,49)" fg:x="83887" fg:w="4400"/><text x="16.2016%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (177 samples, 0.03%)</title><rect x="16.7547%" y="229" width="0.0337%" height="15" fill="rgb(248,100,22)" fg:x="88110" fg:w="177"/><text x="17.0047%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (114 samples, 0.02%)</title><rect x="16.7883%" y="181" width="0.0217%" height="15" fill="rgb(208,67,9)" fg:x="88287" fg:w="114"/><text x="17.0383%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (114 samples, 0.02%)</title><rect x="16.7883%" y="165" width="0.0217%" height="15" fill="rgb(219,133,21)" fg:x="88287" fg:w="114"/><text x="17.0383%" y="175.50"></text></g><g><title>_int_free (64 samples, 0.01%)</title><rect x="16.7978%" y="149" width="0.0122%" height="15" fill="rgb(246,46,29)" fg:x="88337" fg:w="64"/><text x="17.0478%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;crabchess::moves::Move&gt;&gt; (119 samples, 0.02%)</title><rect x="16.7883%" y="277" width="0.0226%" height="15" fill="rgb(246,185,52)" fg:x="88287" fg:w="119"/><text x="17.0383%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (119 samples, 0.02%)</title><rect x="16.7883%" y="261" width="0.0226%" height="15" fill="rgb(252,136,11)" fg:x="88287" fg:w="119"/><text x="17.0383%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;crabchess::moves::Move,alloc::alloc::Global&gt;&gt; (119 samples, 0.02%)</title><rect x="16.7883%" y="245" width="0.0226%" height="15" fill="rgb(219,138,53)" fg:x="88287" fg:w="119"/><text x="17.0383%" y="255.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (119 samples, 0.02%)</title><rect x="16.7883%" y="229" width="0.0226%" height="15" fill="rgb(211,51,23)" fg:x="88287" fg:w="119"/><text x="17.0383%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;crabchess::moves::Move&gt;&gt; (119 samples, 0.02%)</title><rect x="16.7883%" y="213" width="0.0226%" height="15" fill="rgb(247,221,28)" fg:x="88287" fg:w="119"/><text x="17.0383%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (119 samples, 0.02%)</title><rect x="16.7883%" y="197" width="0.0226%" height="15" fill="rgb(251,222,45)" fg:x="88287" fg:w="119"/><text x="17.0383%" y="207.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (308 samples, 0.06%)</title><rect x="16.8110%" y="277" width="0.0586%" height="15" fill="rgb(217,162,53)" fg:x="88406" fg:w="308"/><text x="17.0610%" y="287.50"></text></g><g><title>crabchess::board::Board::get_color_occupancy (68 samples, 0.01%)</title><rect x="16.8566%" y="261" width="0.0129%" height="15" fill="rgb(229,93,14)" fg:x="88646" fg:w="68"/><text x="17.1066%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (158 samples, 0.03%)</title><rect x="17.3048%" y="245" width="0.0300%" height="15" fill="rgb(209,67,49)" fg:x="91003" fg:w="158"/><text x="17.5548%" y="255.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (56 samples, 0.01%)</title><rect x="17.3348%" y="245" width="0.0106%" height="15" fill="rgb(213,87,29)" fg:x="91161" fg:w="56"/><text x="17.5848%" y="255.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (256 samples, 0.05%)</title><rect x="17.3455%" y="245" width="0.0487%" height="15" fill="rgb(205,151,52)" fg:x="91217" fg:w="256"/><text x="17.5955%" y="255.50"></text></g><g><title>&lt;crabchess::square::Square as core::ops::arith::Add&lt;crabchess::direction::Direction&gt;&gt;::add (142 samples, 0.03%)</title><rect x="17.3942%" y="245" width="0.0270%" height="15" fill="rgb(253,215,39)" fg:x="91473" fg:w="142"/><text x="17.6442%" y="255.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (353 samples, 0.07%)</title><rect x="17.4212%" y="229" width="0.0671%" height="15" fill="rgb(221,220,41)" fg:x="91615" fg:w="353"/><text x="17.6712%" y="239.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (404 samples, 0.08%)</title><rect x="17.4212%" y="245" width="0.0768%" height="15" fill="rgb(218,133,21)" fg:x="91615" fg:w="404"/><text x="17.6712%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (631 samples, 0.12%)</title><rect x="17.4980%" y="197" width="0.1200%" height="15" fill="rgb(221,193,43)" fg:x="92019" fg:w="631"/><text x="17.7480%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (503 samples, 0.10%)</title><rect x="17.5223%" y="181" width="0.0956%" height="15" fill="rgb(240,128,52)" fg:x="92147" fg:w="503"/><text x="17.7723%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (678 samples, 0.13%)</title><rect x="17.4980%" y="213" width="0.1289%" height="15" fill="rgb(253,114,12)" fg:x="92019" fg:w="678"/><text x="17.7480%" y="223.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (884 samples, 0.17%)</title><rect x="17.4980%" y="245" width="0.1681%" height="15" fill="rgb(215,223,47)" fg:x="92019" fg:w="884"/><text x="17.7480%" y="255.50"></text></g><g><title>crabchess::magic::get_attacks (884 samples, 0.17%)</title><rect x="17.4980%" y="229" width="0.1681%" height="15" fill="rgb(248,225,23)" fg:x="92019" fg:w="884"/><text x="17.7480%" y="239.50"></text></g><g><title>crabchess::magic::compute_magic_key (162 samples, 0.03%)</title><rect x="17.6353%" y="213" width="0.0308%" height="15" fill="rgb(250,108,0)" fg:x="92741" fg:w="162"/><text x="17.8853%" y="223.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::arith::Mul&gt;::mul (103 samples, 0.02%)</title><rect x="17.6465%" y="197" width="0.0196%" height="15" fill="rgb(228,208,7)" fg:x="92800" fg:w="103"/><text x="17.8965%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (103 samples, 0.02%)</title><rect x="17.6465%" y="181" width="0.0196%" height="15" fill="rgb(244,45,10)" fg:x="92800" fg:w="103"/><text x="17.8965%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (185 samples, 0.04%)</title><rect x="17.7001%" y="197" width="0.0352%" height="15" fill="rgb(207,125,25)" fg:x="93082" fg:w="185"/><text x="17.9501%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (198 samples, 0.04%)</title><rect x="17.7001%" y="213" width="0.0377%" height="15" fill="rgb(210,195,18)" fg:x="93082" fg:w="198"/><text x="17.9501%" y="223.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (98 samples, 0.02%)</title><rect x="17.7378%" y="213" width="0.0186%" height="15" fill="rgb(249,80,12)" fg:x="93280" fg:w="98"/><text x="17.9878%" y="223.50"></text></g><g><title>crabchess::magic::get_rook_attacks (702 samples, 0.13%)</title><rect x="17.6661%" y="245" width="0.1335%" height="15" fill="rgb(221,65,9)" fg:x="92903" fg:w="702"/><text x="17.9161%" y="255.50"></text></g><g><title>crabchess::magic::get_attacks (702 samples, 0.13%)</title><rect x="17.6661%" y="229" width="0.1335%" height="15" fill="rgb(235,49,36)" fg:x="92903" fg:w="702"/><text x="17.9161%" y="239.50"></text></g><g><title>crabchess::magic::compute_magic_key (227 samples, 0.04%)</title><rect x="17.7564%" y="213" width="0.0432%" height="15" fill="rgb(225,32,20)" fg:x="93378" fg:w="227"/><text x="18.0064%" y="223.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::arith::Mul&gt;::mul (122 samples, 0.02%)</title><rect x="17.7764%" y="197" width="0.0232%" height="15" fill="rgb(215,141,46)" fg:x="93483" fg:w="122"/><text x="18.0264%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (122 samples, 0.02%)</title><rect x="17.7764%" y="181" width="0.0232%" height="15" fill="rgb(250,160,47)" fg:x="93483" fg:w="122"/><text x="18.0264%" y="191.50"></text></g><g><title>core::cmp::max (154 samples, 0.03%)</title><rect x="17.8690%" y="229" width="0.0293%" height="15" fill="rgb(216,222,40)" fg:x="93970" fg:w="154"/><text x="18.1190%" y="239.50"></text></g><g><title>core::cmp::Ord::max (154 samples, 0.03%)</title><rect x="17.8690%" y="213" width="0.0293%" height="15" fill="rgb(234,217,39)" fg:x="93970" fg:w="154"/><text x="18.1190%" y="223.50"></text></g><g><title>core::cmp::max_by (154 samples, 0.03%)</title><rect x="17.8690%" y="197" width="0.0293%" height="15" fill="rgb(207,178,40)" fg:x="93970" fg:w="154"/><text x="18.1190%" y="207.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (526 samples, 0.10%)</title><rect x="17.8983%" y="229" width="0.1000%" height="15" fill="rgb(221,136,13)" fg:x="94124" fg:w="526"/><text x="18.1483%" y="239.50"></text></g><g><title>crabchess::square::Square::file (390 samples, 0.07%)</title><rect x="17.9983%" y="229" width="0.0742%" height="15" fill="rgb(249,199,10)" fg:x="94650" fg:w="390"/><text x="18.2483%" y="239.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (1,957 samples, 0.37%)</title><rect x="17.7996%" y="245" width="0.3721%" height="15" fill="rgb(249,222,13)" fg:x="93605" fg:w="1957"/><text x="18.0496%" y="255.50"></text></g><g><title>crabchess::square::Square::rank (522 samples, 0.10%)</title><rect x="18.0725%" y="229" width="0.0993%" height="15" fill="rgb(244,185,38)" fg:x="95040" fg:w="522"/><text x="18.3225%" y="239.50"></text></g><g><title>crabchess::util::opposite_color (183 samples, 0.03%)</title><rect x="18.1717%" y="245" width="0.0348%" height="15" fill="rgb(236,202,9)" fg:x="95562" fg:w="183"/><text x="18.4217%" y="255.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_square_attackers (7,150 samples, 1.36%)</title><rect x="16.8695%" y="277" width="1.3596%" height="15" fill="rgb(250,229,37)" fg:x="88714" fg:w="7150"/><text x="17.1195%" y="287.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (6,902 samples, 1.31%)</title><rect x="16.9167%" y="261" width="1.3125%" height="15" fill="rgb(206,174,23)" fg:x="88962" fg:w="6902"/><text x="17.1667%" y="271.50"></text></g><g><title>crabchess::util::pawn_direction (119 samples, 0.02%)</title><rect x="18.2065%" y="245" width="0.0226%" height="15" fill="rgb(211,33,43)" fg:x="95745" fg:w="119"/><text x="18.4565%" y="255.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (219 samples, 0.04%)</title><rect x="18.5188%" y="261" width="0.0416%" height="15" fill="rgb(245,58,50)" fg:x="97387" fg:w="219"/><text x="18.7688%" y="271.50"></text></g><g><title>&lt;crabchess::square::Square as core::convert::From&lt;crabchess::bitboard::Bitboard&gt;&gt;::from (150 samples, 0.03%)</title><rect x="18.5636%" y="261" width="0.0285%" height="15" fill="rgb(244,68,36)" fg:x="97623" fg:w="150"/><text x="18.8136%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (150 samples, 0.03%)</title><rect x="18.5636%" y="245" width="0.0285%" height="15" fill="rgb(232,229,15)" fg:x="97623" fg:w="150"/><text x="18.8136%" y="255.50"></text></g><g><title>crabchess::board::Board::color_at_square (488 samples, 0.09%)</title><rect x="18.5929%" y="261" width="0.0928%" height="15" fill="rgb(254,30,23)" fg:x="97777" fg:w="488"/><text x="18.8429%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (174 samples, 0.03%)</title><rect x="18.6526%" y="245" width="0.0331%" height="15" fill="rgb(235,160,14)" fg:x="98091" fg:w="174"/><text x="18.9026%" y="255.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (124 samples, 0.02%)</title><rect x="18.6863%" y="261" width="0.0236%" height="15" fill="rgb(212,155,44)" fg:x="98268" fg:w="124"/><text x="18.9363%" y="271.50"></text></g><g><title>crabchess::board::Board::get_color_occupancy (113 samples, 0.02%)</title><rect x="18.6884%" y="245" width="0.0215%" height="15" fill="rgb(226,2,50)" fg:x="98279" fg:w="113"/><text x="18.9384%" y="255.50"></text></g><g><title>&lt;crabchess::square::Square as core::cmp::PartialEq&gt;::eq (177 samples, 0.03%)</title><rect x="18.7121%" y="245" width="0.0337%" height="15" fill="rgb(234,177,6)" fg:x="98404" fg:w="177"/><text x="18.9621%" y="255.50"></text></g><g><title>crabchess::board::Board::is_move_en_passant (384 samples, 0.07%)</title><rect x="18.7099%" y="261" width="0.0730%" height="15" fill="rgb(217,24,9)" fg:x="98392" fg:w="384"/><text x="18.9599%" y="271.50"></text></g><g><title>crabchess::moves::Move::to_square (195 samples, 0.04%)</title><rect x="18.7458%" y="245" width="0.0371%" height="15" fill="rgb(220,13,46)" fg:x="98581" fg:w="195"/><text x="18.9958%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (233 samples, 0.04%)</title><rect x="18.8145%" y="165" width="0.0443%" height="15" fill="rgb(239,221,27)" fg:x="98942" fg:w="233"/><text x="19.0645%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (226 samples, 0.04%)</title><rect x="18.8158%" y="149" width="0.0430%" height="15" fill="rgb(222,198,25)" fg:x="98949" fg:w="226"/><text x="19.0658%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (235 samples, 0.04%)</title><rect x="18.8145%" y="181" width="0.0447%" height="15" fill="rgb(211,99,13)" fg:x="98942" fg:w="235"/><text x="19.0645%" y="191.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (259 samples, 0.05%)</title><rect x="18.8145%" y="213" width="0.0493%" height="15" fill="rgb(232,111,31)" fg:x="98942" fg:w="259"/><text x="19.0645%" y="223.50"></text></g><g><title>crabchess::magic::get_attacks (259 samples, 0.05%)</title><rect x="18.8145%" y="197" width="0.0493%" height="15" fill="rgb(245,82,37)" fg:x="98942" fg:w="259"/><text x="19.0645%" y="207.50"></text></g><g><title>crabchess::magic::get_rook_attacks (87 samples, 0.02%)</title><rect x="18.8637%" y="213" width="0.0165%" height="15" fill="rgb(227,149,46)" fg:x="99201" fg:w="87"/><text x="19.1137%" y="223.50"></text></g><g><title>crabchess::magic::get_attacks (87 samples, 0.02%)</title><rect x="18.8637%" y="197" width="0.0165%" height="15" fill="rgb(218,36,50)" fg:x="99201" fg:w="87"/><text x="19.1137%" y="207.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (63 samples, 0.01%)</title><rect x="18.8802%" y="213" width="0.0120%" height="15" fill="rgb(226,80,48)" fg:x="99288" fg:w="63"/><text x="19.1302%" y="223.50"></text></g><g><title>crabchess::movegen::MoveGenerator::is_square_attacked_by (584 samples, 0.11%)</title><rect x="18.7829%" y="261" width="0.1111%" height="15" fill="rgb(238,224,15)" fg:x="98776" fg:w="584"/><text x="19.0329%" y="271.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_square_attackers (584 samples, 0.11%)</title><rect x="18.7829%" y="245" width="0.1111%" height="15" fill="rgb(241,136,10)" fg:x="98776" fg:w="584"/><text x="19.0329%" y="255.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (565 samples, 0.11%)</title><rect x="18.7865%" y="229" width="0.1074%" height="15" fill="rgb(208,32,45)" fg:x="98795" fg:w="565"/><text x="19.0365%" y="239.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (240 samples, 0.05%)</title><rect x="19.3092%" y="245" width="0.0456%" height="15" fill="rgb(207,135,9)" fg:x="101544" fg:w="240"/><text x="19.5592%" y="255.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (127 samples, 0.02%)</title><rect x="19.3549%" y="245" width="0.0241%" height="15" fill="rgb(206,86,44)" fg:x="101784" fg:w="127"/><text x="19.6049%" y="255.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (325 samples, 0.06%)</title><rect x="19.3790%" y="245" width="0.0618%" height="15" fill="rgb(245,177,15)" fg:x="101911" fg:w="325"/><text x="19.6290%" y="255.50"></text></g><g><title>&lt;crabchess::square::Square as core::ops::arith::Add&lt;crabchess::direction::Direction&gt;&gt;::add (159 samples, 0.03%)</title><rect x="19.4408%" y="245" width="0.0302%" height="15" fill="rgb(206,64,50)" fg:x="102236" fg:w="159"/><text x="19.6908%" y="255.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (361 samples, 0.07%)</title><rect x="19.4711%" y="229" width="0.0686%" height="15" fill="rgb(234,36,40)" fg:x="102395" fg:w="361"/><text x="19.7211%" y="239.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (367 samples, 0.07%)</title><rect x="19.4711%" y="245" width="0.0698%" height="15" fill="rgb(213,64,8)" fg:x="102395" fg:w="367"/><text x="19.7211%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (370 samples, 0.07%)</title><rect x="19.5408%" y="197" width="0.0704%" height="15" fill="rgb(210,75,36)" fg:x="102762" fg:w="370"/><text x="19.7908%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (177 samples, 0.03%)</title><rect x="19.5775%" y="181" width="0.0337%" height="15" fill="rgb(229,88,21)" fg:x="102955" fg:w="177"/><text x="19.8275%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (379 samples, 0.07%)</title><rect x="19.5408%" y="213" width="0.0721%" height="15" fill="rgb(252,204,47)" fg:x="102762" fg:w="379"/><text x="19.7908%" y="223.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (625 samples, 0.12%)</title><rect x="19.5408%" y="245" width="0.1188%" height="15" fill="rgb(208,77,27)" fg:x="102762" fg:w="625"/><text x="19.7908%" y="255.50"></text></g><g><title>crabchess::magic::get_attacks (625 samples, 0.12%)</title><rect x="19.5408%" y="229" width="0.1188%" height="15" fill="rgb(221,76,26)" fg:x="102762" fg:w="625"/><text x="19.7908%" y="239.50"></text></g><g><title>crabchess::magic::compute_magic_key (219 samples, 0.04%)</title><rect x="19.6181%" y="213" width="0.0416%" height="15" fill="rgb(225,139,18)" fg:x="103168" fg:w="219"/><text x="19.8681%" y="223.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::arith::Mul&gt;::mul (116 samples, 0.02%)</title><rect x="19.6376%" y="197" width="0.0221%" height="15" fill="rgb(230,137,11)" fg:x="103271" fg:w="116"/><text x="19.8876%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (116 samples, 0.02%)</title><rect x="19.6376%" y="181" width="0.0221%" height="15" fill="rgb(212,28,1)" fg:x="103271" fg:w="116"/><text x="19.8876%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (188 samples, 0.04%)</title><rect x="19.6662%" y="197" width="0.0357%" height="15" fill="rgb(248,164,17)" fg:x="103421" fg:w="188"/><text x="19.9162%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (267 samples, 0.05%)</title><rect x="19.6662%" y="213" width="0.0508%" height="15" fill="rgb(222,171,42)" fg:x="103421" fg:w="267"/><text x="19.9162%" y="223.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (79 samples, 0.02%)</title><rect x="19.7019%" y="197" width="0.0150%" height="15" fill="rgb(243,84,45)" fg:x="103609" fg:w="79"/><text x="19.9519%" y="207.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (79 samples, 0.02%)</title><rect x="19.7019%" y="181" width="0.0150%" height="15" fill="rgb(252,49,23)" fg:x="103609" fg:w="79"/><text x="19.9519%" y="191.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (220 samples, 0.04%)</title><rect x="19.7169%" y="213" width="0.0418%" height="15" fill="rgb(215,19,7)" fg:x="103688" fg:w="220"/><text x="19.9669%" y="223.50"></text></g><g><title>crabchess::magic::get_rook_attacks (897 samples, 0.17%)</title><rect x="19.6597%" y="245" width="0.1706%" height="15" fill="rgb(238,81,41)" fg:x="103387" fg:w="897"/><text x="19.9097%" y="255.50"></text></g><g><title>crabchess::magic::get_attacks (897 samples, 0.17%)</title><rect x="19.6597%" y="229" width="0.1706%" height="15" fill="rgb(210,199,37)" fg:x="103387" fg:w="897"/><text x="19.9097%" y="239.50"></text></g><g><title>crabchess::magic::compute_magic_key (376 samples, 0.07%)</title><rect x="19.7588%" y="213" width="0.0715%" height="15" fill="rgb(244,192,49)" fg:x="103908" fg:w="376"/><text x="20.0088%" y="223.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::arith::Mul&gt;::mul (288 samples, 0.05%)</title><rect x="19.7755%" y="197" width="0.0548%" height="15" fill="rgb(226,211,11)" fg:x="103996" fg:w="288"/><text x="20.0255%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (288 samples, 0.05%)</title><rect x="19.7755%" y="181" width="0.0548%" height="15" fill="rgb(236,162,54)" fg:x="103996" fg:w="288"/><text x="20.0255%" y="191.50"></text></g><g><title>core::cmp::max (134 samples, 0.03%)</title><rect x="19.8527%" y="229" width="0.0255%" height="15" fill="rgb(220,229,9)" fg:x="104402" fg:w="134"/><text x="20.1027%" y="239.50"></text></g><g><title>core::cmp::Ord::max (134 samples, 0.03%)</title><rect x="19.8527%" y="213" width="0.0255%" height="15" fill="rgb(250,87,22)" fg:x="104402" fg:w="134"/><text x="20.1027%" y="223.50"></text></g><g><title>core::cmp::max_by (134 samples, 0.03%)</title><rect x="19.8527%" y="197" width="0.0255%" height="15" fill="rgb(239,43,17)" fg:x="104402" fg:w="134"/><text x="20.1027%" y="207.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (725 samples, 0.14%)</title><rect x="19.8782%" y="229" width="0.1379%" height="15" fill="rgb(231,177,25)" fg:x="104536" fg:w="725"/><text x="20.1282%" y="239.50"></text></g><g><title>crabchess::square::Square::file (472 samples, 0.09%)</title><rect x="20.0160%" y="229" width="0.0898%" height="15" fill="rgb(219,179,1)" fg:x="105261" fg:w="472"/><text x="20.2660%" y="239.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (1,958 samples, 0.37%)</title><rect x="19.8303%" y="245" width="0.3723%" height="15" fill="rgb(238,219,53)" fg:x="104284" fg:w="1958"/><text x="20.0803%" y="255.50"></text></g><g><title>crabchess::square::Square::rank (509 samples, 0.10%)</title><rect x="20.1058%" y="229" width="0.0968%" height="15" fill="rgb(232,167,36)" fg:x="105733" fg:w="509"/><text x="20.3558%" y="239.50"></text></g><g><title>crabchess::util::opposite_color (164 samples, 0.03%)</title><rect x="20.2026%" y="245" width="0.0312%" height="15" fill="rgb(244,19,51)" fg:x="106242" fg:w="164"/><text x="20.4526%" y="255.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (7,243 samples, 1.38%)</title><rect x="18.8939%" y="261" width="1.3773%" height="15" fill="rgb(224,6,22)" fg:x="99360" fg:w="7243"/><text x="19.1439%" y="271.50"></text></g><g><title>crabchess::util::pawn_direction (197 samples, 0.04%)</title><rect x="20.2338%" y="245" width="0.0375%" height="15" fill="rgb(224,145,5)" fg:x="106406" fg:w="197"/><text x="20.4838%" y="255.50"></text></g><g><title>crabchess::movegen::MoveGenerator::is_move_self_check (11,499 samples, 2.19%)</title><rect x="18.2291%" y="277" width="2.1866%" height="15" fill="rgb(234,130,49)" fg:x="95864" fg:w="11499"/><text x="18.4791%" y="287.50">c..</text></g><g><title>crabchess::util::opposite_color (756 samples, 0.14%)</title><rect x="20.2720%" y="261" width="0.1438%" height="15" fill="rgb(254,6,2)" fg:x="106607" fg:w="756"/><text x="20.5220%" y="271.50"></text></g><g><title>crabchess::movegen::MoveGenerator::king_moves (108 samples, 0.02%)</title><rect x="20.4158%" y="277" width="0.0205%" height="15" fill="rgb(208,96,46)" fg:x="107363" fg:w="108"/><text x="20.6658%" y="287.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (312 samples, 0.06%)</title><rect x="21.5645%" y="261" width="0.0593%" height="15" fill="rgb(239,3,39)" fg:x="113404" fg:w="312"/><text x="21.8145%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (312 samples, 0.06%)</title><rect x="21.5645%" y="245" width="0.0593%" height="15" fill="rgb(233,210,1)" fg:x="113404" fg:w="312"/><text x="21.8145%" y="255.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (312 samples, 0.06%)</title><rect x="21.5645%" y="229" width="0.0593%" height="15" fill="rgb(244,137,37)" fg:x="113404" fg:w="312"/><text x="21.8145%" y="239.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::ne (99 samples, 0.02%)</title><rect x="21.6238%" y="261" width="0.0188%" height="15" fill="rgb(240,136,2)" fg:x="113716" fg:w="99"/><text x="21.8738%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (290 samples, 0.06%)</title><rect x="21.6426%" y="261" width="0.0551%" height="15" fill="rgb(239,18,37)" fg:x="113815" fg:w="290"/><text x="21.8926%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (118 samples, 0.02%)</title><rect x="21.6978%" y="261" width="0.0224%" height="15" fill="rgb(218,185,22)" fg:x="114105" fg:w="118"/><text x="21.9478%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (62 samples, 0.01%)</title><rect x="21.7202%" y="261" width="0.0118%" height="15" fill="rgb(225,218,4)" fg:x="114223" fg:w="62"/><text x="21.9702%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (203 samples, 0.04%)</title><rect x="21.7320%" y="261" width="0.0386%" height="15" fill="rgb(230,182,32)" fg:x="114285" fg:w="203"/><text x="21.9820%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::Not&gt;::not (129 samples, 0.02%)</title><rect x="21.7706%" y="261" width="0.0245%" height="15" fill="rgb(242,56,43)" fg:x="114488" fg:w="129"/><text x="22.0206%" y="271.50"></text></g><g><title>&lt;crabchess::square::Square as core::cmp::PartialEq&gt;::eq (88 samples, 0.02%)</title><rect x="21.7952%" y="261" width="0.0167%" height="15" fill="rgb(233,99,24)" fg:x="114617" fg:w="88"/><text x="22.0452%" y="271.50"></text></g><g><title>crabchess::bitboard::Bitboard::is_square_occupied (304 samples, 0.06%)</title><rect x="21.8157%" y="261" width="0.0578%" height="15" fill="rgb(234,209,42)" fg:x="114725" fg:w="304"/><text x="22.0657%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (126 samples, 0.02%)</title><rect x="22.0481%" y="245" width="0.0240%" height="15" fill="rgb(227,7,12)" fg:x="115947" fg:w="126"/><text x="22.2981%" y="255.50"></text></g><g><title>crabchess::board::Board::color_at_square (1,348 samples, 0.26%)</title><rect x="21.8735%" y="261" width="0.2563%" height="15" fill="rgb(245,203,43)" fg:x="115029" fg:w="1348"/><text x="22.1235%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (304 samples, 0.06%)</title><rect x="22.0720%" y="245" width="0.0578%" height="15" fill="rgb(238,205,33)" fg:x="116073" fg:w="304"/><text x="22.3220%" y="255.50"></text></g><g><title>crabchess::board::Board::get_color_occupancy (180 samples, 0.03%)</title><rect x="22.1298%" y="261" width="0.0342%" height="15" fill="rgb(231,56,7)" fg:x="116377" fg:w="180"/><text x="22.3798%" y="271.50"></text></g><g><title>core::cmp::max (156 samples, 0.03%)</title><rect x="22.3274%" y="245" width="0.0297%" height="15" fill="rgb(244,186,29)" fg:x="117416" fg:w="156"/><text x="22.5774%" y="255.50"></text></g><g><title>core::cmp::Ord::max (156 samples, 0.03%)</title><rect x="22.3274%" y="229" width="0.0297%" height="15" fill="rgb(234,111,31)" fg:x="117416" fg:w="156"/><text x="22.5774%" y="239.50"></text></g><g><title>core::cmp::max_by (156 samples, 0.03%)</title><rect x="22.3274%" y="213" width="0.0297%" height="15" fill="rgb(241,149,10)" fg:x="117416" fg:w="156"/><text x="22.5774%" y="223.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (1,148 samples, 0.22%)</title><rect x="22.3571%" y="245" width="0.2183%" height="15" fill="rgb(249,206,44)" fg:x="117572" fg:w="1148"/><text x="22.6071%" y="255.50"></text></g><g><title>crabchess::square::Square::file (193 samples, 0.04%)</title><rect x="22.5754%" y="245" width="0.0367%" height="15" fill="rgb(251,153,30)" fg:x="118720" fg:w="193"/><text x="22.8254%" y="255.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (2,777 samples, 0.53%)</title><rect x="22.1698%" y="261" width="0.5281%" height="15" fill="rgb(239,152,38)" fg:x="116587" fg:w="2777"/><text x="22.4198%" y="271.50"></text></g><g><title>crabchess::square::Square::rank (451 samples, 0.09%)</title><rect x="22.6121%" y="245" width="0.0858%" height="15" fill="rgb(249,139,47)" fg:x="118913" fg:w="451"/><text x="22.8621%" y="255.50"></text></g><g><title>crabchess::util::pawn_direction (781 samples, 0.15%)</title><rect x="22.6978%" y="261" width="0.1485%" height="15" fill="rgb(244,64,35)" fg:x="119364" fg:w="781"/><text x="22.9478%" y="271.50"></text></g><g><title>crabchess::movegen::MoveGenerator::pawn_moves (12,871 samples, 2.45%)</title><rect x="20.4363%" y="277" width="2.4475%" height="15" fill="rgb(216,46,15)" fg:x="107471" fg:w="12871"/><text x="20.6863%" y="287.50">cr..</text></g><g><title>crabchess::util::pawn_start_rank (197 samples, 0.04%)</title><rect x="22.8463%" y="261" width="0.0375%" height="15" fill="rgb(250,74,19)" fg:x="120145" fg:w="197"/><text x="23.0963%" y="271.50"></text></g><g><title>crabchess::movegen::MoveGenerator::sq_pseudolegal_moves (1,586 samples, 0.30%)</title><rect x="22.8838%" y="277" width="0.3016%" height="15" fill="rgb(249,42,33)" fg:x="120342" fg:w="1586"/><text x="23.1338%" y="287.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::iter::traits::iterator::Iterator&gt;::next (365 samples, 0.07%)</title><rect x="23.2400%" y="245" width="0.0694%" height="15" fill="rgb(242,149,17)" fg:x="122215" fg:w="365"/><text x="23.4900%" y="255.50"></text></g><g><title>&lt;crabchess::square::Square as core::convert::From&lt;crabchess::bitboard::Bitboard&gt;&gt;::from (94 samples, 0.02%)</title><rect x="23.2915%" y="229" width="0.0179%" height="15" fill="rgb(244,29,21)" fg:x="122486" fg:w="94"/><text x="23.5415%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (94 samples, 0.02%)</title><rect x="23.2915%" y="213" width="0.0179%" height="15" fill="rgb(220,130,37)" fg:x="122486" fg:w="94"/><text x="23.5415%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (96 samples, 0.02%)</title><rect x="23.4689%" y="229" width="0.0183%" height="15" fill="rgb(211,67,2)" fg:x="123419" fg:w="96"/><text x="23.7189%" y="239.50"></text></g><g><title>crabchess::movegen::bitboard_to_moves (1,608 samples, 0.31%)</title><rect x="23.1854%" y="277" width="0.3058%" height="15" fill="rgb(235,68,52)" fg:x="121928" fg:w="1608"/><text x="23.4354%" y="287.50"></text></g><g><title>crabchess::movegen::bitboard_to_promotions (1,608 samples, 0.31%)</title><rect x="23.1854%" y="261" width="0.3058%" height="15" fill="rgb(246,142,3)" fg:x="121928" fg:w="1608"/><text x="23.4354%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (956 samples, 0.18%)</title><rect x="23.3094%" y="245" width="0.1818%" height="15" fill="rgb(241,25,7)" fg:x="122580" fg:w="956"/><text x="23.5594%" y="255.50"></text></g><g><title>crabchess::movegen::MoveGenerator::has_moves (56,747 samples, 10.79%)</title><rect x="12.7346%" y="293" width="10.7908%" height="15" fill="rgb(242,119,39)" fg:x="66969" fg:w="56747"/><text x="12.9846%" y="303.50">crabchess::moveg..</text></g><g><title>crabchess::util::opposite_color (180 samples, 0.03%)</title><rect x="23.4912%" y="277" width="0.0342%" height="15" fill="rgb(241,98,45)" fg:x="123536" fg:w="180"/><text x="23.7412%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (340 samples, 0.06%)</title><rect x="23.8931%" y="117" width="0.0647%" height="15" fill="rgb(254,28,30)" fg:x="125650" fg:w="340"/><text x="24.1431%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (730 samples, 0.14%)</title><rect x="23.8507%" y="133" width="0.1388%" height="15" fill="rgb(241,142,54)" fg:x="125427" fg:w="730"/><text x="24.1007%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (167 samples, 0.03%)</title><rect x="23.9578%" y="117" width="0.0318%" height="15" fill="rgb(222,85,15)" fg:x="125990" fg:w="167"/><text x="24.2078%" y="127.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (2,538 samples, 0.48%)</title><rect x="23.5686%" y="229" width="0.4826%" height="15" fill="rgb(210,85,47)" fg:x="123943" fg:w="2538"/><text x="23.8186%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,251 samples, 0.43%)</title><rect x="23.6231%" y="213" width="0.4280%" height="15" fill="rgb(224,206,25)" fg:x="124230" fg:w="2251"/><text x="23.8731%" y="223.50"></text></g><g><title>core::hash::Hasher::write_u64 (2,251 samples, 0.43%)</title><rect x="23.6231%" y="197" width="0.4280%" height="15" fill="rgb(243,201,19)" fg:x="124230" fg:w="2251"/><text x="23.8731%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,249 samples, 0.43%)</title><rect x="23.6235%" y="181" width="0.4277%" height="15" fill="rgb(236,59,4)" fg:x="124232" fg:w="2249"/><text x="23.8735%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,249 samples, 0.43%)</title><rect x="23.6235%" y="165" width="0.4277%" height="15" fill="rgb(254,179,45)" fg:x="124232" fg:w="2249"/><text x="23.8735%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,249 samples, 0.43%)</title><rect x="23.6235%" y="149" width="0.4277%" height="15" fill="rgb(226,14,10)" fg:x="124232" fg:w="2249"/><text x="23.8735%" y="159.50"></text></g><g><title>core::hash::sip::u8to64_le (324 samples, 0.06%)</title><rect x="23.9896%" y="133" width="0.0616%" height="15" fill="rgb(244,27,41)" fg:x="126157" fg:w="324"/><text x="24.2396%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (370 samples, 0.07%)</title><rect x="24.1995%" y="165" width="0.0704%" height="15" fill="rgb(235,35,32)" fg:x="127261" fg:w="370"/><text x="24.4495%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (703 samples, 0.13%)</title><rect x="24.1658%" y="181" width="0.1337%" height="15" fill="rgb(218,68,31)" fg:x="127084" fg:w="703"/><text x="24.4158%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (156 samples, 0.03%)</title><rect x="24.2698%" y="165" width="0.0297%" height="15" fill="rgb(207,120,37)" fg:x="127631" fg:w="156"/><text x="24.5198%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (793 samples, 0.15%)</title><rect x="24.4109%" y="165" width="0.1508%" height="15" fill="rgb(227,98,0)" fg:x="128373" fg:w="793"/><text x="24.6609%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3,520 samples, 0.67%)</title><rect x="24.0512%" y="229" width="0.6694%" height="15" fill="rgb(207,7,3)" fg:x="126481" fg:w="3520"/><text x="24.3012%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,520 samples, 0.67%)</title><rect x="24.0512%" y="213" width="0.6694%" height="15" fill="rgb(206,98,19)" fg:x="126481" fg:w="3520"/><text x="24.3012%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,520 samples, 0.67%)</title><rect x="24.0512%" y="197" width="0.6694%" height="15" fill="rgb(217,5,26)" fg:x="126481" fg:w="3520"/><text x="24.3012%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,214 samples, 0.42%)</title><rect x="24.2995%" y="181" width="0.4210%" height="15" fill="rgb(235,190,38)" fg:x="127787" fg:w="2214"/><text x="24.5495%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (835 samples, 0.16%)</title><rect x="24.5617%" y="165" width="0.1588%" height="15" fill="rgb(247,86,24)" fg:x="129166" fg:w="835"/><text x="24.8117%" y="175.50"></text></g><g><title>hashbrown::map::make_hash (6,971 samples, 1.33%)</title><rect x="23.5362%" y="245" width="1.3256%" height="15" fill="rgb(205,101,16)" fg:x="123773" fg:w="6971"/><text x="23.7862%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (743 samples, 0.14%)</title><rect x="24.7205%" y="229" width="0.1413%" height="15" fill="rgb(246,168,33)" fg:x="130001" fg:w="743"/><text x="24.9705%" y="239.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (530 samples, 0.10%)</title><rect x="24.7610%" y="213" width="0.1008%" height="15" fill="rgb(231,114,1)" fg:x="130214" fg:w="530"/><text x="25.0110%" y="223.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (352 samples, 0.07%)</title><rect x="24.7949%" y="197" width="0.0669%" height="15" fill="rgb(207,184,53)" fg:x="130392" fg:w="352"/><text x="25.0449%" y="207.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (352 samples, 0.07%)</title><rect x="24.7949%" y="181" width="0.0669%" height="15" fill="rgb(224,95,51)" fg:x="130392" fg:w="352"/><text x="25.0449%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (948 samples, 0.18%)</title><rect x="25.0626%" y="213" width="0.1803%" height="15" fill="rgb(212,188,45)" fg:x="131800" fg:w="948"/><text x="25.3126%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (948 samples, 0.18%)</title><rect x="25.0626%" y="197" width="0.1803%" height="15" fill="rgb(223,154,38)" fg:x="131800" fg:w="948"/><text x="25.3126%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (767 samples, 0.15%)</title><rect x="25.0970%" y="181" width="0.1458%" height="15" fill="rgb(251,22,52)" fg:x="131981" fg:w="767"/><text x="25.3470%" y="191.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (383 samples, 0.07%)</title><rect x="25.1700%" y="165" width="0.0728%" height="15" fill="rgb(229,209,22)" fg:x="132365" fg:w="383"/><text x="25.4200%" y="175.50"></text></g><g><title>&lt;crabchess::castling::CastleRights as core::cmp::PartialEq&gt;::eq (103 samples, 0.02%)</title><rect x="25.3695%" y="181" width="0.0196%" height="15" fill="rgb(234,138,34)" fg:x="133414" fg:w="103"/><text x="25.6195%" y="191.50"></text></g><g><title>&lt;crabchess::square::Square as core::cmp::PartialEq&gt;::eq (98 samples, 0.02%)</title><rect x="25.3891%" y="181" width="0.0186%" height="15" fill="rgb(212,95,11)" fg:x="133517" fg:w="98"/><text x="25.6391%" y="191.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2,958 samples, 0.56%)</title><rect x="25.2429%" y="213" width="0.5625%" height="15" fill="rgb(240,179,47)" fg:x="132748" fg:w="2958"/><text x="25.4929%" y="223.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (2,958 samples, 0.56%)</title><rect x="25.2429%" y="197" width="0.5625%" height="15" fill="rgb(240,163,11)" fg:x="132748" fg:w="2958"/><text x="25.4929%" y="207.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (2,091 samples, 0.40%)</title><rect x="25.4077%" y="181" width="0.3976%" height="15" fill="rgb(236,37,12)" fg:x="133615" fg:w="2091"/><text x="25.6577%" y="191.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (2,091 samples, 0.40%)</title><rect x="25.4077%" y="165" width="0.3976%" height="15" fill="rgb(232,164,16)" fg:x="133615" fg:w="2091"/><text x="25.6577%" y="175.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2,091 samples, 0.40%)</title><rect x="25.4077%" y="149" width="0.3976%" height="15" fill="rgb(244,205,15)" fg:x="133615" fg:w="2091"/><text x="25.6577%" y="159.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2,091 samples, 0.40%)</title><rect x="25.4077%" y="133" width="0.3976%" height="15" fill="rgb(223,117,47)" fg:x="133615" fg:w="2091"/><text x="25.6577%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2,091 samples, 0.40%)</title><rect x="25.4077%" y="117" width="0.3976%" height="15" fill="rgb(244,107,35)" fg:x="133615" fg:w="2091"/><text x="25.6577%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,091 samples, 0.40%)</title><rect x="25.4077%" y="101" width="0.3976%" height="15" fill="rgb(205,140,8)" fg:x="133615" fg:w="2091"/><text x="25.6577%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (284 samples, 0.05%)</title><rect x="25.7514%" y="85" width="0.0540%" height="15" fill="rgb(228,84,46)" fg:x="135422" fg:w="284"/><text x="26.0014%" y="95.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (284 samples, 0.05%)</title><rect x="25.7514%" y="69" width="0.0540%" height="15" fill="rgb(254,188,9)" fg:x="135422" fg:w="284"/><text x="26.0014%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (284 samples, 0.05%)</title><rect x="25.7514%" y="53" width="0.0540%" height="15" fill="rgb(206,112,54)" fg:x="135422" fg:w="284"/><text x="26.0014%" y="63.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (284 samples, 0.05%)</title><rect x="25.7514%" y="37" width="0.0540%" height="15" fill="rgb(216,84,49)" fg:x="135422" fg:w="284"/><text x="26.0014%" y="47.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (345 samples, 0.07%)</title><rect x="25.8054%" y="213" width="0.0656%" height="15" fill="rgb(214,194,35)" fg:x="135706" fg:w="345"/><text x="26.0554%" y="223.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (345 samples, 0.07%)</title><rect x="25.8054%" y="197" width="0.0656%" height="15" fill="rgb(249,28,3)" fg:x="135706" fg:w="345"/><text x="26.0554%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (345 samples, 0.07%)</title><rect x="25.8054%" y="181" width="0.0656%" height="15" fill="rgb(222,56,52)" fg:x="135706" fg:w="345"/><text x="26.0554%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (345 samples, 0.07%)</title><rect x="25.8054%" y="165" width="0.0656%" height="15" fill="rgb(245,217,50)" fg:x="135706" fg:w="345"/><text x="26.0554%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (137 samples, 0.03%)</title><rect x="25.8814%" y="165" width="0.0261%" height="15" fill="rgb(213,201,24)" fg:x="136106" fg:w="137"/><text x="26.1314%" y="175.50"></text></g><g><title>hashbrown::raw::h2 (139 samples, 0.03%)</title><rect x="25.9075%" y="165" width="0.0264%" height="15" fill="rgb(248,116,28)" fg:x="136243" fg:w="139"/><text x="26.1575%" y="175.50"></text></g><g><title>crabchess::engine::greedy::greedy_evaluate (94,843 samples, 18.04%)</title><rect x="8.1961%" y="325" width="18.0350%" height="15" fill="rgb(219,72,43)" fg:x="43102" fg:w="94843"/><text x="8.4461%" y="335.50">crabchess::engine::greedy::g..</text></g><g><title>crabchess::game::Game::is_game_over (71,332 samples, 13.56%)</title><rect x="12.6669%" y="309" width="13.5642%" height="15" fill="rgb(209,138,14)" fg:x="66613" fg:w="71332"/><text x="12.9169%" y="319.50">crabchess::game::Gam..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14,229 samples, 2.71%)</title><rect x="23.5254%" y="293" width="2.7057%" height="15" fill="rgb(222,18,33)" fg:x="123716" fg:w="14229"/><text x="23.7754%" y="303.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14,229 samples, 2.71%)</title><rect x="23.5254%" y="277" width="2.7057%" height="15" fill="rgb(213,199,7)" fg:x="123716" fg:w="14229"/><text x="23.7754%" y="287.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14,172 samples, 2.69%)</title><rect x="23.5362%" y="261" width="2.6949%" height="15" fill="rgb(250,110,10)" fg:x="123773" fg:w="14172"/><text x="23.7862%" y="271.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7,201 samples, 1.37%)</title><rect x="24.8618%" y="245" width="1.3693%" height="15" fill="rgb(248,123,6)" fg:x="130744" fg:w="7201"/><text x="25.1118%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7,201 samples, 1.37%)</title><rect x="24.8618%" y="229" width="1.3693%" height="15" fill="rgb(206,91,31)" fg:x="130744" fg:w="7201"/><text x="25.1118%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1,894 samples, 0.36%)</title><rect x="25.8710%" y="213" width="0.3602%" height="15" fill="rgb(211,154,13)" fg:x="136051" fg:w="1894"/><text x="26.1210%" y="223.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1,894 samples, 0.36%)</title><rect x="25.8710%" y="197" width="0.3602%" height="15" fill="rgb(225,148,7)" fg:x="136051" fg:w="1894"/><text x="26.1210%" y="207.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1,894 samples, 0.36%)</title><rect x="25.8710%" y="181" width="0.3602%" height="15" fill="rgb(220,160,43)" fg:x="136051" fg:w="1894"/><text x="26.1210%" y="191.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,538 samples, 0.29%)</title><rect x="25.9387%" y="165" width="0.2925%" height="15" fill="rgb(213,52,39)" fg:x="136407" fg:w="1538"/><text x="26.1887%" y="175.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1,538 samples, 0.29%)</title><rect x="25.9387%" y="149" width="0.2925%" height="15" fill="rgb(243,137,7)" fg:x="136407" fg:w="1538"/><text x="26.1887%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1,538 samples, 0.29%)</title><rect x="25.9387%" y="133" width="0.2925%" height="15" fill="rgb(230,79,13)" fg:x="136407" fg:w="1538"/><text x="26.1887%" y="143.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1,538 samples, 0.29%)</title><rect x="25.9387%" y="117" width="0.2925%" height="15" fill="rgb(247,105,23)" fg:x="136407" fg:w="1538"/><text x="26.1887%" y="127.50"></text></g><g><title>crabchess::engine::positional::value_at_square (71,154 samples, 13.53%)</title><rect x="26.2311%" y="325" width="13.5304%" height="15" fill="rgb(223,179,41)" fg:x="137945" fg:w="71154"/><text x="26.4811%" y="335.50">crabchess::engine::p..</text></g><g><title>crabchess::engine::Eval::pawns (71,154 samples, 13.53%)</title><rect x="26.2311%" y="309" width="13.5304%" height="15" fill="rgb(218,9,34)" fg:x="137945" fg:w="71154"/><text x="26.4811%" y="319.50">crabchess::engine::E..</text></g><g><title>crabchess::game::Game::get_board (224 samples, 0.04%)</title><rect x="39.7615%" y="325" width="0.0426%" height="15" fill="rgb(222,106,8)" fg:x="209099" fg:w="224"/><text x="40.0115%" y="335.50"></text></g><g><title>crabchess::engine::positional::positional_evaluate (197,773 samples, 37.61%)</title><rect x="3.1226%" y="341" width="37.6078%" height="15" fill="rgb(211,220,0)" fg:x="16421" fg:w="197773"/><text x="3.3726%" y="351.50">crabchess::engine::positional::positional_evaluate</text></g><g><title>crabchess::square::Square::new (4,871 samples, 0.93%)</title><rect x="39.8041%" y="325" width="0.9263%" height="15" fill="rgb(229,52,16)" fg:x="209323" fg:w="4871"/><text x="40.0541%" y="335.50"></text></g><g><title>crabchess::game::Game::get_board (351 samples, 0.07%)</title><rect x="40.7304%" y="341" width="0.0667%" height="15" fill="rgb(212,155,18)" fg:x="214194" fg:w="351"/><text x="40.9804%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (176 samples, 0.03%)</title><rect x="40.7636%" y="325" width="0.0335%" height="15" fill="rgb(242,21,14)" fg:x="214369" fg:w="176"/><text x="41.0136%" y="335.50"></text></g><g><title>core::ptr::read (130 samples, 0.02%)</title><rect x="41.1740%" y="309" width="0.0247%" height="15" fill="rgb(222,19,48)" fg:x="216527" fg:w="130"/><text x="41.4240%" y="319.50"></text></g><g><title>core::mem::replace (283 samples, 0.05%)</title><rect x="41.1740%" y="325" width="0.0538%" height="15" fill="rgb(232,45,27)" fg:x="216527" fg:w="283"/><text x="41.4240%" y="335.50"></text></g><g><title>core::ptr::write (153 samples, 0.03%)</title><rect x="41.1987%" y="309" width="0.0291%" height="15" fill="rgb(249,103,42)" fg:x="216657" fg:w="153"/><text x="41.4487%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (188 samples, 0.04%)</title><rect x="41.5613%" y="197" width="0.0357%" height="15" fill="rgb(246,81,33)" fg:x="218564" fg:w="188"/><text x="41.8113%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (844 samples, 0.16%)</title><rect x="41.4959%" y="213" width="0.1605%" height="15" fill="rgb(252,33,42)" fg:x="218220" fg:w="844"/><text x="41.7459%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (312 samples, 0.06%)</title><rect x="41.5971%" y="197" width="0.0593%" height="15" fill="rgb(209,212,41)" fg:x="218752" fg:w="312"/><text x="41.8471%" y="207.50"></text></g><g><title>core::hash::sip::u8to64_le (324 samples, 0.06%)</title><rect x="41.6564%" y="213" width="0.0616%" height="15" fill="rgb(207,154,6)" fg:x="219064" fg:w="324"/><text x="41.9064%" y="223.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (2,445 samples, 0.46%)</title><rect x="41.2535%" y="309" width="0.4649%" height="15" fill="rgb(223,64,47)" fg:x="216945" fg:w="2445"/><text x="41.5035%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,220 samples, 0.42%)</title><rect x="41.2963%" y="293" width="0.4221%" height="15" fill="rgb(211,161,38)" fg:x="217170" fg:w="2220"/><text x="41.5463%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u64 (2,220 samples, 0.42%)</title><rect x="41.2963%" y="277" width="0.4221%" height="15" fill="rgb(219,138,40)" fg:x="217170" fg:w="2220"/><text x="41.5463%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,199 samples, 0.42%)</title><rect x="41.3003%" y="261" width="0.4182%" height="15" fill="rgb(241,228,46)" fg:x="217191" fg:w="2199"/><text x="41.5503%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,199 samples, 0.42%)</title><rect x="41.3003%" y="245" width="0.4182%" height="15" fill="rgb(223,209,38)" fg:x="217191" fg:w="2199"/><text x="41.5503%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,199 samples, 0.42%)</title><rect x="41.3003%" y="229" width="0.4182%" height="15" fill="rgb(236,164,45)" fg:x="217191" fg:w="2199"/><text x="41.5503%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (364 samples, 0.07%)</title><rect x="41.8431%" y="245" width="0.0692%" height="15" fill="rgb(231,15,5)" fg:x="220046" fg:w="364"/><text x="42.0931%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (674 samples, 0.13%)</title><rect x="41.8163%" y="261" width="0.1282%" height="15" fill="rgb(252,35,15)" fg:x="219905" fg:w="674"/><text x="42.0663%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (169 samples, 0.03%)</title><rect x="41.9124%" y="245" width="0.0321%" height="15" fill="rgb(248,181,18)" fg:x="220410" fg:w="169"/><text x="42.1624%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (584 samples, 0.11%)</title><rect x="42.0379%" y="245" width="0.1111%" height="15" fill="rgb(233,39,42)" fg:x="221070" fg:w="584"/><text x="42.2879%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2,955 samples, 0.56%)</title><rect x="41.7184%" y="309" width="0.5619%" height="15" fill="rgb(238,110,33)" fg:x="219390" fg:w="2955"/><text x="41.9684%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,955 samples, 0.56%)</title><rect x="41.7184%" y="293" width="0.5619%" height="15" fill="rgb(233,195,10)" fg:x="219390" fg:w="2955"/><text x="41.9684%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,955 samples, 0.56%)</title><rect x="41.7184%" y="277" width="0.5619%" height="15" fill="rgb(254,105,3)" fg:x="219390" fg:w="2955"/><text x="41.9684%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,766 samples, 0.34%)</title><rect x="41.9445%" y="261" width="0.3358%" height="15" fill="rgb(221,225,9)" fg:x="220579" fg:w="1766"/><text x="42.1945%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (691 samples, 0.13%)</title><rect x="42.1489%" y="245" width="0.1314%" height="15" fill="rgb(224,227,45)" fg:x="221654" fg:w="691"/><text x="42.3989%" y="255.50"></text></g><g><title>hashbrown::map::make_insert_hash (6,272 samples, 1.19%)</title><rect x="41.2278%" y="325" width="1.1927%" height="15" fill="rgb(229,198,43)" fg:x="216810" fg:w="6272"/><text x="41.4778%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (737 samples, 0.14%)</title><rect x="42.2803%" y="309" width="0.1401%" height="15" fill="rgb(206,209,35)" fg:x="222345" fg:w="737"/><text x="42.5303%" y="319.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (545 samples, 0.10%)</title><rect x="42.3168%" y="293" width="0.1036%" height="15" fill="rgb(245,195,53)" fg:x="222537" fg:w="545"/><text x="42.5668%" y="303.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (404 samples, 0.08%)</title><rect x="42.3436%" y="277" width="0.0768%" height="15" fill="rgb(240,92,26)" fg:x="222678" fg:w="404"/><text x="42.5936%" y="287.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (404 samples, 0.08%)</title><rect x="42.3436%" y="261" width="0.0768%" height="15" fill="rgb(207,40,23)" fg:x="222678" fg:w="404"/><text x="42.5936%" y="271.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6,395 samples, 1.22%)</title><rect x="42.7327%" y="245" width="1.2160%" height="15" fill="rgb(223,111,35)" fg:x="224724" fg:w="6395"/><text x="42.9827%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6,673 samples, 1.27%)</title><rect x="42.7325%" y="261" width="1.2689%" height="15" fill="rgb(229,147,28)" fg:x="224723" fg:w="6673"/><text x="42.9825%" y="271.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (277 samples, 0.05%)</title><rect x="43.9487%" y="245" width="0.0527%" height="15" fill="rgb(211,29,28)" fg:x="231119" fg:w="277"/><text x="44.1987%" y="255.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (241 samples, 0.05%)</title><rect x="44.0014%" y="261" width="0.0458%" height="15" fill="rgb(228,72,33)" fg:x="231396" fg:w="241"/><text x="44.2514%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,866 samples, 1.50%)</title><rect x="42.6243%" y="293" width="1.4958%" height="15" fill="rgb(205,214,31)" fg:x="224154" fg:w="7866"/><text x="42.8743%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,866 samples, 1.50%)</title><rect x="42.6243%" y="277" width="1.4958%" height="15" fill="rgb(224,111,15)" fg:x="224154" fg:w="7866"/><text x="42.8743%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (371 samples, 0.07%)</title><rect x="44.0495%" y="261" width="0.0705%" height="15" fill="rgb(253,21,26)" fg:x="231649" fg:w="371"/><text x="44.2995%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (371 samples, 0.07%)</title><rect x="44.0495%" y="245" width="0.0705%" height="15" fill="rgb(245,139,43)" fg:x="231649" fg:w="371"/><text x="44.2995%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (371 samples, 0.07%)</title><rect x="44.0495%" y="229" width="0.0705%" height="15" fill="rgb(252,170,7)" fg:x="231649" fg:w="371"/><text x="44.2995%" y="239.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (26,178 samples, 4.98%)</title><rect x="44.1201%" y="293" width="4.9779%" height="15" fill="rgb(231,118,14)" fg:x="232020" fg:w="26178"/><text x="44.3701%" y="303.50">hashbr..</text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (26,178 samples, 4.98%)</title><rect x="44.1201%" y="277" width="4.9779%" height="15" fill="rgb(238,83,0)" fg:x="232020" fg:w="26178"/><text x="44.3701%" y="287.50">&lt;crabc..</text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (25,691 samples, 4.89%)</title><rect x="44.2127%" y="261" width="4.8853%" height="15" fill="rgb(221,39,39)" fg:x="232507" fg:w="25691"/><text x="44.4627%" y="271.50">core::..</text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (25,691 samples, 4.89%)</title><rect x="44.2127%" y="245" width="4.8853%" height="15" fill="rgb(222,119,46)" fg:x="232507" fg:w="25691"/><text x="44.4627%" y="255.50">&lt;T as ..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (25,691 samples, 4.89%)</title><rect x="44.2127%" y="229" width="4.8853%" height="15" fill="rgb(222,165,49)" fg:x="232507" fg:w="25691"/><text x="44.4627%" y="239.50">core::..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (25,691 samples, 4.89%)</title><rect x="44.2127%" y="213" width="4.8853%" height="15" fill="rgb(219,113,52)" fg:x="232507" fg:w="25691"/><text x="44.4627%" y="223.50">&lt;[A] a..</text></g><g><title>core::iter::traits::iterator::Iterator::all (25,691 samples, 4.89%)</title><rect x="44.2127%" y="197" width="4.8853%" height="15" fill="rgb(214,7,15)" fg:x="232507" fg:w="25691"/><text x="44.4627%" y="207.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25,691 samples, 4.89%)</title><rect x="44.2127%" y="181" width="4.8853%" height="15" fill="rgb(235,32,4)" fg:x="232507" fg:w="25691"/><text x="44.4627%" y="191.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (237 samples, 0.05%)</title><rect x="49.0529%" y="165" width="0.0451%" height="15" fill="rgb(238,90,54)" fg:x="257961" fg:w="237"/><text x="49.3029%" y="175.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (237 samples, 0.05%)</title><rect x="49.0529%" y="149" width="0.0451%" height="15" fill="rgb(213,208,19)" fg:x="257961" fg:w="237"/><text x="49.3029%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (237 samples, 0.05%)</title><rect x="49.0529%" y="133" width="0.0451%" height="15" fill="rgb(233,156,4)" fg:x="257961" fg:w="237"/><text x="49.3029%" y="143.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (237 samples, 0.05%)</title><rect x="49.0529%" y="117" width="0.0451%" height="15" fill="rgb(207,194,5)" fg:x="257961" fg:w="237"/><text x="49.3029%" y="127.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (173 samples, 0.03%)</title><rect x="49.1096%" y="245" width="0.0329%" height="15" fill="rgb(206,111,30)" fg:x="258259" fg:w="173"/><text x="49.3596%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (158 samples, 0.03%)</title><rect x="49.1446%" y="245" width="0.0300%" height="15" fill="rgb(243,70,54)" fg:x="258443" fg:w="158"/><text x="49.3946%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (158 samples, 0.03%)</title><rect x="49.1446%" y="229" width="0.0300%" height="15" fill="rgb(242,28,8)" fg:x="258443" fg:w="158"/><text x="49.3946%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (158 samples, 0.03%)</title><rect x="49.1446%" y="213" width="0.0300%" height="15" fill="rgb(219,106,18)" fg:x="258443" fg:w="158"/><text x="49.3946%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (89,968 samples, 17.11%)</title><rect x="42.4205%" y="325" width="17.1080%" height="15" fill="rgb(244,222,10)" fg:x="223082" fg:w="89968"/><text x="42.6705%" y="335.50">hashbrown::raw::RawTable&lt;T..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (89,968 samples, 17.11%)</title><rect x="42.4205%" y="309" width="17.1080%" height="15" fill="rgb(236,179,52)" fg:x="223082" fg:w="89968"/><text x="42.6705%" y="319.50">hashbrown::raw::RawTable&lt;T..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (54,800 samples, 10.42%)</title><rect x="49.1079%" y="293" width="10.4206%" height="15" fill="rgb(213,23,39)" fg:x="258250" fg:w="54800"/><text x="49.3579%" y="303.50">hashbrown::raw:..</text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (54,800 samples, 10.42%)</title><rect x="49.1079%" y="277" width="10.4206%" height="15" fill="rgb(238,48,10)" fg:x="258250" fg:w="54800"/><text x="49.3579%" y="287.50">hashbrown::raw:..</text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (54,800 samples, 10.42%)</title><rect x="49.1079%" y="261" width="10.4206%" height="15" fill="rgb(251,196,23)" fg:x="258250" fg:w="54800"/><text x="49.3579%" y="271.50">hashbrown::raw:..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (54,449 samples, 10.35%)</title><rect x="49.1746%" y="245" width="10.3538%" height="15" fill="rgb(250,152,24)" fg:x="258601" fg:w="54449"/><text x="49.4246%" y="255.50">hashbrown::raw:..</text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (54,449 samples, 10.35%)</title><rect x="49.1746%" y="229" width="10.3538%" height="15" fill="rgb(209,150,17)" fg:x="258601" fg:w="54449"/><text x="49.4246%" y="239.50">core::core_arch..</text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (54,449 samples, 10.35%)</title><rect x="49.1746%" y="213" width="10.3538%" height="15" fill="rgb(234,202,34)" fg:x="258601" fg:w="54449"/><text x="49.4246%" y="223.50">core::core_arch..</text></g><g><title>core::core_arch::simd::i8x16::new (54,449 samples, 10.35%)</title><rect x="49.1746%" y="197" width="10.3538%" height="15" fill="rgb(253,148,53)" fg:x="258601" fg:w="54449"/><text x="49.4246%" y="207.50">core::core_arch..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (41,187 samples, 7.83%)</title><rect x="59.6686%" y="309" width="7.8320%" height="15" fill="rgb(218,129,16)" fg:x="313787" fg:w="41187"/><text x="59.9186%" y="319.50">hashbrown::..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (41,187 samples, 7.83%)</title><rect x="59.6686%" y="293" width="7.8320%" height="15" fill="rgb(216,85,19)" fg:x="313787" fg:w="41187"/><text x="59.9186%" y="303.50">core::ptr::..</text></g><g><title>core::ptr::write (41,187 samples, 7.83%)</title><rect x="59.6686%" y="277" width="7.8320%" height="15" fill="rgb(235,228,7)" fg:x="313787" fg:w="41187"/><text x="59.9186%" y="287.50">core::ptr::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (101 samples, 0.02%)</title><rect x="67.5006%" y="309" width="0.0192%" height="15" fill="rgb(245,175,0)" fg:x="354974" fg:w="101"/><text x="67.7506%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (101 samples, 0.02%)</title><rect x="67.5006%" y="293" width="0.0192%" height="15" fill="rgb(208,168,36)" fg:x="354974" fg:w="101"/><text x="67.7506%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (99 samples, 0.02%)</title><rect x="67.5009%" y="277" width="0.0188%" height="15" fill="rgb(246,171,24)" fg:x="354976" fg:w="99"/><text x="67.7509%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (76 samples, 0.01%)</title><rect x="67.5428%" y="213" width="0.0145%" height="15" fill="rgb(215,142,24)" fg:x="355196" fg:w="76"/><text x="67.7928%" y="223.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (76 samples, 0.01%)</title><rect x="67.5428%" y="197" width="0.0145%" height="15" fill="rgb(250,187,7)" fg:x="355196" fg:w="76"/><text x="67.7928%" y="207.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (76 samples, 0.01%)</title><rect x="67.5428%" y="181" width="0.0145%" height="15" fill="rgb(228,66,33)" fg:x="355196" fg:w="76"/><text x="67.7928%" y="191.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (78 samples, 0.01%)</title><rect x="67.5428%" y="229" width="0.0148%" height="15" fill="rgb(234,215,21)" fg:x="355196" fg:w="78"/><text x="67.7928%" y="239.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (86 samples, 0.02%)</title><rect x="67.5576%" y="229" width="0.0164%" height="15" fill="rgb(222,191,20)" fg:x="355274" fg:w="86"/><text x="67.8076%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (201 samples, 0.04%)</title><rect x="67.5422%" y="261" width="0.0382%" height="15" fill="rgb(245,79,54)" fg:x="355193" fg:w="201"/><text x="67.7922%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (201 samples, 0.04%)</title><rect x="67.5422%" y="245" width="0.0382%" height="15" fill="rgb(240,10,37)" fg:x="355193" fg:w="201"/><text x="67.7922%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (279 samples, 0.05%)</title><rect x="68.0682%" y="117" width="0.0531%" height="15" fill="rgb(214,192,32)" fg:x="357959" fg:w="279"/><text x="68.3182%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (573 samples, 0.11%)</title><rect x="68.0395%" y="133" width="0.1090%" height="15" fill="rgb(209,36,54)" fg:x="357808" fg:w="573"/><text x="68.2895%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (143 samples, 0.03%)</title><rect x="68.1212%" y="117" width="0.0272%" height="15" fill="rgb(220,10,11)" fg:x="358238" fg:w="143"/><text x="68.3712%" y="127.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (3,095 samples, 0.59%)</title><rect x="67.6065%" y="229" width="0.5885%" height="15" fill="rgb(221,106,17)" fg:x="355531" fg:w="3095"/><text x="67.8565%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,831 samples, 0.54%)</title><rect x="67.6567%" y="213" width="0.5383%" height="15" fill="rgb(251,142,44)" fg:x="355795" fg:w="2831"/><text x="67.9067%" y="223.50"></text></g><g><title>core::hash::Hasher::write_u64 (2,831 samples, 0.54%)</title><rect x="67.6567%" y="197" width="0.5383%" height="15" fill="rgb(238,13,15)" fg:x="355795" fg:w="2831"/><text x="67.9067%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,745 samples, 0.33%)</title><rect x="67.8632%" y="181" width="0.3318%" height="15" fill="rgb(208,107,27)" fg:x="356881" fg:w="1745"/><text x="68.1132%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,745 samples, 0.33%)</title><rect x="67.8632%" y="165" width="0.3318%" height="15" fill="rgb(205,136,37)" fg:x="356881" fg:w="1745"/><text x="68.1132%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,745 samples, 0.33%)</title><rect x="67.8632%" y="149" width="0.3318%" height="15" fill="rgb(250,205,27)" fg:x="356881" fg:w="1745"/><text x="68.1132%" y="159.50"></text></g><g><title>core::hash::sip::u8to64_le (245 samples, 0.05%)</title><rect x="68.1484%" y="133" width="0.0466%" height="15" fill="rgb(210,80,43)" fg:x="358381" fg:w="245"/><text x="68.3984%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (273 samples, 0.05%)</title><rect x="68.3089%" y="165" width="0.0519%" height="15" fill="rgb(247,160,36)" fg:x="359225" fg:w="273"/><text x="68.5589%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (543 samples, 0.10%)</title><rect x="68.2832%" y="181" width="0.1033%" height="15" fill="rgb(234,13,49)" fg:x="359090" fg:w="543"/><text x="68.5332%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (135 samples, 0.03%)</title><rect x="68.3608%" y="165" width="0.0257%" height="15" fill="rgb(234,122,0)" fg:x="359498" fg:w="135"/><text x="68.6108%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (736 samples, 0.14%)</title><rect x="68.4552%" y="165" width="0.1400%" height="15" fill="rgb(207,146,38)" fg:x="359994" fg:w="736"/><text x="68.7052%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2,714 samples, 0.52%)</title><rect x="68.1950%" y="229" width="0.5161%" height="15" fill="rgb(207,177,25)" fg:x="358626" fg:w="2714"/><text x="68.4450%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,714 samples, 0.52%)</title><rect x="68.1950%" y="213" width="0.5161%" height="15" fill="rgb(211,178,42)" fg:x="358626" fg:w="2714"/><text x="68.4450%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,714 samples, 0.52%)</title><rect x="68.1950%" y="197" width="0.5161%" height="15" fill="rgb(230,69,54)" fg:x="358626" fg:w="2714"/><text x="68.4450%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,707 samples, 0.32%)</title><rect x="68.3865%" y="181" width="0.3246%" height="15" fill="rgb(214,135,41)" fg:x="359633" fg:w="1707"/><text x="68.6365%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (610 samples, 0.12%)</title><rect x="68.5951%" y="165" width="0.1160%" height="15" fill="rgb(237,67,25)" fg:x="360730" fg:w="610"/><text x="68.8451%" y="175.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (6,436 samples, 1.22%)</title><rect x="67.5804%" y="261" width="1.2238%" height="15" fill="rgb(222,189,50)" fg:x="355394" fg:w="6436"/><text x="67.8304%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (6,436 samples, 1.22%)</title><rect x="67.5804%" y="245" width="1.2238%" height="15" fill="rgb(245,148,34)" fg:x="355394" fg:w="6436"/><text x="67.8304%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (490 samples, 0.09%)</title><rect x="68.7111%" y="229" width="0.0932%" height="15" fill="rgb(222,29,6)" fg:x="361340" fg:w="490"/><text x="68.9611%" y="239.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (158 samples, 0.03%)</title><rect x="68.7742%" y="213" width="0.0300%" height="15" fill="rgb(221,189,43)" fg:x="361672" fg:w="158"/><text x="69.0242%" y="223.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (60 samples, 0.01%)</title><rect x="68.8043%" y="261" width="0.0114%" height="15" fill="rgb(207,36,27)" fg:x="361830" fg:w="60"/><text x="69.0543%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (60 samples, 0.01%)</title><rect x="68.8043%" y="245" width="0.0114%" height="15" fill="rgb(217,90,24)" fg:x="361830" fg:w="60"/><text x="69.0543%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (60 samples, 0.01%)</title><rect x="68.8043%" y="229" width="0.0114%" height="15" fill="rgb(224,66,35)" fg:x="361830" fg:w="60"/><text x="69.0543%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (60 samples, 0.01%)</title><rect x="68.8043%" y="213" width="0.0114%" height="15" fill="rgb(221,13,50)" fg:x="361830" fg:w="60"/><text x="69.0543%" y="223.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (3,598 samples, 0.68%)</title><rect x="68.8157%" y="261" width="0.6842%" height="15" fill="rgb(236,68,49)" fg:x="361890" fg:w="3598"/><text x="69.0657%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (3,598 samples, 0.68%)</title><rect x="68.8157%" y="245" width="0.6842%" height="15" fill="rgb(229,146,28)" fg:x="361890" fg:w="3598"/><text x="69.0657%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,598 samples, 0.68%)</title><rect x="68.8157%" y="229" width="0.6842%" height="15" fill="rgb(225,31,38)" fg:x="361890" fg:w="3598"/><text x="69.0657%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (234 samples, 0.04%)</title><rect x="69.7003%" y="229" width="0.0445%" height="15" fill="rgb(250,208,3)" fg:x="366542" fg:w="234"/><text x="69.9503%" y="239.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (820 samples, 0.16%)</title><rect x="69.7448%" y="229" width="0.1559%" height="15" fill="rgb(246,54,23)" fg:x="366776" fg:w="820"/><text x="69.9948%" y="239.50"></text></g><g><title>hashbrown::raw::is_full (119 samples, 0.02%)</title><rect x="69.9007%" y="229" width="0.0226%" height="15" fill="rgb(243,76,11)" fg:x="367596" fg:w="119"/><text x="70.1507%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2,937 samples, 0.56%)</title><rect x="69.5061%" y="245" width="0.5585%" height="15" fill="rgb(245,21,50)" fg:x="365521" fg:w="2937"/><text x="69.7561%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (725 samples, 0.14%)</title><rect x="69.9268%" y="229" width="0.1379%" height="15" fill="rgb(228,9,43)" fg:x="367733" fg:w="725"/><text x="70.1768%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (725 samples, 0.14%)</title><rect x="69.9268%" y="213" width="0.1379%" height="15" fill="rgb(208,100,47)" fg:x="367733" fg:w="725"/><text x="70.1768%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (191 samples, 0.04%)</title><rect x="70.0646%" y="229" width="0.0363%" height="15" fill="rgb(232,26,8)" fg:x="368458" fg:w="191"/><text x="70.3146%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (3,250 samples, 0.62%)</title><rect x="69.5061%" y="261" width="0.6180%" height="15" fill="rgb(216,166,38)" fg:x="365521" fg:w="3250"/><text x="69.7561%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (313 samples, 0.06%)</title><rect x="70.0646%" y="245" width="0.0595%" height="15" fill="rgb(251,202,51)" fg:x="368458" fg:w="313"/><text x="70.3146%" y="255.50"></text></g><g><title>hashbrown::raw::h2 (122 samples, 0.02%)</title><rect x="70.1010%" y="229" width="0.0232%" height="15" fill="rgb(254,216,34)" fg:x="368649" fg:w="122"/><text x="70.3510%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13,723 samples, 2.61%)</title><rect x="67.5198%" y="309" width="2.6095%" height="15" fill="rgb(251,32,27)" fg:x="355075" fg:w="13723"/><text x="67.7698%" y="319.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13,723 samples, 2.61%)</title><rect x="67.5198%" y="293" width="2.6095%" height="15" fill="rgb(208,127,28)" fg:x="355075" fg:w="13723"/><text x="67.7698%" y="303.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (13,723 samples, 2.61%)</title><rect x="67.5198%" y="277" width="2.6095%" height="15" fill="rgb(224,137,22)" fg:x="355075" fg:w="13723"/><text x="67.7698%" y="287.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (115 samples, 0.02%)</title><rect x="70.1474%" y="293" width="0.0219%" height="15" fill="rgb(254,70,32)" fg:x="368893" fg:w="115"/><text x="70.3974%" y="303.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (269 samples, 0.05%)</title><rect x="70.1692%" y="293" width="0.0512%" height="15" fill="rgb(229,75,37)" fg:x="369008" fg:w="269"/><text x="70.4192%" y="303.50"></text></g><g><title>hashbrown::raw::is_full (317 samples, 0.06%)</title><rect x="70.2204%" y="293" width="0.0603%" height="15" fill="rgb(252,64,23)" fg:x="369277" fg:w="317"/><text x="70.4704%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (86 samples, 0.02%)</title><rect x="70.2807%" y="293" width="0.0164%" height="15" fill="rgb(232,162,48)" fg:x="369594" fg:w="86"/><text x="70.5307%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (86 samples, 0.02%)</title><rect x="70.2807%" y="277" width="0.0164%" height="15" fill="rgb(246,160,12)" fg:x="369594" fg:w="86"/><text x="70.5307%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (86 samples, 0.02%)</title><rect x="70.2807%" y="261" width="0.0164%" height="15" fill="rgb(247,166,0)" fg:x="369594" fg:w="86"/><text x="70.5307%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (940 samples, 0.18%)</title><rect x="70.1293%" y="309" width="0.1787%" height="15" fill="rgb(249,219,21)" fg:x="368798" fg:w="940"/><text x="70.3793%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (58 samples, 0.01%)</title><rect x="70.2970%" y="293" width="0.0110%" height="15" fill="rgb(205,209,3)" fg:x="369680" fg:w="58"/><text x="70.5470%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (58 samples, 0.01%)</title><rect x="70.2970%" y="277" width="0.0110%" height="15" fill="rgb(243,44,1)" fg:x="369680" fg:w="58"/><text x="70.5470%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (107 samples, 0.02%)</title><rect x="70.3453%" y="277" width="0.0203%" height="15" fill="rgb(206,159,16)" fg:x="369934" fg:w="107"/><text x="70.5953%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (155,771 samples, 29.62%)</title><rect x="40.7971%" y="341" width="29.6208%" height="15" fill="rgb(244,77,30)" fg:x="214545" fg:w="155771"/><text x="41.0471%" y="351.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (57,266 samples, 10.89%)</title><rect x="59.5285%" y="325" width="10.8895%" height="15" fill="rgb(218,69,12)" fg:x="313050" fg:w="57266"/><text x="59.7785%" y="335.50">hashbrown::raw::..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (578 samples, 0.11%)</title><rect x="70.3080%" y="309" width="0.1099%" height="15" fill="rgb(212,87,7)" fg:x="369738" fg:w="578"/><text x="70.5580%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (382 samples, 0.07%)</title><rect x="70.3453%" y="293" width="0.0726%" height="15" fill="rgb(245,114,25)" fg:x="369934" fg:w="382"/><text x="70.5953%" y="303.50"></text></g><g><title>hashbrown::raw::h2 (275 samples, 0.05%)</title><rect x="70.3657%" y="277" width="0.0523%" height="15" fill="rgb(210,61,42)" fg:x="370041" fg:w="275"/><text x="70.6157%" y="287.50"></text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth (357,073 samples, 67.90%)</title><rect x="2.6057%" y="357" width="67.8997%" height="15" fill="rgb(211,52,33)" fg:x="13703" fg:w="357073"/><text x="2.8557%" y="367.50">crabchess::engine::search::Minimax::evaluate_at_depth</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (460 samples, 0.09%)</title><rect x="70.4179%" y="341" width="0.0875%" height="15" fill="rgb(234,58,33)" fg:x="370316" fg:w="460"/><text x="70.6679%" y="351.50"></text></g><g><title>__GI___libc_malloc (193 samples, 0.04%)</title><rect x="70.5891%" y="245" width="0.0367%" height="15" fill="rgb(220,115,36)" fg:x="371216" fg:w="193"/><text x="70.8391%" y="255.50"></text></g><g><title>tcache_get (53 samples, 0.01%)</title><rect x="70.6157%" y="229" width="0.0101%" height="15" fill="rgb(243,153,54)" fg:x="371356" fg:w="53"/><text x="70.8657%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (324 samples, 0.06%)</title><rect x="70.5758%" y="261" width="0.0616%" height="15" fill="rgb(251,47,18)" fg:x="371146" fg:w="324"/><text x="70.8258%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (487 samples, 0.09%)</title><rect x="70.5583%" y="325" width="0.0926%" height="15" fill="rgb(242,102,42)" fg:x="371054" fg:w="487"/><text x="70.8083%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (480 samples, 0.09%)</title><rect x="70.5596%" y="309" width="0.0913%" height="15" fill="rgb(234,31,38)" fg:x="371061" fg:w="480"/><text x="70.8096%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (467 samples, 0.09%)</title><rect x="70.5621%" y="293" width="0.0888%" height="15" fill="rgb(221,117,51)" fg:x="371074" fg:w="467"/><text x="70.8121%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (437 samples, 0.08%)</title><rect x="70.5678%" y="277" width="0.0831%" height="15" fill="rgb(212,20,18)" fg:x="371104" fg:w="437"/><text x="70.8178%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (70 samples, 0.01%)</title><rect x="70.6535%" y="325" width="0.0133%" height="15" fill="rgb(245,133,36)" fg:x="371555" fg:w="70"/><text x="70.9035%" y="335.50"></text></g><g><title>__GI___libc_free (91 samples, 0.02%)</title><rect x="70.6693%" y="245" width="0.0173%" height="15" fill="rgb(212,6,19)" fg:x="371638" fg:w="91"/><text x="70.9193%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (257 samples, 0.05%)</title><rect x="70.6669%" y="277" width="0.0489%" height="15" fill="rgb(218,1,36)" fg:x="371625" fg:w="257"/><text x="70.9169%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (257 samples, 0.05%)</title><rect x="70.6669%" y="261" width="0.0489%" height="15" fill="rgb(246,84,54)" fg:x="371625" fg:w="257"/><text x="70.9169%" y="271.50"></text></g><g><title>_int_free (137 samples, 0.03%)</title><rect x="70.6897%" y="245" width="0.0261%" height="15" fill="rgb(242,110,6)" fg:x="371745" fg:w="137"/><text x="70.9397%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;crabchess::moves::Move&gt;&gt; (267 samples, 0.05%)</title><rect x="70.6669%" y="325" width="0.0508%" height="15" fill="rgb(214,47,5)" fg:x="371625" fg:w="267"/><text x="70.9169%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;crabchess::moves::Move&gt;&gt; (267 samples, 0.05%)</title><rect x="70.6669%" y="309" width="0.0508%" height="15" fill="rgb(218,159,25)" fg:x="371625" fg:w="267"/><text x="70.9169%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (267 samples, 0.05%)</title><rect x="70.6669%" y="293" width="0.0508%" height="15" fill="rgb(215,211,28)" fg:x="371625" fg:w="267"/><text x="70.9169%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (91 samples, 0.02%)</title><rect x="70.7623%" y="245" width="0.0173%" height="15" fill="rgb(238,59,32)" fg:x="372127" fg:w="91"/><text x="71.0123%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (88 samples, 0.02%)</title><rect x="70.7629%" y="229" width="0.0167%" height="15" fill="rgb(226,82,3)" fg:x="372130" fg:w="88"/><text x="71.0129%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (100 samples, 0.02%)</title><rect x="70.7623%" y="261" width="0.0190%" height="15" fill="rgb(240,164,32)" fg:x="372127" fg:w="100"/><text x="71.0123%" y="271.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (138 samples, 0.03%)</title><rect x="70.7623%" y="293" width="0.0262%" height="15" fill="rgb(232,46,7)" fg:x="372127" fg:w="138"/><text x="71.0123%" y="303.50"></text></g><g><title>crabchess::magic::get_attacks (138 samples, 0.03%)</title><rect x="70.7623%" y="277" width="0.0262%" height="15" fill="rgb(229,129,53)" fg:x="372127" fg:w="138"/><text x="71.0123%" y="287.50"></text></g><g><title>crabchess::magic::get_rook_attacks (60 samples, 0.01%)</title><rect x="70.7886%" y="293" width="0.0114%" height="15" fill="rgb(234,188,29)" fg:x="372265" fg:w="60"/><text x="71.0386%" y="303.50"></text></g><g><title>crabchess::magic::get_attacks (60 samples, 0.01%)</title><rect x="70.7886%" y="277" width="0.0114%" height="15" fill="rgb(246,141,4)" fg:x="372265" fg:w="60"/><text x="71.0386%" y="287.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (103 samples, 0.02%)</title><rect x="70.8000%" y="293" width="0.0196%" height="15" fill="rgb(229,23,39)" fg:x="372325" fg:w="103"/><text x="71.0500%" y="303.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_square_attackers (547 samples, 0.10%)</title><rect x="70.7193%" y="325" width="0.1040%" height="15" fill="rgb(206,12,3)" fg:x="371901" fg:w="547"/><text x="70.9693%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (525 samples, 0.10%)</title><rect x="70.7235%" y="309" width="0.0998%" height="15" fill="rgb(252,226,20)" fg:x="371923" fg:w="525"/><text x="70.9735%" y="319.50"></text></g><g><title>crabchess::magic::get_rook_attacks (66 samples, 0.01%)</title><rect x="70.8994%" y="293" width="0.0126%" height="15" fill="rgb(216,123,35)" fg:x="372848" fg:w="66"/><text x="71.1494%" y="303.50"></text></g><g><title>crabchess::magic::get_attacks (66 samples, 0.01%)</title><rect x="70.8994%" y="277" width="0.0126%" height="15" fill="rgb(212,68,40)" fg:x="372848" fg:w="66"/><text x="71.1494%" y="287.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (114 samples, 0.02%)</title><rect x="70.9120%" y="293" width="0.0217%" height="15" fill="rgb(254,125,32)" fg:x="372914" fg:w="114"/><text x="71.1620%" y="303.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (424 samples, 0.08%)</title><rect x="70.8563%" y="309" width="0.0806%" height="15" fill="rgb(253,97,22)" fg:x="372621" fg:w="424"/><text x="71.1063%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::is_move_self_check (631 samples, 0.12%)</title><rect x="70.8234%" y="325" width="0.1200%" height="15" fill="rgb(241,101,14)" fg:x="372448" fg:w="631"/><text x="71.0734%" y="335.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (96 samples, 0.02%)</title><rect x="70.9989%" y="309" width="0.0183%" height="15" fill="rgb(238,103,29)" fg:x="373371" fg:w="96"/><text x="71.2489%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::pawn_moves (413 samples, 0.08%)</title><rect x="70.9443%" y="325" width="0.0785%" height="15" fill="rgb(233,195,47)" fg:x="373084" fg:w="413"/><text x="71.1943%" y="335.50"></text></g><g><title>crabchess::movegen::bitboard_to_moves (182 samples, 0.03%)</title><rect x="71.0312%" y="325" width="0.0346%" height="15" fill="rgb(246,218,30)" fg:x="373541" fg:w="182"/><text x="71.2812%" y="335.50"></text></g><g><title>crabchess::movegen::bitboard_to_promotions (182 samples, 0.03%)</title><rect x="71.0312%" y="309" width="0.0346%" height="15" fill="rgb(219,145,47)" fg:x="373541" fg:w="182"/><text x="71.2812%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (92 samples, 0.02%)</title><rect x="71.0483%" y="293" width="0.0175%" height="15" fill="rgb(243,12,26)" fg:x="373631" fg:w="92"/><text x="71.2983%" y="303.50"></text></g><g><title>crabchess::movegen::MoveGenerator::has_moves (2,876 samples, 0.55%)</title><rect x="70.5193%" y="341" width="0.5469%" height="15" fill="rgb(214,87,16)" fg:x="370849" fg:w="2876"/><text x="70.7693%" y="351.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (146 samples, 0.03%)</title><rect x="71.0688%" y="277" width="0.0278%" height="15" fill="rgb(208,99,42)" fg:x="373739" fg:w="146"/><text x="71.3188%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (130 samples, 0.02%)</title><rect x="71.0719%" y="261" width="0.0247%" height="15" fill="rgb(253,99,2)" fg:x="373755" fg:w="130"/><text x="71.3219%" y="271.50"></text></g><g><title>core::hash::Hasher::write_u64 (130 samples, 0.02%)</title><rect x="71.0719%" y="245" width="0.0247%" height="15" fill="rgb(220,168,23)" fg:x="373755" fg:w="130"/><text x="71.3219%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (130 samples, 0.02%)</title><rect x="71.0719%" y="229" width="0.0247%" height="15" fill="rgb(242,38,24)" fg:x="373755" fg:w="130"/><text x="71.3219%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (130 samples, 0.02%)</title><rect x="71.0719%" y="213" width="0.0247%" height="15" fill="rgb(225,182,9)" fg:x="373755" fg:w="130"/><text x="71.3219%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (130 samples, 0.02%)</title><rect x="71.0719%" y="197" width="0.0247%" height="15" fill="rgb(243,178,37)" fg:x="373755" fg:w="130"/><text x="71.3219%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (178 samples, 0.03%)</title><rect x="71.0966%" y="277" width="0.0338%" height="15" fill="rgb(232,139,19)" fg:x="373885" fg:w="178"/><text x="71.3466%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (178 samples, 0.03%)</title><rect x="71.0966%" y="261" width="0.0338%" height="15" fill="rgb(225,201,24)" fg:x="373885" fg:w="178"/><text x="71.3466%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (178 samples, 0.03%)</title><rect x="71.0966%" y="245" width="0.0338%" height="15" fill="rgb(221,47,46)" fg:x="373885" fg:w="178"/><text x="71.3466%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (110 samples, 0.02%)</title><rect x="71.1095%" y="229" width="0.0209%" height="15" fill="rgb(249,23,13)" fg:x="373953" fg:w="110"/><text x="71.3595%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (384 samples, 0.07%)</title><rect x="71.0662%" y="293" width="0.0730%" height="15" fill="rgb(219,9,5)" fg:x="373725" fg:w="384"/><text x="71.3162%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (103 samples, 0.02%)</title><rect x="71.1538%" y="261" width="0.0196%" height="15" fill="rgb(254,171,16)" fg:x="374186" fg:w="103"/><text x="71.4038%" y="271.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (103 samples, 0.02%)</title><rect x="71.1538%" y="245" width="0.0196%" height="15" fill="rgb(230,171,20)" fg:x="374186" fg:w="103"/><text x="71.4038%" y="255.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (72 samples, 0.01%)</title><rect x="71.1597%" y="229" width="0.0137%" height="15" fill="rgb(210,71,41)" fg:x="374217" fg:w="72"/><text x="71.4097%" y="239.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (72 samples, 0.01%)</title><rect x="71.1597%" y="213" width="0.0137%" height="15" fill="rgb(206,173,20)" fg:x="374217" fg:w="72"/><text x="71.4097%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (72 samples, 0.01%)</title><rect x="71.1597%" y="197" width="0.0137%" height="15" fill="rgb(233,88,34)" fg:x="374217" fg:w="72"/><text x="71.4097%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (72 samples, 0.01%)</title><rect x="71.1597%" y="181" width="0.0137%" height="15" fill="rgb(223,209,46)" fg:x="374217" fg:w="72"/><text x="71.4097%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (72 samples, 0.01%)</title><rect x="71.1597%" y="165" width="0.0137%" height="15" fill="rgb(250,43,18)" fg:x="374217" fg:w="72"/><text x="71.4097%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (72 samples, 0.01%)</title><rect x="71.1597%" y="149" width="0.0137%" height="15" fill="rgb(208,13,10)" fg:x="374217" fg:w="72"/><text x="71.4097%" y="159.50"></text></g><g><title>crabchess::game::Game::is_game_over (3,527 samples, 0.67%)</title><rect x="70.5121%" y="357" width="0.6707%" height="15" fill="rgb(212,200,36)" fg:x="370811" fg:w="3527"/><text x="70.7621%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (613 samples, 0.12%)</title><rect x="71.0662%" y="341" width="0.1166%" height="15" fill="rgb(225,90,30)" fg:x="373725" fg:w="613"/><text x="71.3162%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (613 samples, 0.12%)</title><rect x="71.0662%" y="325" width="0.1166%" height="15" fill="rgb(236,182,39)" fg:x="373725" fg:w="613"/><text x="71.3162%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (613 samples, 0.12%)</title><rect x="71.0662%" y="309" width="0.1166%" height="15" fill="rgb(212,144,35)" fg:x="373725" fg:w="613"/><text x="71.3162%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (229 samples, 0.04%)</title><rect x="71.1392%" y="293" width="0.0435%" height="15" fill="rgb(228,63,44)" fg:x="374109" fg:w="229"/><text x="71.3892%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (229 samples, 0.04%)</title><rect x="71.1392%" y="277" width="0.0435%" height="15" fill="rgb(228,109,6)" fg:x="374109" fg:w="229"/><text x="71.3892%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (123 samples, 0.02%)</title><rect x="71.7747%" y="325" width="0.0234%" height="15" fill="rgb(238,117,24)" fg:x="377451" fg:w="123"/><text x="72.0247%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,058 samples, 0.20%)</title><rect x="71.7101%" y="341" width="0.2012%" height="15" fill="rgb(242,26,26)" fg:x="377111" fg:w="1058"/><text x="71.9601%" y="351.50"></text></g><g><title>core::ptr::write (562 samples, 0.11%)</title><rect x="71.8044%" y="325" width="0.1069%" height="15" fill="rgb(221,92,48)" fg:x="377607" fg:w="562"/><text x="72.0544%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (161 samples, 0.03%)</title><rect x="71.9112%" y="341" width="0.0306%" height="15" fill="rgb(209,209,32)" fg:x="378169" fg:w="161"/><text x="72.1612%" y="351.50"></text></g><g><title>&lt;crabchess::piece::PieceType as core::cmp::PartialEq&gt;::eq (587 samples, 0.11%)</title><rect x="72.8615%" y="325" width="0.1116%" height="15" fill="rgb(221,70,22)" fg:x="383166" fg:w="587"/><text x="73.1115%" y="335.50"></text></g><g><title>crabchess::bitboard::Bitboard::is_square_occupied (102 samples, 0.02%)</title><rect x="72.9731%" y="325" width="0.0194%" height="15" fill="rgb(248,145,5)" fg:x="383753" fg:w="102"/><text x="73.2231%" y="335.50"></text></g><g><title>crabchess::board::Board::is_move_en_passant (576 samples, 0.11%)</title><rect x="72.9927%" y="325" width="0.1095%" height="15" fill="rgb(226,116,26)" fg:x="383856" fg:w="576"/><text x="73.2427%" y="335.50"></text></g><g><title>&lt;crabchess::square::Square as core::cmp::PartialEq&gt;::eq (576 samples, 0.11%)</title><rect x="72.9927%" y="309" width="0.1095%" height="15" fill="rgb(244,5,17)" fg:x="383856" fg:w="576"/><text x="73.2427%" y="319.50"></text></g><g><title>&lt;crabchess::castling::CastleRights as core::ops::bit::BitAnd&gt;::bitand (163 samples, 0.03%)</title><rect x="73.2364%" y="309" width="0.0310%" height="15" fill="rgb(252,159,33)" fg:x="385138" fg:w="163"/><text x="73.4864%" y="319.50"></text></g><g><title>&lt;crabchess::castling::CastleRights as core::ops::bit::BitAndAssign&gt;::bitand_assign (113 samples, 0.02%)</title><rect x="73.2674%" y="309" width="0.0215%" height="15" fill="rgb(206,71,0)" fg:x="385301" fg:w="113"/><text x="73.5174%" y="319.50"></text></g><g><title>crabchess::board::Board::remove_castle_rights (1,004 samples, 0.19%)</title><rect x="73.1022%" y="325" width="0.1909%" height="15" fill="rgb(233,118,54)" fg:x="384432" fg:w="1004"/><text x="73.3522%" y="335.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (1,022 samples, 0.19%)</title><rect x="73.5141%" y="309" width="0.1943%" height="15" fill="rgb(234,83,48)" fg:x="386598" fg:w="1022"/><text x="73.7641%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::Not&gt;::not (384 samples, 0.07%)</title><rect x="73.7084%" y="309" width="0.0730%" height="15" fill="rgb(228,3,54)" fg:x="387620" fg:w="384"/><text x="73.9584%" y="319.50"></text></g><g><title>crabchess::board::Board::color_at_square (348 samples, 0.07%)</title><rect x="73.7814%" y="309" width="0.0662%" height="15" fill="rgb(226,155,13)" fg:x="388004" fg:w="348"/><text x="74.0314%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::ne (69 samples, 0.01%)</title><rect x="73.8991%" y="293" width="0.0131%" height="15" fill="rgb(241,28,37)" fg:x="388623" fg:w="69"/><text x="74.1491%" y="303.50"></text></g><g><title>crabchess::board::Board::type_at_square (547 samples, 0.10%)</title><rect x="73.8476%" y="309" width="0.1040%" height="15" fill="rgb(233,93,10)" fg:x="388352" fg:w="547"/><text x="74.0976%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (207 samples, 0.04%)</title><rect x="73.9123%" y="293" width="0.0394%" height="15" fill="rgb(225,113,19)" fg:x="388692" fg:w="207"/><text x="74.1623%" y="303.50"></text></g><g><title>crabchess::board::Board::remove_piece (4,135 samples, 0.79%)</title><rect x="73.2931%" y="325" width="0.7863%" height="15" fill="rgb(241,2,18)" fg:x="385436" fg:w="4135"/><text x="73.5431%" y="335.50"></text></g><g><title>crabchess::zobrist::get_square_key (672 samples, 0.13%)</title><rect x="73.9516%" y="309" width="0.1278%" height="15" fill="rgb(228,207,21)" fg:x="388899" fg:w="672"/><text x="74.2016%" y="319.50"></text></g><g><title>&lt;crabchess::piece::PieceType as core::cmp::PartialEq&gt;::ne (99 samples, 0.02%)</title><rect x="74.1285%" y="309" width="0.0188%" height="15" fill="rgb(213,211,35)" fg:x="389829" fg:w="99"/><text x="74.3785%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (92 samples, 0.02%)</title><rect x="74.2241%" y="293" width="0.0175%" height="15" fill="rgb(209,83,10)" fg:x="390332" fg:w="92"/><text x="74.4741%" y="303.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (103 samples, 0.02%)</title><rect x="74.2416%" y="293" width="0.0196%" height="15" fill="rgb(209,164,1)" fg:x="390424" fg:w="103"/><text x="74.4916%" y="303.50"></text></g><g><title>crabchess::board::Board::add_piece (773 samples, 0.15%)</title><rect x="74.1473%" y="309" width="0.1470%" height="15" fill="rgb(213,184,43)" fg:x="389928" fg:w="773"/><text x="74.3973%" y="319.50"></text></g><g><title>crabchess::zobrist::get_square_key (174 samples, 0.03%)</title><rect x="74.2612%" y="293" width="0.0331%" height="15" fill="rgb(231,61,34)" fg:x="390527" fg:w="174"/><text x="74.5112%" y="303.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (1,000 samples, 0.19%)</title><rect x="74.3825%" y="293" width="0.1902%" height="15" fill="rgb(235,75,3)" fg:x="391165" fg:w="1000"/><text x="74.6325%" y="303.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::Not&gt;::not (241 samples, 0.05%)</title><rect x="74.5727%" y="293" width="0.0458%" height="15" fill="rgb(220,106,47)" fg:x="392165" fg:w="241"/><text x="74.8227%" y="303.50"></text></g><g><title>crabchess::board::Board::color_at_square (348 samples, 0.07%)</title><rect x="74.6185%" y="293" width="0.0662%" height="15" fill="rgb(210,196,33)" fg:x="392406" fg:w="348"/><text x="74.8685%" y="303.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::ne (259 samples, 0.05%)</title><rect x="74.7539%" y="277" width="0.0493%" height="15" fill="rgb(229,154,42)" fg:x="393118" fg:w="259"/><text x="75.0039%" y="287.50"></text></g><g><title>crabchess::board::Board::type_at_square (903 samples, 0.17%)</title><rect x="74.6847%" y="293" width="0.1717%" height="15" fill="rgb(228,114,26)" fg:x="392754" fg:w="903"/><text x="74.9347%" y="303.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (280 samples, 0.05%)</title><rect x="74.8031%" y="277" width="0.0532%" height="15" fill="rgb(208,144,1)" fg:x="393377" fg:w="280"/><text x="75.0531%" y="287.50"></text></g><g><title>crabchess::board::Board::set_piece (4,293 samples, 0.82%)</title><rect x="74.0794%" y="325" width="0.8163%" height="15" fill="rgb(239,112,37)" fg:x="389571" fg:w="4293"/><text x="74.3294%" y="335.50"></text></g><g><title>crabchess::board::Board::remove_piece (3,163 samples, 0.60%)</title><rect x="74.2943%" y="309" width="0.6015%" height="15" fill="rgb(210,96,50)" fg:x="390701" fg:w="3163"/><text x="74.5443%" y="319.50"></text></g><g><title>crabchess::zobrist::get_square_key (207 samples, 0.04%)</title><rect x="74.8564%" y="293" width="0.0394%" height="15" fill="rgb(222,178,2)" fg:x="393657" fg:w="207"/><text x="75.1064%" y="303.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::ne (449 samples, 0.09%)</title><rect x="75.0368%" y="309" width="0.0854%" height="15" fill="rgb(226,74,18)" fg:x="394606" fg:w="449"/><text x="75.2868%" y="319.50"></text></g><g><title>crabchess::board::Board::type_at_square (1,342 samples, 0.26%)</title><rect x="74.8957%" y="325" width="0.2552%" height="15" fill="rgb(225,67,54)" fg:x="393864" fg:w="1342"/><text x="75.1457%" y="335.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (151 samples, 0.03%)</title><rect x="75.1222%" y="309" width="0.0287%" height="15" fill="rgb(251,92,32)" fg:x="395055" fg:w="151"/><text x="75.3722%" y="319.50"></text></g><g><title>crabchess::moves::Move::to_square (166 samples, 0.03%)</title><rect x="75.1521%" y="325" width="0.0316%" height="15" fill="rgb(228,149,22)" fg:x="395212" fg:w="166"/><text x="75.4021%" y="335.50"></text></g><g><title>core::cmp::max (82 samples, 0.02%)</title><rect x="75.2281%" y="309" width="0.0156%" height="15" fill="rgb(243,54,13)" fg:x="395612" fg:w="82"/><text x="75.4781%" y="319.50"></text></g><g><title>core::cmp::Ord::max (82 samples, 0.02%)</title><rect x="75.2281%" y="293" width="0.0156%" height="15" fill="rgb(243,180,28)" fg:x="395612" fg:w="82"/><text x="75.4781%" y="303.50"></text></g><g><title>core::cmp::max_by (82 samples, 0.02%)</title><rect x="75.2281%" y="277" width="0.0156%" height="15" fill="rgb(208,167,24)" fg:x="395612" fg:w="82"/><text x="75.4781%" y="287.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (287 samples, 0.05%)</title><rect x="75.2437%" y="309" width="0.0546%" height="15" fill="rgb(245,73,45)" fg:x="395694" fg:w="287"/><text x="75.4937%" y="319.50"></text></g><g><title>crabchess::square::Square::file (372 samples, 0.07%)</title><rect x="75.2983%" y="309" width="0.0707%" height="15" fill="rgb(237,203,48)" fg:x="395981" fg:w="372"/><text x="75.5483%" y="319.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (1,421 samples, 0.27%)</title><rect x="75.1836%" y="325" width="0.2702%" height="15" fill="rgb(211,197,16)" fg:x="395378" fg:w="1421"/><text x="75.4336%" y="335.50"></text></g><g><title>crabchess::square::Square::rank (446 samples, 0.08%)</title><rect x="75.3690%" y="309" width="0.0848%" height="15" fill="rgb(243,99,51)" fg:x="396353" fg:w="446"/><text x="75.6190%" y="319.50"></text></g><g><title>crabchess::square::Square::new (219 samples, 0.04%)</title><rect x="75.4539%" y="325" width="0.0416%" height="15" fill="rgb(215,123,29)" fg:x="396799" fg:w="219"/><text x="75.7039%" y="335.50"></text></g><g><title>crabchess::util::opposite_color (183 samples, 0.03%)</title><rect x="75.4955%" y="325" width="0.0348%" height="15" fill="rgb(239,186,37)" fg:x="397018" fg:w="183"/><text x="75.7455%" y="335.50"></text></g><g><title>crabchess::util::pawn_promote_rank (209 samples, 0.04%)</title><rect x="75.5303%" y="325" width="0.0397%" height="15" fill="rgb(252,136,39)" fg:x="397201" fg:w="209"/><text x="75.7803%" y="335.50"></text></g><g><title>crabchess::board::Board::make_move (19,159 samples, 3.64%)</title><rect x="71.9419%" y="341" width="3.6432%" height="15" fill="rgb(223,213,32)" fg:x="378330" fg:w="19159"/><text x="72.1919%" y="351.50">crab..</text></g><g><title>crabchess::zobrist::get_ep_key (79 samples, 0.02%)</title><rect x="75.5700%" y="325" width="0.0150%" height="15" fill="rgb(233,115,5)" fg:x="397410" fg:w="79"/><text x="75.8200%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,333 samples, 0.25%)</title><rect x="75.7195%" y="277" width="0.2535%" height="15" fill="rgb(207,226,44)" fg:x="398196" fg:w="1333"/><text x="75.9695%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,333 samples, 0.25%)</title><rect x="75.7195%" y="261" width="0.2535%" height="15" fill="rgb(208,126,0)" fg:x="398196" fg:w="1333"/><text x="75.9695%" y="271.50"></text></g><g><title>core::ptr::write (1,333 samples, 0.25%)</title><rect x="75.7195%" y="245" width="0.2535%" height="15" fill="rgb(244,66,21)" fg:x="398196" fg:w="1333"/><text x="75.9695%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (256 samples, 0.05%)</title><rect x="75.9730%" y="245" width="0.0487%" height="15" fill="rgb(222,97,12)" fg:x="399529" fg:w="256"/><text x="76.2230%" y="255.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (256 samples, 0.05%)</title><rect x="75.9730%" y="229" width="0.0487%" height="15" fill="rgb(219,213,19)" fg:x="399529" fg:w="256"/><text x="76.2230%" y="239.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (256 samples, 0.05%)</title><rect x="75.9730%" y="213" width="0.0487%" height="15" fill="rgb(252,169,30)" fg:x="399529" fg:w="256"/><text x="76.2230%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (457 samples, 0.09%)</title><rect x="75.9730%" y="277" width="0.0869%" height="15" fill="rgb(206,32,51)" fg:x="399529" fg:w="457"/><text x="76.2230%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (457 samples, 0.09%)</title><rect x="75.9730%" y="261" width="0.0869%" height="15" fill="rgb(250,172,42)" fg:x="399529" fg:w="457"/><text x="76.2230%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (201 samples, 0.04%)</title><rect x="76.0217%" y="245" width="0.0382%" height="15" fill="rgb(209,34,43)" fg:x="399785" fg:w="201"/><text x="76.2717%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (191 samples, 0.04%)</title><rect x="76.1127%" y="245" width="0.0363%" height="15" fill="rgb(223,11,35)" fg:x="400264" fg:w="191"/><text x="76.3627%" y="255.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (316 samples, 0.06%)</title><rect x="76.1491%" y="245" width="0.0601%" height="15" fill="rgb(251,219,26)" fg:x="400455" fg:w="316"/><text x="76.3991%" y="255.50"></text></g><g><title>hashbrown::raw::is_full (925 samples, 0.18%)</title><rect x="76.2092%" y="245" width="0.1759%" height="15" fill="rgb(231,119,3)" fg:x="400771" fg:w="925"/><text x="76.4592%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1,933 samples, 0.37%)</title><rect x="76.0599%" y="261" width="0.3676%" height="15" fill="rgb(216,97,11)" fg:x="399986" fg:w="1933"/><text x="76.3099%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (222 samples, 0.04%)</title><rect x="76.3852%" y="245" width="0.0422%" height="15" fill="rgb(223,59,9)" fg:x="401697" fg:w="222"/><text x="76.6352%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (222 samples, 0.04%)</title><rect x="76.3852%" y="229" width="0.0422%" height="15" fill="rgb(233,93,31)" fg:x="401697" fg:w="222"/><text x="76.6352%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (430 samples, 0.08%)</title><rect x="76.4275%" y="245" width="0.0818%" height="15" fill="rgb(239,81,33)" fg:x="401919" fg:w="430"/><text x="76.6775%" y="255.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (5,003 samples, 0.95%)</title><rect x="75.5851%" y="341" width="0.9514%" height="15" fill="rgb(213,120,34)" fg:x="397489" fg:w="5003"/><text x="75.8351%" y="351.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (5,003 samples, 0.95%)</title><rect x="75.5851%" y="325" width="0.9514%" height="15" fill="rgb(243,49,53)" fg:x="397489" fg:w="5003"/><text x="75.8351%" y="335.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (5,003 samples, 0.95%)</title><rect x="75.5851%" y="309" width="0.9514%" height="15" fill="rgb(247,216,33)" fg:x="397489" fg:w="5003"/><text x="75.8351%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (4,602 samples, 0.88%)</title><rect x="75.6613%" y="293" width="0.8751%" height="15" fill="rgb(226,26,14)" fg:x="397890" fg:w="4602"/><text x="75.9113%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2,506 samples, 0.48%)</title><rect x="76.0599%" y="277" width="0.4765%" height="15" fill="rgb(215,49,53)" fg:x="399986" fg:w="2506"/><text x="76.3099%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (573 samples, 0.11%)</title><rect x="76.4275%" y="261" width="0.1090%" height="15" fill="rgb(245,162,40)" fg:x="401919" fg:w="573"/><text x="76.6775%" y="271.50"></text></g><g><title>hashbrown::raw::h2 (143 samples, 0.03%)</title><rect x="76.5092%" y="245" width="0.0272%" height="15" fill="rgb(229,68,17)" fg:x="402349" fg:w="143"/><text x="76.7592%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (169 samples, 0.03%)</title><rect x="77.3524%" y="309" width="0.0321%" height="15" fill="rgb(213,182,10)" fg:x="406783" fg:w="169"/><text x="77.6024%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (169 samples, 0.03%)</title><rect x="77.3524%" y="293" width="0.0321%" height="15" fill="rgb(245,125,30)" fg:x="406783" fg:w="169"/><text x="77.6024%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (349 samples, 0.07%)</title><rect x="77.7270%" y="181" width="0.0664%" height="15" fill="rgb(232,202,2)" fg:x="408753" fg:w="349"/><text x="77.9770%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (737 samples, 0.14%)</title><rect x="77.6903%" y="197" width="0.1401%" height="15" fill="rgb(237,140,51)" fg:x="408560" fg:w="737"/><text x="77.9403%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (195 samples, 0.04%)</title><rect x="77.7933%" y="181" width="0.0371%" height="15" fill="rgb(236,157,25)" fg:x="409102" fg:w="195"/><text x="78.0433%" y="191.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (2,558 samples, 0.49%)</title><rect x="77.4109%" y="293" width="0.4864%" height="15" fill="rgb(219,209,0)" fg:x="407091" fg:w="2558"/><text x="77.6609%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,330 samples, 0.44%)</title><rect x="77.4543%" y="277" width="0.4431%" height="15" fill="rgb(240,116,54)" fg:x="407319" fg:w="2330"/><text x="77.7043%" y="287.50"></text></g><g><title>core::hash::Hasher::write_u64 (2,330 samples, 0.44%)</title><rect x="77.4543%" y="261" width="0.4431%" height="15" fill="rgb(216,10,36)" fg:x="407319" fg:w="2330"/><text x="77.7043%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,329 samples, 0.44%)</title><rect x="77.4545%" y="245" width="0.4429%" height="15" fill="rgb(222,72,44)" fg:x="407320" fg:w="2329"/><text x="77.7045%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,329 samples, 0.44%)</title><rect x="77.4545%" y="229" width="0.4429%" height="15" fill="rgb(232,159,9)" fg:x="407320" fg:w="2329"/><text x="77.7045%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,329 samples, 0.44%)</title><rect x="77.4545%" y="213" width="0.4429%" height="15" fill="rgb(210,39,32)" fg:x="407320" fg:w="2329"/><text x="77.7045%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (352 samples, 0.07%)</title><rect x="77.8304%" y="197" width="0.0669%" height="15" fill="rgb(216,194,45)" fg:x="409297" fg:w="352"/><text x="78.0804%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (353 samples, 0.07%)</title><rect x="78.0778%" y="229" width="0.0671%" height="15" fill="rgb(218,18,35)" fg:x="410598" fg:w="353"/><text x="78.3278%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (716 samples, 0.14%)</title><rect x="78.0425%" y="245" width="0.1362%" height="15" fill="rgb(207,83,51)" fg:x="410412" fg:w="716"/><text x="78.2925%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (177 samples, 0.03%)</title><rect x="78.1449%" y="229" width="0.0337%" height="15" fill="rgb(225,63,43)" fg:x="410951" fg:w="177"/><text x="78.3949%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (659 samples, 0.13%)</title><rect x="78.2640%" y="229" width="0.1253%" height="15" fill="rgb(207,57,36)" fg:x="411577" fg:w="659"/><text x="78.5140%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3,458 samples, 0.66%)</title><rect x="77.8974%" y="293" width="0.6576%" height="15" fill="rgb(216,99,33)" fg:x="409649" fg:w="3458"/><text x="78.1474%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,458 samples, 0.66%)</title><rect x="77.8974%" y="277" width="0.6576%" height="15" fill="rgb(225,42,16)" fg:x="409649" fg:w="3458"/><text x="78.1474%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,458 samples, 0.66%)</title><rect x="77.8974%" y="261" width="0.6576%" height="15" fill="rgb(220,201,45)" fg:x="409649" fg:w="3458"/><text x="78.1474%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,979 samples, 0.38%)</title><rect x="78.1786%" y="245" width="0.3763%" height="15" fill="rgb(225,33,4)" fg:x="411128" fg:w="1979"/><text x="78.4286%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (871 samples, 0.17%)</title><rect x="78.3893%" y="229" width="0.1656%" height="15" fill="rgb(224,33,50)" fg:x="412236" fg:w="871"/><text x="78.6393%" y="239.50"></text></g><g><title>hashbrown::map::make_insert_hash (6,883 samples, 1.31%)</title><rect x="77.3845%" y="309" width="1.3088%" height="15" fill="rgb(246,198,51)" fg:x="406952" fg:w="6883"/><text x="77.6345%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (728 samples, 0.14%)</title><rect x="78.5549%" y="293" width="0.1384%" height="15" fill="rgb(205,22,4)" fg:x="413107" fg:w="728"/><text x="78.8049%" y="303.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (524 samples, 0.10%)</title><rect x="78.5937%" y="277" width="0.0996%" height="15" fill="rgb(206,3,8)" fg:x="413311" fg:w="524"/><text x="78.8437%" y="287.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (331 samples, 0.06%)</title><rect x="78.6304%" y="261" width="0.0629%" height="15" fill="rgb(251,23,15)" fg:x="413504" fg:w="331"/><text x="78.8804%" y="271.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (331 samples, 0.06%)</title><rect x="78.6304%" y="245" width="0.0629%" height="15" fill="rgb(252,88,28)" fg:x="413504" fg:w="331"/><text x="78.8804%" y="255.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (348 samples, 0.07%)</title><rect x="78.8904%" y="245" width="0.0662%" height="15" fill="rgb(212,127,14)" fg:x="414871" fg:w="348"/><text x="79.1404%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (384 samples, 0.07%)</title><rect x="78.8904%" y="261" width="0.0730%" height="15" fill="rgb(247,145,37)" fg:x="414871" fg:w="384"/><text x="79.1404%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (630 samples, 0.12%)</title><rect x="78.8866%" y="293" width="0.1198%" height="15" fill="rgb(209,117,53)" fg:x="414851" fg:w="630"/><text x="79.1366%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (630 samples, 0.12%)</title><rect x="78.8866%" y="277" width="0.1198%" height="15" fill="rgb(212,90,42)" fg:x="414851" fg:w="630"/><text x="79.1366%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (226 samples, 0.04%)</title><rect x="78.9634%" y="261" width="0.0430%" height="15" fill="rgb(218,164,37)" fg:x="415255" fg:w="226"/><text x="79.2134%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (226 samples, 0.04%)</title><rect x="78.9634%" y="245" width="0.0430%" height="15" fill="rgb(246,65,34)" fg:x="415255" fg:w="226"/><text x="79.2134%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (226 samples, 0.04%)</title><rect x="78.9634%" y="229" width="0.0430%" height="15" fill="rgb(231,100,33)" fg:x="415255" fg:w="226"/><text x="79.2134%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (132 samples, 0.03%)</title><rect x="79.0199%" y="245" width="0.0251%" height="15" fill="rgb(228,126,14)" fg:x="415552" fg:w="132"/><text x="79.2699%" y="255.50"></text></g><g><title>hashbrown::raw::h2 (114 samples, 0.02%)</title><rect x="79.0450%" y="245" width="0.0217%" height="15" fill="rgb(215,173,21)" fg:x="415684" fg:w="114"/><text x="79.2950%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1,768 samples, 0.34%)</title><rect x="79.0083%" y="293" width="0.3362%" height="15" fill="rgb(210,6,40)" fg:x="415491" fg:w="1768"/><text x="79.2583%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1,768 samples, 0.34%)</title><rect x="79.0083%" y="277" width="0.3362%" height="15" fill="rgb(212,48,18)" fg:x="415491" fg:w="1768"/><text x="79.2583%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1,768 samples, 0.34%)</title><rect x="79.0083%" y="261" width="0.3362%" height="15" fill="rgb(230,214,11)" fg:x="415491" fg:w="1768"/><text x="79.2583%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,434 samples, 0.27%)</title><rect x="79.0718%" y="245" width="0.2727%" height="15" fill="rgb(254,105,39)" fg:x="415825" fg:w="1434"/><text x="79.3218%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1,434 samples, 0.27%)</title><rect x="79.0718%" y="229" width="0.2727%" height="15" fill="rgb(245,158,5)" fg:x="415825" fg:w="1434"/><text x="79.3218%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1,434 samples, 0.27%)</title><rect x="79.0718%" y="213" width="0.2727%" height="15" fill="rgb(249,208,11)" fg:x="415825" fg:w="1434"/><text x="79.3218%" y="223.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1,434 samples, 0.27%)</title><rect x="79.0718%" y="197" width="0.2727%" height="15" fill="rgb(210,39,28)" fg:x="415825" fg:w="1434"/><text x="79.3218%" y="207.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (12,177 samples, 2.32%)</title><rect x="77.0318%" y="325" width="2.3155%" height="15" fill="rgb(211,56,53)" fg:x="405097" fg:w="12177"/><text x="77.2818%" y="335.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,439 samples, 0.65%)</title><rect x="78.6934%" y="309" width="0.6539%" height="15" fill="rgb(226,201,30)" fg:x="413835" fg:w="3439"/><text x="78.9434%" y="319.50"></text></g><g><title>crabchess::game::Game::make_move (43,891 samples, 8.35%)</title><rect x="71.1828%" y="357" width="8.3462%" height="15" fill="rgb(239,101,34)" fg:x="374338" fg:w="43891"/><text x="71.4328%" y="367.50">crabchess::g..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (15,737 samples, 2.99%)</title><rect x="76.5364%" y="341" width="2.9925%" height="15" fill="rgb(226,209,5)" fg:x="402492" fg:w="15737"/><text x="76.7864%" y="351.50">std..</text></g><g><title>std::collections::hash::map::map_entry (955 samples, 0.18%)</title><rect x="79.3473%" y="325" width="0.1816%" height="15" fill="rgb(250,105,47)" fg:x="417274" fg:w="955"/><text x="79.5973%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (620 samples, 0.12%)</title><rect x="79.7071%" y="341" width="0.1179%" height="15" fill="rgb(230,72,3)" fg:x="419166" fg:w="620"/><text x="79.9571%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (53 samples, 0.01%)</title><rect x="79.8149%" y="325" width="0.0101%" height="15" fill="rgb(232,218,39)" fg:x="419733" fg:w="53"/><text x="80.0649%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (53 samples, 0.01%)</title><rect x="79.8149%" y="309" width="0.0101%" height="15" fill="rgb(248,166,6)" fg:x="419733" fg:w="53"/><text x="80.0649%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (342 samples, 0.07%)</title><rect x="80.6457%" y="181" width="0.0650%" height="15" fill="rgb(247,89,20)" fg:x="424102" fg:w="342"/><text x="80.8957%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (850 samples, 0.16%)</title><rect x="80.5926%" y="197" width="0.1616%" height="15" fill="rgb(248,130,54)" fg:x="423823" fg:w="850"/><text x="80.8426%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (229 samples, 0.04%)</title><rect x="80.7107%" y="181" width="0.0435%" height="15" fill="rgb(234,196,4)" fg:x="424444" fg:w="229"/><text x="80.9607%" y="191.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (2,896 samples, 0.55%)</title><rect x="80.2641%" y="293" width="0.5507%" height="15" fill="rgb(250,143,31)" fg:x="422095" fg:w="2896"/><text x="80.5141%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,437 samples, 0.46%)</title><rect x="80.3513%" y="277" width="0.4634%" height="15" fill="rgb(211,110,34)" fg:x="422554" fg:w="2437"/><text x="80.6013%" y="287.50"></text></g><g><title>core::hash::Hasher::write_u64 (2,437 samples, 0.46%)</title><rect x="80.3513%" y="261" width="0.4634%" height="15" fill="rgb(215,124,48)" fg:x="422554" fg:w="2437"/><text x="80.6013%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,401 samples, 0.46%)</title><rect x="80.3582%" y="245" width="0.4566%" height="15" fill="rgb(216,46,13)" fg:x="422590" fg:w="2401"/><text x="80.6082%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,401 samples, 0.46%)</title><rect x="80.3582%" y="229" width="0.4566%" height="15" fill="rgb(205,184,25)" fg:x="422590" fg:w="2401"/><text x="80.6082%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,401 samples, 0.46%)</title><rect x="80.3582%" y="213" width="0.4566%" height="15" fill="rgb(228,1,10)" fg:x="422590" fg:w="2401"/><text x="80.6082%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (318 samples, 0.06%)</title><rect x="80.7543%" y="197" width="0.0605%" height="15" fill="rgb(213,116,27)" fg:x="424673" fg:w="318"/><text x="81.0043%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (343 samples, 0.07%)</title><rect x="80.9796%" y="229" width="0.0652%" height="15" fill="rgb(241,95,50)" fg:x="425858" fg:w="343"/><text x="81.2296%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (690 samples, 0.13%)</title><rect x="80.9441%" y="245" width="0.1312%" height="15" fill="rgb(238,48,32)" fg:x="425671" fg:w="690"/><text x="81.1941%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (160 samples, 0.03%)</title><rect x="81.0448%" y="229" width="0.0304%" height="15" fill="rgb(235,113,49)" fg:x="426201" fg:w="160"/><text x="81.2948%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (399 samples, 0.08%)</title><rect x="81.1437%" y="229" width="0.0759%" height="15" fill="rgb(205,127,43)" fg:x="426721" fg:w="399"/><text x="81.3937%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2,970 samples, 0.56%)</title><rect x="80.8147%" y="293" width="0.5648%" height="15" fill="rgb(250,162,2)" fg:x="424991" fg:w="2970"/><text x="81.0647%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,970 samples, 0.56%)</title><rect x="80.8147%" y="277" width="0.5648%" height="15" fill="rgb(220,13,41)" fg:x="424991" fg:w="2970"/><text x="81.0647%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,970 samples, 0.56%)</title><rect x="80.8147%" y="261" width="0.5648%" height="15" fill="rgb(249,221,25)" fg:x="424991" fg:w="2970"/><text x="81.0647%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,600 samples, 0.30%)</title><rect x="81.0753%" y="245" width="0.3043%" height="15" fill="rgb(215,208,19)" fg:x="426361" fg:w="1600"/><text x="81.3253%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (841 samples, 0.16%)</title><rect x="81.2196%" y="229" width="0.1599%" height="15" fill="rgb(236,175,2)" fg:x="427120" fg:w="841"/><text x="81.4696%" y="239.50"></text></g><g><title>hashbrown::map::make_insert_hash (6,896 samples, 1.31%)</title><rect x="80.2523%" y="309" width="1.3113%" height="15" fill="rgb(241,52,2)" fg:x="422033" fg:w="6896"/><text x="80.5023%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (968 samples, 0.18%)</title><rect x="81.3795%" y="293" width="0.1841%" height="15" fill="rgb(248,140,14)" fg:x="427961" fg:w="968"/><text x="81.6295%" y="303.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (472 samples, 0.09%)</title><rect x="81.4738%" y="277" width="0.0898%" height="15" fill="rgb(253,22,42)" fg:x="428457" fg:w="472"/><text x="81.7238%" y="287.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (387 samples, 0.07%)</title><rect x="81.4900%" y="261" width="0.0736%" height="15" fill="rgb(234,61,47)" fg:x="428542" fg:w="387"/><text x="81.7400%" y="271.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (387 samples, 0.07%)</title><rect x="81.4900%" y="245" width="0.0736%" height="15" fill="rgb(208,226,15)" fg:x="428542" fg:w="387"/><text x="81.7400%" y="255.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (217 samples, 0.04%)</title><rect x="81.6351%" y="245" width="0.0413%" height="15" fill="rgb(217,221,4)" fg:x="429305" fg:w="217"/><text x="81.8851%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (604 samples, 0.11%)</title><rect x="81.6267%" y="293" width="0.1149%" height="15" fill="rgb(212,174,34)" fg:x="429261" fg:w="604"/><text x="81.8767%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (604 samples, 0.11%)</title><rect x="81.6267%" y="277" width="0.1149%" height="15" fill="rgb(253,83,4)" fg:x="429261" fg:w="604"/><text x="81.8767%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (560 samples, 0.11%)</title><rect x="81.6351%" y="261" width="0.1065%" height="15" fill="rgb(250,195,49)" fg:x="429305" fg:w="560"/><text x="81.8851%" y="271.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (343 samples, 0.07%)</title><rect x="81.6763%" y="245" width="0.0652%" height="15" fill="rgb(241,192,25)" fg:x="429522" fg:w="343"/><text x="81.9263%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (249 samples, 0.05%)</title><rect x="81.7416%" y="293" width="0.0473%" height="15" fill="rgb(208,124,10)" fg:x="429865" fg:w="249"/><text x="81.9916%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (249 samples, 0.05%)</title><rect x="81.7416%" y="277" width="0.0473%" height="15" fill="rgb(222,33,0)" fg:x="429865" fg:w="249"/><text x="81.9916%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (249 samples, 0.05%)</title><rect x="81.7416%" y="261" width="0.0473%" height="15" fill="rgb(234,209,28)" fg:x="429865" fg:w="249"/><text x="81.9916%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (249 samples, 0.05%)</title><rect x="81.7416%" y="245" width="0.0473%" height="15" fill="rgb(224,11,23)" fg:x="429865" fg:w="249"/><text x="81.9916%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (162 samples, 0.03%)</title><rect x="81.7927%" y="245" width="0.0308%" height="15" fill="rgb(232,99,1)" fg:x="430134" fg:w="162"/><text x="82.0427%" y="255.50"></text></g><g><title>hashbrown::raw::h2 (177 samples, 0.03%)</title><rect x="81.8235%" y="245" width="0.0337%" height="15" fill="rgb(237,95,45)" fg:x="430296" fg:w="177"/><text x="82.0735%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (757 samples, 0.14%)</title><rect x="81.7889%" y="293" width="0.1439%" height="15" fill="rgb(208,109,11)" fg:x="430114" fg:w="757"/><text x="82.0389%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (757 samples, 0.14%)</title><rect x="81.7889%" y="277" width="0.1439%" height="15" fill="rgb(216,190,48)" fg:x="430114" fg:w="757"/><text x="82.0389%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (757 samples, 0.14%)</title><rect x="81.7889%" y="261" width="0.1439%" height="15" fill="rgb(251,171,36)" fg:x="430114" fg:w="757"/><text x="82.0389%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (394 samples, 0.07%)</title><rect x="81.8579%" y="245" width="0.0749%" height="15" fill="rgb(230,62,22)" fg:x="430477" fg:w="394"/><text x="82.1079%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (394 samples, 0.07%)</title><rect x="81.8579%" y="229" width="0.0749%" height="15" fill="rgb(225,114,35)" fg:x="430477" fg:w="394"/><text x="82.1079%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (394 samples, 0.07%)</title><rect x="81.8579%" y="213" width="0.0749%" height="15" fill="rgb(215,118,42)" fg:x="430477" fg:w="394"/><text x="82.1079%" y="223.50"></text></g><g><title>core::core_arch::simd::i8x16::new (394 samples, 0.07%)</title><rect x="81.8579%" y="197" width="0.0749%" height="15" fill="rgb(243,119,21)" fg:x="430477" fg:w="394"/><text x="82.1079%" y="207.50"></text></g><g><title>&lt;crabchess::castling::CastleRights as core::cmp::PartialEq&gt;::eq (136 samples, 0.03%)</title><rect x="82.0420%" y="261" width="0.0259%" height="15" fill="rgb(252,177,53)" fg:x="431445" fg:w="136"/><text x="82.2920%" y="271.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (12,388 samples, 2.36%)</title><rect x="79.9164%" y="325" width="2.3557%" height="15" fill="rgb(237,209,29)" fg:x="420267" fg:w="12388"/><text x="80.1664%" y="335.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,726 samples, 0.71%)</title><rect x="81.5636%" y="309" width="0.7085%" height="15" fill="rgb(212,65,23)" fg:x="428929" fg:w="3726"/><text x="81.8136%" y="319.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1,784 samples, 0.34%)</title><rect x="81.9329%" y="293" width="0.3392%" height="15" fill="rgb(230,222,46)" fg:x="430871" fg:w="1784"/><text x="82.1829%" y="303.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (1,784 samples, 0.34%)</title><rect x="81.9329%" y="277" width="0.3392%" height="15" fill="rgb(215,135,32)" fg:x="430871" fg:w="1784"/><text x="82.1829%" y="287.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1,055 samples, 0.20%)</title><rect x="82.0715%" y="261" width="0.2006%" height="15" fill="rgb(246,101,22)" fg:x="431600" fg:w="1055"/><text x="82.3215%" y="271.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (1,055 samples, 0.20%)</title><rect x="82.0715%" y="245" width="0.2006%" height="15" fill="rgb(206,107,13)" fg:x="431600" fg:w="1055"/><text x="82.3215%" y="255.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,055 samples, 0.20%)</title><rect x="82.0715%" y="229" width="0.2006%" height="15" fill="rgb(250,100,44)" fg:x="431600" fg:w="1055"/><text x="82.3215%" y="239.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,055 samples, 0.20%)</title><rect x="82.0715%" y="213" width="0.2006%" height="15" fill="rgb(231,147,38)" fg:x="431600" fg:w="1055"/><text x="82.3215%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,055 samples, 0.20%)</title><rect x="82.0715%" y="197" width="0.2006%" height="15" fill="rgb(229,8,40)" fg:x="431600" fg:w="1055"/><text x="82.3215%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,055 samples, 0.20%)</title><rect x="82.0715%" y="181" width="0.2006%" height="15" fill="rgb(221,135,30)" fg:x="431600" fg:w="1055"/><text x="82.3215%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (75 samples, 0.01%)</title><rect x="82.2578%" y="165" width="0.0143%" height="15" fill="rgb(249,193,18)" fg:x="432580" fg:w="75"/><text x="82.5078%" y="175.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (75 samples, 0.01%)</title><rect x="82.2578%" y="149" width="0.0143%" height="15" fill="rgb(209,133,39)" fg:x="432580" fg:w="75"/><text x="82.5078%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (75 samples, 0.01%)</title><rect x="82.2578%" y="133" width="0.0143%" height="15" fill="rgb(232,100,14)" fg:x="432580" fg:w="75"/><text x="82.5078%" y="143.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (75 samples, 0.01%)</title><rect x="82.2578%" y="117" width="0.0143%" height="15" fill="rgb(224,185,1)" fg:x="432580" fg:w="75"/><text x="82.5078%" y="127.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (13,058 samples, 2.48%)</title><rect x="79.8250%" y="341" width="2.4831%" height="15" fill="rgb(223,139,8)" fg:x="419786" fg:w="13058"/><text x="80.0750%" y="351.50">st..</text></g><g><title>std::collections::hash::map::map_entry (189 samples, 0.04%)</title><rect x="82.2721%" y="325" width="0.0359%" height="15" fill="rgb(232,213,38)" fg:x="432655" fg:w="189"/><text x="82.5221%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (245 samples, 0.05%)</title><rect x="82.8361%" y="165" width="0.0466%" height="15" fill="rgb(207,94,22)" fg:x="435621" fg:w="245"/><text x="83.0861%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (802 samples, 0.15%)</title><rect x="82.7804%" y="181" width="0.1525%" height="15" fill="rgb(219,183,54)" fg:x="435328" fg:w="802"/><text x="83.0304%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (264 samples, 0.05%)</title><rect x="82.8827%" y="165" width="0.0502%" height="15" fill="rgb(216,185,54)" fg:x="435866" fg:w="264"/><text x="83.1327%" y="175.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (2,510 samples, 0.48%)</title><rect x="82.5199%" y="277" width="0.4773%" height="15" fill="rgb(254,217,39)" fg:x="433958" fg:w="2510"/><text x="82.7699%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2,246 samples, 0.43%)</title><rect x="82.5701%" y="261" width="0.4271%" height="15" fill="rgb(240,178,23)" fg:x="434222" fg:w="2246"/><text x="82.8201%" y="271.50"></text></g><g><title>core::hash::Hasher::write_u64 (2,246 samples, 0.43%)</title><rect x="82.5701%" y="245" width="0.4271%" height="15" fill="rgb(218,11,47)" fg:x="434222" fg:w="2246"/><text x="82.8201%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,239 samples, 0.43%)</title><rect x="82.5714%" y="229" width="0.4258%" height="15" fill="rgb(218,51,51)" fg:x="434229" fg:w="2239"/><text x="82.8214%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,239 samples, 0.43%)</title><rect x="82.5714%" y="213" width="0.4258%" height="15" fill="rgb(238,126,27)" fg:x="434229" fg:w="2239"/><text x="82.8214%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,239 samples, 0.43%)</title><rect x="82.5714%" y="197" width="0.4258%" height="15" fill="rgb(249,202,22)" fg:x="434229" fg:w="2239"/><text x="82.8214%" y="207.50"></text></g><g><title>core::hash::sip::u8to64_le (338 samples, 0.06%)</title><rect x="82.9329%" y="181" width="0.0643%" height="15" fill="rgb(254,195,49)" fg:x="436130" fg:w="338"/><text x="83.1829%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (354 samples, 0.07%)</title><rect x="83.1636%" y="213" width="0.0673%" height="15" fill="rgb(208,123,14)" fg:x="437343" fg:w="354"/><text x="83.4136%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (689 samples, 0.13%)</title><rect x="83.1331%" y="229" width="0.1310%" height="15" fill="rgb(224,200,8)" fg:x="437183" fg:w="689"/><text x="83.3831%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (175 samples, 0.03%)</title><rect x="83.2309%" y="213" width="0.0333%" height="15" fill="rgb(217,61,36)" fg:x="437697" fg:w="175"/><text x="83.4809%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (602 samples, 0.11%)</title><rect x="83.3396%" y="213" width="0.1145%" height="15" fill="rgb(206,35,45)" fg:x="438269" fg:w="602"/><text x="83.5896%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3,275 samples, 0.62%)</title><rect x="82.9972%" y="277" width="0.6228%" height="15" fill="rgb(217,65,33)" fg:x="436468" fg:w="3275"/><text x="83.2472%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,275 samples, 0.62%)</title><rect x="82.9972%" y="261" width="0.6228%" height="15" fill="rgb(222,158,48)" fg:x="436468" fg:w="3275"/><text x="83.2472%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,275 samples, 0.62%)</title><rect x="82.9972%" y="245" width="0.6228%" height="15" fill="rgb(254,2,54)" fg:x="436468" fg:w="3275"/><text x="83.2472%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,871 samples, 0.36%)</title><rect x="83.2641%" y="229" width="0.3558%" height="15" fill="rgb(250,143,38)" fg:x="437872" fg:w="1871"/><text x="83.5141%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (872 samples, 0.17%)</title><rect x="83.4541%" y="213" width="0.1658%" height="15" fill="rgb(248,25,0)" fg:x="438871" fg:w="872"/><text x="83.7041%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (6,979 samples, 1.33%)</title><rect x="82.4691%" y="293" width="1.3271%" height="15" fill="rgb(206,152,27)" fg:x="433691" fg:w="6979"/><text x="82.7191%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (927 samples, 0.18%)</title><rect x="83.6199%" y="277" width="0.1763%" height="15" fill="rgb(240,77,30)" fg:x="439743" fg:w="927"/><text x="83.8699%" y="287.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (424 samples, 0.08%)</title><rect x="83.7156%" y="261" width="0.0806%" height="15" fill="rgb(231,5,3)" fg:x="440246" fg:w="424"/><text x="83.9656%" y="271.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (261 samples, 0.05%)</title><rect x="83.7466%" y="245" width="0.0496%" height="15" fill="rgb(207,226,32)" fg:x="440409" fg:w="261"/><text x="83.9966%" y="255.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (261 samples, 0.05%)</title><rect x="83.7466%" y="229" width="0.0496%" height="15" fill="rgb(222,207,47)" fg:x="440409" fg:w="261"/><text x="83.9966%" y="239.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (194 samples, 0.04%)</title><rect x="84.3897%" y="213" width="0.0369%" height="15" fill="rgb(229,115,45)" fg:x="443791" fg:w="194"/><text x="84.6397%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (535 samples, 0.10%)</title><rect x="84.3528%" y="245" width="0.1017%" height="15" fill="rgb(224,191,6)" fg:x="443597" fg:w="535"/><text x="84.6028%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (371 samples, 0.07%)</title><rect x="84.3840%" y="229" width="0.0705%" height="15" fill="rgb(230,227,24)" fg:x="443761" fg:w="371"/><text x="84.6340%" y="239.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (147 samples, 0.03%)</title><rect x="84.4266%" y="213" width="0.0280%" height="15" fill="rgb(228,80,19)" fg:x="443985" fg:w="147"/><text x="84.6766%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (567 samples, 0.11%)</title><rect x="84.3528%" y="261" width="0.1078%" height="15" fill="rgb(247,229,0)" fg:x="443597" fg:w="567"/><text x="84.6028%" y="271.50"></text></g><g><title>&lt;crabchess::castling::CastleRights as core::cmp::PartialEq&gt;::eq (179 samples, 0.03%)</title><rect x="84.6276%" y="229" width="0.0340%" height="15" fill="rgb(237,194,15)" fg:x="445042" fg:w="179"/><text x="84.8776%" y="239.50"></text></g><g><title>&lt;crabchess::square::Square as core::cmp::PartialEq&gt;::eq (73 samples, 0.01%)</title><rect x="84.6616%" y="229" width="0.0139%" height="15" fill="rgb(219,203,20)" fg:x="445221" fg:w="73"/><text x="84.9116%" y="239.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2,908 samples, 0.55%)</title><rect x="84.4606%" y="261" width="0.5530%" height="15" fill="rgb(234,128,8)" fg:x="444164" fg:w="2908"/><text x="84.7106%" y="271.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (2,908 samples, 0.55%)</title><rect x="84.4606%" y="245" width="0.5530%" height="15" fill="rgb(248,202,8)" fg:x="444164" fg:w="2908"/><text x="84.7106%" y="255.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1,778 samples, 0.34%)</title><rect x="84.6755%" y="229" width="0.3381%" height="15" fill="rgb(206,104,37)" fg:x="445294" fg:w="1778"/><text x="84.9255%" y="239.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (1,778 samples, 0.34%)</title><rect x="84.6755%" y="213" width="0.3381%" height="15" fill="rgb(223,8,27)" fg:x="445294" fg:w="1778"/><text x="84.9255%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,778 samples, 0.34%)</title><rect x="84.6755%" y="197" width="0.3381%" height="15" fill="rgb(216,217,28)" fg:x="445294" fg:w="1778"/><text x="84.9255%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,778 samples, 0.34%)</title><rect x="84.6755%" y="181" width="0.3381%" height="15" fill="rgb(249,199,1)" fg:x="445294" fg:w="1778"/><text x="84.9255%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,778 samples, 0.34%)</title><rect x="84.6755%" y="165" width="0.3381%" height="15" fill="rgb(240,85,17)" fg:x="445294" fg:w="1778"/><text x="84.9255%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,778 samples, 0.34%)</title><rect x="84.6755%" y="149" width="0.3381%" height="15" fill="rgb(206,108,45)" fg:x="445294" fg:w="1778"/><text x="84.9255%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1,258 samples, 0.24%)</title><rect x="84.7744%" y="133" width="0.2392%" height="15" fill="rgb(245,210,41)" fg:x="445814" fg:w="1258"/><text x="85.0244%" y="143.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (1,258 samples, 0.24%)</title><rect x="84.7744%" y="117" width="0.2392%" height="15" fill="rgb(206,13,37)" fg:x="445814" fg:w="1258"/><text x="85.0244%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,258 samples, 0.24%)</title><rect x="84.7744%" y="101" width="0.2392%" height="15" fill="rgb(250,61,18)" fg:x="445814" fg:w="1258"/><text x="85.0244%" y="111.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (1,258 samples, 0.24%)</title><rect x="84.7744%" y="85" width="0.2392%" height="15" fill="rgb(235,172,48)" fg:x="445814" fg:w="1258"/><text x="85.0244%" y="95.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (289 samples, 0.05%)</title><rect x="85.0136%" y="261" width="0.0550%" height="15" fill="rgb(249,201,17)" fg:x="447072" fg:w="289"/><text x="85.2636%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (289 samples, 0.05%)</title><rect x="85.0136%" y="245" width="0.0550%" height="15" fill="rgb(219,208,6)" fg:x="447072" fg:w="289"/><text x="85.2636%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (289 samples, 0.05%)</title><rect x="85.0136%" y="229" width="0.0550%" height="15" fill="rgb(248,31,23)" fg:x="447072" fg:w="289"/><text x="85.2636%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (289 samples, 0.05%)</title><rect x="85.0136%" y="213" width="0.0550%" height="15" fill="rgb(245,15,42)" fg:x="447072" fg:w="289"/><text x="85.2636%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (141 samples, 0.03%)</title><rect x="85.0695%" y="213" width="0.0268%" height="15" fill="rgb(222,217,39)" fg:x="447366" fg:w="141"/><text x="85.3195%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6,610 samples, 1.26%)</title><rect x="83.9734%" y="277" width="1.2569%" height="15" fill="rgb(210,219,27)" fg:x="441602" fg:w="6610"/><text x="84.2234%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (851 samples, 0.16%)</title><rect x="85.0685%" y="261" width="0.1618%" height="15" fill="rgb(252,166,36)" fg:x="447361" fg:w="851"/><text x="85.3185%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (851 samples, 0.16%)</title><rect x="85.0685%" y="245" width="0.1618%" height="15" fill="rgb(245,132,34)" fg:x="447361" fg:w="851"/><text x="85.3185%" y="255.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (851 samples, 0.16%)</title><rect x="85.0685%" y="229" width="0.1618%" height="15" fill="rgb(236,54,3)" fg:x="447361" fg:w="851"/><text x="85.3185%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (697 samples, 0.13%)</title><rect x="85.0978%" y="213" width="0.1325%" height="15" fill="rgb(241,173,43)" fg:x="447515" fg:w="697"/><text x="85.3478%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (697 samples, 0.13%)</title><rect x="85.0978%" y="197" width="0.1325%" height="15" fill="rgb(215,190,9)" fg:x="447515" fg:w="697"/><text x="85.3478%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (697 samples, 0.13%)</title><rect x="85.0978%" y="181" width="0.1325%" height="15" fill="rgb(242,101,16)" fg:x="447515" fg:w="697"/><text x="85.3478%" y="191.50"></text></g><g><title>core::core_arch::simd::i8x16::new (697 samples, 0.13%)</title><rect x="85.0978%" y="165" width="0.1325%" height="15" fill="rgb(223,190,21)" fg:x="447515" fg:w="697"/><text x="85.3478%" y="175.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (709 samples, 0.13%)</title><rect x="85.2304%" y="261" width="0.1348%" height="15" fill="rgb(215,228,25)" fg:x="448212" fg:w="709"/><text x="85.4804%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (709 samples, 0.13%)</title><rect x="85.2304%" y="245" width="0.1348%" height="15" fill="rgb(225,36,22)" fg:x="448212" fg:w="709"/><text x="85.4804%" y="255.50"></text></g><g><title>core::ptr::read (709 samples, 0.13%)</title><rect x="85.2304%" y="229" width="0.1348%" height="15" fill="rgb(251,106,46)" fg:x="448212" fg:w="709"/><text x="85.4804%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (161 samples, 0.03%)</title><rect x="85.3652%" y="245" width="0.0306%" height="15" fill="rgb(208,90,1)" fg:x="448921" fg:w="161"/><text x="85.6152%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (161 samples, 0.03%)</title><rect x="85.3652%" y="229" width="0.0306%" height="15" fill="rgb(243,10,4)" fg:x="448921" fg:w="161"/><text x="85.6152%" y="239.50"></text></g><g><title>hashbrown::raw::offset_from (161 samples, 0.03%)</title><rect x="85.3652%" y="213" width="0.0306%" height="15" fill="rgb(212,137,27)" fg:x="448921" fg:w="161"/><text x="85.6152%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (161 samples, 0.03%)</title><rect x="85.3652%" y="197" width="0.0306%" height="15" fill="rgb(231,220,49)" fg:x="448921" fg:w="161"/><text x="85.6152%" y="207.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::leading_zeros (215 samples, 0.04%)</title><rect x="85.5544%" y="229" width="0.0409%" height="15" fill="rgb(237,96,20)" fg:x="449916" fg:w="215"/><text x="85.8044%" y="239.50"></text></g><g><title>core::num::&lt;impl u16&gt;::leading_zeros (215 samples, 0.04%)</title><rect x="85.5544%" y="213" width="0.0409%" height="15" fill="rgb(239,229,30)" fg:x="449916" fg:w="215"/><text x="85.8044%" y="223.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::trailing_zeros (131 samples, 0.02%)</title><rect x="85.5953%" y="229" width="0.0249%" height="15" fill="rgb(219,65,33)" fg:x="450131" fg:w="131"/><text x="85.8453%" y="239.50"></text></g><g><title>core::num::&lt;impl u16&gt;::trailing_zeros (131 samples, 0.02%)</title><rect x="85.5953%" y="213" width="0.0249%" height="15" fill="rgb(243,134,7)" fg:x="450131" fg:w="131"/><text x="85.8453%" y="223.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (56 samples, 0.01%)</title><rect x="85.6202%" y="229" width="0.0106%" height="15" fill="rgb(216,177,54)" fg:x="450262" fg:w="56"/><text x="85.8702%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (56 samples, 0.01%)</title><rect x="85.6202%" y="213" width="0.0106%" height="15" fill="rgb(211,160,20)" fg:x="450262" fg:w="56"/><text x="85.8702%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (56 samples, 0.01%)</title><rect x="85.6202%" y="197" width="0.0106%" height="15" fill="rgb(239,85,39)" fg:x="450262" fg:w="56"/><text x="85.8702%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (100 samples, 0.02%)</title><rect x="85.6308%" y="197" width="0.0190%" height="15" fill="rgb(232,125,22)" fg:x="450318" fg:w="100"/><text x="85.8808%" y="207.50"></text></g><g><title>crabchess::game::Game::undo (33,138 samples, 6.30%)</title><rect x="79.5289%" y="357" width="6.3014%" height="15" fill="rgb(244,57,34)" fg:x="418229" fg:w="33138"/><text x="79.7789%" y="367.50">crabches..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (18,523 samples, 3.52%)</title><rect x="82.3080%" y="341" width="3.5223%" height="15" fill="rgb(214,203,32)" fg:x="432844" fg:w="18523"/><text x="82.5580%" y="351.50">std..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (18,328 samples, 3.49%)</title><rect x="82.3451%" y="325" width="3.4852%" height="15" fill="rgb(207,58,43)" fg:x="433039" fg:w="18328"/><text x="82.5951%" y="335.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (17,843 samples, 3.39%)</title><rect x="82.4373%" y="309" width="3.3930%" height="15" fill="rgb(215,193,15)" fg:x="433524" fg:w="17843"/><text x="82.6873%" y="319.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (10,697 samples, 2.03%)</title><rect x="83.7962%" y="293" width="2.0341%" height="15" fill="rgb(232,15,44)" fg:x="440670" fg:w="10697"/><text x="84.0462%" y="303.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (3,155 samples, 0.60%)</title><rect x="85.2304%" y="277" width="0.5999%" height="15" fill="rgb(212,3,48)" fg:x="448212" fg:w="3155"/><text x="85.4804%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (2,446 samples, 0.47%)</title><rect x="85.3652%" y="261" width="0.4651%" height="15" fill="rgb(218,128,7)" fg:x="448921" fg:w="2446"/><text x="85.6152%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (2,285 samples, 0.43%)</title><rect x="85.3958%" y="245" width="0.4345%" height="15" fill="rgb(226,216,39)" fg:x="449082" fg:w="2285"/><text x="85.6458%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1,049 samples, 0.20%)</title><rect x="85.6308%" y="229" width="0.1995%" height="15" fill="rgb(243,47,51)" fg:x="450318" fg:w="1049"/><text x="85.8808%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,049 samples, 0.20%)</title><rect x="85.6308%" y="213" width="0.1995%" height="15" fill="rgb(241,183,40)" fg:x="450318" fg:w="1049"/><text x="85.8808%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (949 samples, 0.18%)</title><rect x="85.6498%" y="197" width="0.1805%" height="15" fill="rgb(231,217,32)" fg:x="450418" fg:w="949"/><text x="85.8998%" y="207.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.02%)</title><rect x="85.9954%" y="341" width="0.0169%" height="15" fill="rgb(229,61,38)" fg:x="452235" fg:w="89"/><text x="86.2454%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (205 samples, 0.04%)</title><rect x="86.2059%" y="325" width="0.0390%" height="15" fill="rgb(225,210,5)" fg:x="453342" fg:w="205"/><text x="86.4559%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,347 samples, 0.26%)</title><rect x="86.0138%" y="341" width="0.2561%" height="15" fill="rgb(231,79,45)" fg:x="452332" fg:w="1347"/><text x="86.2638%" y="351.50"></text></g><g><title>core::ptr::write (132 samples, 0.03%)</title><rect x="86.2448%" y="325" width="0.0251%" height="15" fill="rgb(224,100,7)" fg:x="453547" fg:w="132"/><text x="86.4948%" y="335.50"></text></g><g><title>__GI___libc_malloc (237 samples, 0.05%)</title><rect x="86.2768%" y="229" width="0.0451%" height="15" fill="rgb(241,198,18)" fg:x="453715" fg:w="237"/><text x="86.5268%" y="239.50"></text></g><g><title>tcache_get (125 samples, 0.02%)</title><rect x="86.2981%" y="213" width="0.0238%" height="15" fill="rgb(252,97,53)" fg:x="453827" fg:w="125"/><text x="86.5481%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (279 samples, 0.05%)</title><rect x="86.2751%" y="277" width="0.0531%" height="15" fill="rgb(220,88,7)" fg:x="453706" fg:w="279"/><text x="86.5251%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (279 samples, 0.05%)</title><rect x="86.2751%" y="261" width="0.0531%" height="15" fill="rgb(213,176,14)" fg:x="453706" fg:w="279"/><text x="86.5251%" y="271.50"></text></g><g><title>alloc::alloc::alloc (276 samples, 0.05%)</title><rect x="86.2757%" y="245" width="0.0525%" height="15" fill="rgb(246,73,7)" fg:x="453709" fg:w="276"/><text x="86.5257%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (312 samples, 0.06%)</title><rect x="86.2699%" y="341" width="0.0593%" height="15" fill="rgb(245,64,36)" fg:x="453679" fg:w="312"/><text x="86.5199%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (312 samples, 0.06%)</title><rect x="86.2699%" y="325" width="0.0593%" height="15" fill="rgb(245,80,10)" fg:x="453679" fg:w="312"/><text x="86.5199%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (299 samples, 0.06%)</title><rect x="86.2724%" y="309" width="0.0569%" height="15" fill="rgb(232,107,50)" fg:x="453692" fg:w="299"/><text x="86.5224%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (299 samples, 0.06%)</title><rect x="86.2724%" y="293" width="0.0569%" height="15" fill="rgb(253,3,0)" fg:x="453692" fg:w="299"/><text x="86.5224%" y="303.50"></text></g><g><title>__GI___libc_free (120 samples, 0.02%)</title><rect x="86.3312%" y="213" width="0.0228%" height="15" fill="rgb(212,99,53)" fg:x="454001" fg:w="120"/><text x="86.5812%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (348 samples, 0.07%)</title><rect x="86.3293%" y="245" width="0.0662%" height="15" fill="rgb(249,111,54)" fg:x="453991" fg:w="348"/><text x="86.5793%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (348 samples, 0.07%)</title><rect x="86.3293%" y="229" width="0.0662%" height="15" fill="rgb(249,55,30)" fg:x="453991" fg:w="348"/><text x="86.5793%" y="239.50"></text></g><g><title>_int_free (171 samples, 0.03%)</title><rect x="86.3629%" y="213" width="0.0325%" height="15" fill="rgb(237,47,42)" fg:x="454168" fg:w="171"/><text x="86.6129%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;crabchess::moves::Move&gt;&gt; (396 samples, 0.08%)</title><rect x="86.3293%" y="341" width="0.0753%" height="15" fill="rgb(211,20,18)" fg:x="453991" fg:w="396"/><text x="86.5793%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (396 samples, 0.08%)</title><rect x="86.3293%" y="325" width="0.0753%" height="15" fill="rgb(231,203,46)" fg:x="453991" fg:w="396"/><text x="86.5793%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;crabchess::moves::Move,alloc::alloc::Global&gt;&gt; (396 samples, 0.08%)</title><rect x="86.3293%" y="309" width="0.0753%" height="15" fill="rgb(237,142,3)" fg:x="453991" fg:w="396"/><text x="86.5793%" y="319.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (396 samples, 0.08%)</title><rect x="86.3293%" y="293" width="0.0753%" height="15" fill="rgb(241,107,1)" fg:x="453991" fg:w="396"/><text x="86.5793%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;crabchess::moves::Move&gt;&gt; (396 samples, 0.08%)</title><rect x="86.3293%" y="277" width="0.0753%" height="15" fill="rgb(229,83,13)" fg:x="453991" fg:w="396"/><text x="86.5793%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (396 samples, 0.08%)</title><rect x="86.3293%" y="261" width="0.0753%" height="15" fill="rgb(241,91,40)" fg:x="453991" fg:w="396"/><text x="86.5793%" y="271.50"></text></g><g><title>crabchess::bitboard::Bitboard::is_square_occupied (309 samples, 0.06%)</title><rect x="86.4658%" y="325" width="0.0588%" height="15" fill="rgb(225,3,45)" fg:x="454709" fg:w="309"/><text x="86.7158%" y="335.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (72 samples, 0.01%)</title><rect x="86.5379%" y="309" width="0.0137%" height="15" fill="rgb(244,223,14)" fg:x="455088" fg:w="72"/><text x="86.7879%" y="319.50"></text></g><g><title>crabchess::board::Board::is_move_castle (849 samples, 0.16%)</title><rect x="86.4046%" y="341" width="0.1614%" height="15" fill="rgb(224,124,37)" fg:x="454387" fg:w="849"/><text x="86.6546%" y="351.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (160 samples, 0.03%)</title><rect x="86.5356%" y="325" width="0.0304%" height="15" fill="rgb(251,171,30)" fg:x="455076" fg:w="160"/><text x="86.7856%" y="335.50"></text></g><g><title>crabchess::square::Square::rank (56 samples, 0.01%)</title><rect x="86.5554%" y="309" width="0.0106%" height="15" fill="rgb(236,46,54)" fg:x="455180" fg:w="56"/><text x="86.8054%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (130 samples, 0.02%)</title><rect x="86.6889%" y="309" width="0.0247%" height="15" fill="rgb(245,213,5)" fg:x="455882" fg:w="130"/><text x="86.9389%" y="319.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (449 samples, 0.09%)</title><rect x="86.6659%" y="325" width="0.0854%" height="15" fill="rgb(230,144,27)" fg:x="455761" fg:w="449"/><text x="86.9159%" y="335.50"></text></g><g><title>core::ptr::read (198 samples, 0.04%)</title><rect x="86.7136%" y="309" width="0.0377%" height="15" fill="rgb(220,86,6)" fg:x="456012" fg:w="198"/><text x="86.9636%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.02%)</title><rect x="86.7581%" y="325" width="0.0217%" height="15" fill="rgb(240,20,13)" fg:x="456246" fg:w="114"/><text x="87.0081%" y="335.50"></text></g><g><title>&lt;crabchess::square::Square as core::convert::From&lt;crabchess::bitboard::Bitboard&gt;&gt;::from (88 samples, 0.02%)</title><rect x="86.7630%" y="309" width="0.0167%" height="15" fill="rgb(217,89,34)" fg:x="456272" fg:w="88"/><text x="87.0130%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (88 samples, 0.02%)</title><rect x="86.7630%" y="293" width="0.0167%" height="15" fill="rgb(229,13,5)" fg:x="456272" fg:w="88"/><text x="87.0130%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (891 samples, 0.17%)</title><rect x="86.7826%" y="325" width="0.1694%" height="15" fill="rgb(244,67,35)" fg:x="456375" fg:w="891"/><text x="87.0326%" y="335.50"></text></g><g><title>core::ptr::write (661 samples, 0.13%)</title><rect x="86.8263%" y="309" width="0.1257%" height="15" fill="rgb(221,40,2)" fg:x="456605" fg:w="661"/><text x="87.0763%" y="319.50"></text></g><g><title>__GI___libc_malloc (475 samples, 0.09%)</title><rect x="86.9673%" y="213" width="0.0903%" height="15" fill="rgb(237,157,21)" fg:x="457346" fg:w="475"/><text x="87.2173%" y="223.50"></text></g><g><title>tcache_get (212 samples, 0.04%)</title><rect x="87.0173%" y="197" width="0.0403%" height="15" fill="rgb(222,94,11)" fg:x="457609" fg:w="212"/><text x="87.2673%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (564 samples, 0.11%)</title><rect x="86.9648%" y="261" width="0.1072%" height="15" fill="rgb(249,113,6)" fg:x="457333" fg:w="564"/><text x="87.2148%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (564 samples, 0.11%)</title><rect x="86.9648%" y="245" width="0.1072%" height="15" fill="rgb(238,137,36)" fg:x="457333" fg:w="564"/><text x="87.2148%" y="255.50"></text></g><g><title>alloc::alloc::alloc (563 samples, 0.11%)</title><rect x="86.9650%" y="229" width="0.1071%" height="15" fill="rgb(210,102,26)" fg:x="457334" fg:w="563"/><text x="87.2150%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (647 samples, 0.12%)</title><rect x="86.9520%" y="325" width="0.1230%" height="15" fill="rgb(218,30,30)" fg:x="457266" fg:w="647"/><text x="87.2020%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (647 samples, 0.12%)</title><rect x="86.9520%" y="309" width="0.1230%" height="15" fill="rgb(214,67,26)" fg:x="457266" fg:w="647"/><text x="87.2020%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (611 samples, 0.12%)</title><rect x="86.9589%" y="293" width="0.1162%" height="15" fill="rgb(251,9,53)" fg:x="457302" fg:w="611"/><text x="87.2089%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (611 samples, 0.12%)</title><rect x="86.9589%" y="277" width="0.1162%" height="15" fill="rgb(228,204,25)" fg:x="457302" fg:w="611"/><text x="87.2089%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.02%)</title><rect x="87.0882%" y="261" width="0.0171%" height="15" fill="rgb(207,153,8)" fg:x="457982" fg:w="90"/><text x="87.3382%" y="271.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (76 samples, 0.01%)</title><rect x="87.1053%" y="245" width="0.0145%" height="15" fill="rgb(242,9,16)" fg:x="458072" fg:w="76"/><text x="87.3553%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (653 samples, 0.12%)</title><rect x="87.0751%" y="325" width="0.1242%" height="15" fill="rgb(217,211,10)" fg:x="457913" fg:w="653"/><text x="87.3251%" y="335.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (653 samples, 0.12%)</title><rect x="87.0751%" y="309" width="0.1242%" height="15" fill="rgb(219,228,52)" fg:x="457913" fg:w="653"/><text x="87.3251%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (653 samples, 0.12%)</title><rect x="87.0751%" y="293" width="0.1242%" height="15" fill="rgb(231,92,29)" fg:x="457913" fg:w="653"/><text x="87.3251%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (653 samples, 0.12%)</title><rect x="87.0751%" y="277" width="0.1242%" height="15" fill="rgb(232,8,23)" fg:x="457913" fg:w="653"/><text x="87.3251%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (494 samples, 0.09%)</title><rect x="87.1053%" y="261" width="0.0939%" height="15" fill="rgb(216,211,34)" fg:x="458072" fg:w="494"/><text x="87.3553%" y="271.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_pseudolegal_moves::{{closure}} (418 samples, 0.08%)</title><rect x="87.1198%" y="245" width="0.0795%" height="15" fill="rgb(236,151,0)" fg:x="458148" fg:w="418"/><text x="87.3698%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (418 samples, 0.08%)</title><rect x="87.1198%" y="229" width="0.0795%" height="15" fill="rgb(209,168,3)" fg:x="458148" fg:w="418"/><text x="87.3698%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (102 samples, 0.02%)</title><rect x="87.1992%" y="325" width="0.0194%" height="15" fill="rgb(208,129,28)" fg:x="458566" fg:w="102"/><text x="87.4492%" y="335.50"></text></g><g><title>__GI___libc_free (109 samples, 0.02%)</title><rect x="87.2211%" y="197" width="0.0207%" height="15" fill="rgb(229,78,22)" fg:x="458681" fg:w="109"/><text x="87.4711%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (316 samples, 0.06%)</title><rect x="87.2186%" y="229" width="0.0601%" height="15" fill="rgb(228,187,13)" fg:x="458668" fg:w="316"/><text x="87.4686%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (316 samples, 0.06%)</title><rect x="87.2186%" y="213" width="0.0601%" height="15" fill="rgb(240,119,24)" fg:x="458668" fg:w="316"/><text x="87.4686%" y="223.50"></text></g><g><title>_int_free (171 samples, 0.03%)</title><rect x="87.2462%" y="197" width="0.0325%" height="15" fill="rgb(209,194,42)" fg:x="458813" fg:w="171"/><text x="87.4962%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(crabchess::square::Square,crabchess::bitboard::Bitboard)&gt;&gt; (364 samples, 0.07%)</title><rect x="87.2186%" y="325" width="0.0692%" height="15" fill="rgb(247,200,46)" fg:x="458668" fg:w="364"/><text x="87.4686%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (364 samples, 0.07%)</title><rect x="87.2186%" y="309" width="0.0692%" height="15" fill="rgb(218,76,16)" fg:x="458668" fg:w="364"/><text x="87.4686%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(crabchess::square::Square,crabchess::bitboard::Bitboard),alloc::alloc::Global&gt;&gt; (364 samples, 0.07%)</title><rect x="87.2186%" y="293" width="0.0692%" height="15" fill="rgb(225,21,48)" fg:x="458668" fg:w="364"/><text x="87.4686%" y="303.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (364 samples, 0.07%)</title><rect x="87.2186%" y="277" width="0.0692%" height="15" fill="rgb(239,223,50)" fg:x="458668" fg:w="364"/><text x="87.4686%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(crabchess::square::Square,crabchess::bitboard::Bitboard)&gt;&gt; (364 samples, 0.07%)</title><rect x="87.2186%" y="261" width="0.0692%" height="15" fill="rgb(244,45,21)" fg:x="458668" fg:w="364"/><text x="87.4686%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (364 samples, 0.07%)</title><rect x="87.2186%" y="245" width="0.0692%" height="15" fill="rgb(232,33,43)" fg:x="458668" fg:w="364"/><text x="87.4686%" y="255.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (150 samples, 0.03%)</title><rect x="87.5546%" y="309" width="0.0285%" height="15" fill="rgb(209,8,3)" fg:x="460435" fg:w="150"/><text x="87.8046%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (150 samples, 0.03%)</title><rect x="87.5546%" y="293" width="0.0285%" height="15" fill="rgb(214,25,53)" fg:x="460435" fg:w="150"/><text x="87.8046%" y="303.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (150 samples, 0.03%)</title><rect x="87.5546%" y="277" width="0.0285%" height="15" fill="rgb(254,186,54)" fg:x="460435" fg:w="150"/><text x="87.8046%" y="287.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (57 samples, 0.01%)</title><rect x="87.5874%" y="309" width="0.0108%" height="15" fill="rgb(208,174,49)" fg:x="460607" fg:w="57"/><text x="87.8374%" y="319.50"></text></g><g><title>crabchess::bitboard::Bitboard::is_square_occupied (120 samples, 0.02%)</title><rect x="87.6377%" y="309" width="0.0228%" height="15" fill="rgb(233,191,51)" fg:x="460872" fg:w="120"/><text x="87.8877%" y="319.50"></text></g><g><title>crabchess::board::Board::color_at_square (303 samples, 0.06%)</title><rect x="87.6606%" y="309" width="0.0576%" height="15" fill="rgb(222,134,10)" fg:x="460992" fg:w="303"/><text x="87.9106%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (84 samples, 0.02%)</title><rect x="87.7022%" y="293" width="0.0160%" height="15" fill="rgb(230,226,20)" fg:x="461211" fg:w="84"/><text x="87.9522%" y="303.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (256 samples, 0.05%)</title><rect x="87.7722%" y="293" width="0.0487%" height="15" fill="rgb(251,111,25)" fg:x="461579" fg:w="256"/><text x="88.0222%" y="303.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (652 samples, 0.12%)</title><rect x="87.7273%" y="309" width="0.1240%" height="15" fill="rgb(224,40,46)" fg:x="461343" fg:w="652"/><text x="87.9773%" y="319.50"></text></g><g><title>crabchess::square::Square::rank (127 samples, 0.02%)</title><rect x="87.8271%" y="293" width="0.0241%" height="15" fill="rgb(236,108,47)" fg:x="461868" fg:w="127"/><text x="88.0771%" y="303.50"></text></g><g><title>crabchess::util::pawn_direction (146 samples, 0.03%)</title><rect x="87.8513%" y="309" width="0.0278%" height="15" fill="rgb(234,93,0)" fg:x="461995" fg:w="146"/><text x="88.1013%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::pawn_moves (3,151 samples, 0.60%)</title><rect x="87.2932%" y="325" width="0.5992%" height="15" fill="rgb(224,213,32)" fg:x="459060" fg:w="3151"/><text x="87.5432%" y="335.50"></text></g><g><title>crabchess::util::pawn_start_rank (70 samples, 0.01%)</title><rect x="87.8791%" y="309" width="0.0133%" height="15" fill="rgb(251,11,48)" fg:x="462141" fg:w="70"/><text x="88.1291%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::bishop_moves (214 samples, 0.04%)</title><rect x="88.1032%" y="309" width="0.0407%" height="15" fill="rgb(236,173,5)" fg:x="463320" fg:w="214"/><text x="88.3532%" y="319.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (191 samples, 0.04%)</title><rect x="88.1076%" y="293" width="0.0363%" height="15" fill="rgb(230,95,12)" fg:x="463343" fg:w="191"/><text x="88.3576%" y="303.50"></text></g><g><title>crabchess::magic::get_attacks (191 samples, 0.04%)</title><rect x="88.1076%" y="277" width="0.0363%" height="15" fill="rgb(232,209,1)" fg:x="463343" fg:w="191"/><text x="88.3576%" y="287.50"></text></g><g><title>crabchess::magic::compute_magic_key (106 samples, 0.02%)</title><rect x="88.1238%" y="261" width="0.0202%" height="15" fill="rgb(232,6,1)" fg:x="463428" fg:w="106"/><text x="88.3738%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::arith::Mul&gt;::mul (93 samples, 0.02%)</title><rect x="88.1263%" y="245" width="0.0177%" height="15" fill="rgb(210,224,50)" fg:x="463441" fg:w="93"/><text x="88.3763%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (93 samples, 0.02%)</title><rect x="88.1263%" y="229" width="0.0177%" height="15" fill="rgb(228,127,35)" fg:x="463441" fg:w="93"/><text x="88.3763%" y="239.50"></text></g><g><title>crabchess::movegen::MoveGenerator::king_moves (109 samples, 0.02%)</title><rect x="88.1439%" y="309" width="0.0207%" height="15" fill="rgb(245,102,45)" fg:x="463534" fg:w="109"/><text x="88.3939%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::knight_moves (112 samples, 0.02%)</title><rect x="88.1647%" y="309" width="0.0213%" height="15" fill="rgb(214,1,49)" fg:x="463643" fg:w="112"/><text x="88.4147%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::ne (205 samples, 0.04%)</title><rect x="88.1894%" y="261" width="0.0390%" height="15" fill="rgb(226,163,40)" fg:x="463773" fg:w="205"/><text x="88.4394%" y="271.50"></text></g><g><title>crabchess::board::Board::color_at_square (211 samples, 0.04%)</title><rect x="88.1888%" y="277" width="0.0401%" height="15" fill="rgb(239,212,28)" fg:x="463770" fg:w="211"/><text x="88.4388%" y="287.50"></text></g><g><title>crabchess::movegen::MoveGenerator::bishop_moves (365 samples, 0.07%)</title><rect x="88.1869%" y="293" width="0.0694%" height="15" fill="rgb(220,20,13)" fg:x="463760" fg:w="365"/><text x="88.4369%" y="303.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (144 samples, 0.03%)</title><rect x="88.2289%" y="277" width="0.0274%" height="15" fill="rgb(210,164,35)" fg:x="463981" fg:w="144"/><text x="88.4789%" y="287.50"></text></g><g><title>crabchess::magic::get_attacks (144 samples, 0.03%)</title><rect x="88.2289%" y="261" width="0.0274%" height="15" fill="rgb(248,109,41)" fg:x="463981" fg:w="144"/><text x="88.4789%" y="271.50"></text></g><g><title>crabchess::movegen::MoveGenerator::queen_moves (398 samples, 0.08%)</title><rect x="88.1860%" y="309" width="0.0757%" height="15" fill="rgb(238,23,50)" fg:x="463755" fg:w="398"/><text x="88.4360%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::sq_pseudolegal_moves (2,075 samples, 0.39%)</title><rect x="87.8924%" y="325" width="0.3946%" height="15" fill="rgb(211,48,49)" fg:x="462211" fg:w="2075"/><text x="88.1424%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::rook_moves (133 samples, 0.03%)</title><rect x="88.2616%" y="309" width="0.0253%" height="15" fill="rgb(223,36,21)" fg:x="464153" fg:w="133"/><text x="88.5116%" y="319.50"></text></g><g><title>crabchess::magic::get_rook_attacks (113 samples, 0.02%)</title><rect x="88.2655%" y="293" width="0.0215%" height="15" fill="rgb(207,123,46)" fg:x="464173" fg:w="113"/><text x="88.5155%" y="303.50"></text></g><g><title>crabchess::magic::get_attacks (113 samples, 0.02%)</title><rect x="88.2655%" y="277" width="0.0215%" height="15" fill="rgb(240,218,32)" fg:x="464173" fg:w="113"/><text x="88.5155%" y="287.50"></text></g><g><title>crabchess::magic::compute_magic_key (60 samples, 0.01%)</title><rect x="88.2755%" y="261" width="0.0114%" height="15" fill="rgb(252,5,43)" fg:x="464226" fg:w="60"/><text x="88.5255%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::iter::traits::iterator::Iterator&gt;::next (492 samples, 0.09%)</title><rect x="88.4501%" y="293" width="0.0936%" height="15" fill="rgb(252,84,19)" fg:x="465144" fg:w="492"/><text x="88.7001%" y="303.50"></text></g><g><title>crabchess::movegen::bitboard_to_moves (2,797 samples, 0.53%)</title><rect x="88.2869%" y="325" width="0.5319%" height="15" fill="rgb(243,152,39)" fg:x="464286" fg:w="2797"/><text x="88.5369%" y="335.50"></text></g><g><title>crabchess::movegen::bitboard_to_promotions (2,797 samples, 0.53%)</title><rect x="88.2869%" y="309" width="0.5319%" height="15" fill="rgb(234,160,15)" fg:x="464286" fg:w="2797"/><text x="88.5369%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,447 samples, 0.28%)</title><rect x="88.5436%" y="293" width="0.2752%" height="15" fill="rgb(237,34,20)" fg:x="465636" fg:w="1447"/><text x="88.7936%" y="303.50"></text></g><g><title>core::ptr::write (1,040 samples, 0.20%)</title><rect x="88.6210%" y="277" width="0.1978%" height="15" fill="rgb(229,97,13)" fg:x="466043" fg:w="1040"/><text x="88.8710%" y="287.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_pseudolegal_moves (11,871 samples, 2.26%)</title><rect x="86.5660%" y="341" width="2.2573%" height="15" fill="rgb(234,71,50)" fg:x="455236" fg:w="11871"/><text x="86.8160%" y="351.50">c..</text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (307 samples, 0.06%)</title><rect x="89.3891%" y="325" width="0.0584%" height="15" fill="rgb(253,155,4)" fg:x="470082" fg:w="307"/><text x="89.6391%" y="335.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (238 samples, 0.05%)</title><rect x="89.4475%" y="325" width="0.0453%" height="15" fill="rgb(222,185,37)" fg:x="470389" fg:w="238"/><text x="89.6975%" y="335.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::ne (187 samples, 0.04%)</title><rect x="89.5747%" y="309" width="0.0356%" height="15" fill="rgb(251,177,13)" fg:x="471058" fg:w="187"/><text x="89.8247%" y="319.50"></text></g><g><title>crabchess::board::Board::color_at_square (874 samples, 0.17%)</title><rect x="89.5041%" y="325" width="0.1662%" height="15" fill="rgb(250,179,40)" fg:x="470687" fg:w="874"/><text x="89.7541%" y="335.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (316 samples, 0.06%)</title><rect x="89.6102%" y="309" width="0.0601%" height="15" fill="rgb(242,44,2)" fg:x="471245" fg:w="316"/><text x="89.8602%" y="319.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (311 samples, 0.06%)</title><rect x="89.6715%" y="325" width="0.0591%" height="15" fill="rgb(216,177,13)" fg:x="471567" fg:w="311"/><text x="89.9215%" y="335.50"></text></g><g><title>crabchess::board::Board::get_color_occupancy (87 samples, 0.02%)</title><rect x="89.7141%" y="309" width="0.0165%" height="15" fill="rgb(216,106,43)" fg:x="471791" fg:w="87"/><text x="89.9641%" y="319.50"></text></g><g><title>&lt;crabchess::square::Square as core::cmp::PartialEq&gt;::eq (92 samples, 0.02%)</title><rect x="89.7331%" y="309" width="0.0175%" height="15" fill="rgb(216,183,2)" fg:x="471891" fg:w="92"/><text x="89.9831%" y="319.50"></text></g><g><title>crabchess::board::Board::is_move_en_passant (402 samples, 0.08%)</title><rect x="89.7306%" y="325" width="0.0764%" height="15" fill="rgb(249,75,3)" fg:x="471878" fg:w="402"/><text x="89.9806%" y="335.50"></text></g><g><title>crabchess::moves::Move::to_square (297 samples, 0.06%)</title><rect x="89.7506%" y="309" width="0.0565%" height="15" fill="rgb(219,67,39)" fg:x="471983" fg:w="297"/><text x="90.0006%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (103 samples, 0.02%)</title><rect x="89.8875%" y="277" width="0.0196%" height="15" fill="rgb(253,228,2)" fg:x="472703" fg:w="103"/><text x="90.1375%" y="287.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (66 samples, 0.01%)</title><rect x="89.9107%" y="277" width="0.0126%" height="15" fill="rgb(235,138,27)" fg:x="472825" fg:w="66"/><text x="90.1607%" y="287.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (66 samples, 0.01%)</title><rect x="89.9107%" y="261" width="0.0126%" height="15" fill="rgb(236,97,51)" fg:x="472825" fg:w="66"/><text x="90.1607%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (621 samples, 0.12%)</title><rect x="89.9232%" y="229" width="0.1181%" height="15" fill="rgb(240,80,30)" fg:x="472891" fg:w="621"/><text x="90.1732%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (596 samples, 0.11%)</title><rect x="89.9280%" y="213" width="0.1133%" height="15" fill="rgb(230,178,19)" fg:x="472916" fg:w="596"/><text x="90.1780%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (625 samples, 0.12%)</title><rect x="89.9232%" y="245" width="0.1188%" height="15" fill="rgb(210,190,27)" fg:x="472891" fg:w="625"/><text x="90.1732%" y="255.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (676 samples, 0.13%)</title><rect x="89.9232%" y="277" width="0.1285%" height="15" fill="rgb(222,107,31)" fg:x="472891" fg:w="676"/><text x="90.1732%" y="287.50"></text></g><g><title>crabchess::magic::get_attacks (676 samples, 0.13%)</title><rect x="89.9232%" y="261" width="0.1285%" height="15" fill="rgb(216,127,34)" fg:x="472891" fg:w="676"/><text x="90.1732%" y="271.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (55 samples, 0.01%)</title><rect x="90.0630%" y="245" width="0.0105%" height="15" fill="rgb(234,116,52)" fg:x="473626" fg:w="55"/><text x="90.3130%" y="255.50"></text></g><g><title>crabchess::magic::get_rook_attacks (192 samples, 0.04%)</title><rect x="90.0518%" y="277" width="0.0365%" height="15" fill="rgb(222,124,15)" fg:x="473567" fg:w="192"/><text x="90.3018%" y="287.50"></text></g><g><title>crabchess::magic::get_attacks (192 samples, 0.04%)</title><rect x="90.0518%" y="261" width="0.0365%" height="15" fill="rgb(231,179,28)" fg:x="473567" fg:w="192"/><text x="90.3018%" y="271.50"></text></g><g><title>crabchess::magic::compute_magic_key (78 samples, 0.01%)</title><rect x="90.0735%" y="245" width="0.0148%" height="15" fill="rgb(226,93,45)" fg:x="473681" fg:w="78"/><text x="90.3235%" y="255.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::arith::Mul&gt;::mul (53 samples, 0.01%)</title><rect x="90.0782%" y="229" width="0.0101%" height="15" fill="rgb(215,8,51)" fg:x="473706" fg:w="53"/><text x="90.3282%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (53 samples, 0.01%)</title><rect x="90.0782%" y="213" width="0.0101%" height="15" fill="rgb(223,106,5)" fg:x="473706" fg:w="53"/><text x="90.3282%" y="223.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (89 samples, 0.02%)</title><rect x="90.1005%" y="261" width="0.0169%" height="15" fill="rgb(250,191,5)" fg:x="473823" fg:w="89"/><text x="90.3505%" y="271.50"></text></g><g><title>crabchess::square::Square::file (53 samples, 0.01%)</title><rect x="90.1174%" y="261" width="0.0101%" height="15" fill="rgb(242,132,44)" fg:x="473912" fg:w="53"/><text x="90.3674%" y="271.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (287 samples, 0.05%)</title><rect x="90.0883%" y="277" width="0.0546%" height="15" fill="rgb(251,152,29)" fg:x="473759" fg:w="287"/><text x="90.3383%" y="287.50"></text></g><g><title>crabchess::square::Square::rank (81 samples, 0.02%)</title><rect x="90.1275%" y="261" width="0.0154%" height="15" fill="rgb(218,179,5)" fg:x="473965" fg:w="81"/><text x="90.3775%" y="271.50"></text></g><g><title>crabchess::movegen::MoveGenerator::is_square_attacked_by (1,811 samples, 0.34%)</title><rect x="89.8070%" y="325" width="0.3444%" height="15" fill="rgb(227,67,19)" fg:x="472280" fg:w="1811"/><text x="90.0570%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_square_attackers (1,809 samples, 0.34%)</title><rect x="89.8074%" y="309" width="0.3440%" height="15" fill="rgb(233,119,31)" fg:x="472282" fg:w="1809"/><text x="90.0574%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (1,717 samples, 0.33%)</title><rect x="89.8249%" y="293" width="0.3265%" height="15" fill="rgb(241,120,22)" fg:x="472374" fg:w="1717"/><text x="90.0749%" y="303.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (604 samples, 0.11%)</title><rect x="90.8830%" y="309" width="0.1149%" height="15" fill="rgb(224,102,30)" fg:x="477938" fg:w="604"/><text x="91.1330%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (281 samples, 0.05%)</title><rect x="90.9978%" y="309" width="0.0534%" height="15" fill="rgb(210,164,37)" fg:x="478542" fg:w="281"/><text x="91.2478%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (362 samples, 0.07%)</title><rect x="91.0512%" y="309" width="0.0688%" height="15" fill="rgb(226,191,16)" fg:x="478823" fg:w="362"/><text x="91.3012%" y="319.50"></text></g><g><title>&lt;crabchess::square::Square as core::ops::arith::Add&lt;crabchess::direction::Direction&gt;&gt;::add (295 samples, 0.06%)</title><rect x="91.1201%" y="309" width="0.0561%" height="15" fill="rgb(214,40,45)" fg:x="479185" fg:w="295"/><text x="91.3701%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (772 samples, 0.15%)</title><rect x="91.1762%" y="293" width="0.1468%" height="15" fill="rgb(244,29,26)" fg:x="479480" fg:w="772"/><text x="91.4262%" y="303.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (976 samples, 0.19%)</title><rect x="91.1762%" y="309" width="0.1856%" height="15" fill="rgb(216,16,5)" fg:x="479480" fg:w="976"/><text x="91.4262%" y="319.50"></text></g><g><title>crabchess::board::Board::get_color_occupancy (204 samples, 0.04%)</title><rect x="91.3230%" y="293" width="0.0388%" height="15" fill="rgb(249,76,35)" fg:x="480252" fg:w="204"/><text x="91.5730%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (943 samples, 0.18%)</title><rect x="91.3618%" y="261" width="0.1793%" height="15" fill="rgb(207,11,44)" fg:x="480456" fg:w="943"/><text x="91.6118%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (744 samples, 0.14%)</title><rect x="91.3996%" y="245" width="0.1415%" height="15" fill="rgb(228,190,49)" fg:x="480655" fg:w="744"/><text x="91.6496%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,120 samples, 0.21%)</title><rect x="91.3618%" y="277" width="0.2130%" height="15" fill="rgb(214,173,12)" fg:x="480456" fg:w="1120"/><text x="91.6118%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (177 samples, 0.03%)</title><rect x="91.5411%" y="261" width="0.0337%" height="15" fill="rgb(218,26,35)" fg:x="481399" fg:w="177"/><text x="91.7911%" y="271.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (177 samples, 0.03%)</title><rect x="91.5411%" y="245" width="0.0337%" height="15" fill="rgb(220,200,19)" fg:x="481399" fg:w="177"/><text x="91.7911%" y="255.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (188 samples, 0.04%)</title><rect x="91.5747%" y="277" width="0.0357%" height="15" fill="rgb(239,95,49)" fg:x="481576" fg:w="188"/><text x="91.8247%" y="287.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (1,653 samples, 0.31%)</title><rect x="91.3618%" y="309" width="0.3143%" height="15" fill="rgb(235,85,53)" fg:x="480456" fg:w="1653"/><text x="91.6118%" y="319.50"></text></g><g><title>crabchess::magic::get_attacks (1,653 samples, 0.31%)</title><rect x="91.3618%" y="293" width="0.3143%" height="15" fill="rgb(233,133,31)" fg:x="480456" fg:w="1653"/><text x="91.6118%" y="303.50"></text></g><g><title>crabchess::magic::compute_magic_key (345 samples, 0.07%)</title><rect x="91.6105%" y="277" width="0.0656%" height="15" fill="rgb(218,25,20)" fg:x="481764" fg:w="345"/><text x="91.8605%" y="287.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::arith::Mul&gt;::mul (89 samples, 0.02%)</title><rect x="91.6592%" y="261" width="0.0169%" height="15" fill="rgb(252,210,38)" fg:x="482020" fg:w="89"/><text x="91.9092%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (89 samples, 0.02%)</title><rect x="91.6592%" y="245" width="0.0169%" height="15" fill="rgb(242,134,21)" fg:x="482020" fg:w="89"/><text x="91.9092%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (305 samples, 0.06%)</title><rect x="91.7231%" y="261" width="0.0580%" height="15" fill="rgb(213,28,48)" fg:x="482356" fg:w="305"/><text x="91.9731%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (397 samples, 0.08%)</title><rect x="91.7231%" y="277" width="0.0755%" height="15" fill="rgb(250,196,2)" fg:x="482356" fg:w="397"/><text x="91.9731%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (92 samples, 0.02%)</title><rect x="91.7811%" y="261" width="0.0175%" height="15" fill="rgb(227,5,17)" fg:x="482661" fg:w="92"/><text x="92.0311%" y="271.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (92 samples, 0.02%)</title><rect x="91.7811%" y="245" width="0.0175%" height="15" fill="rgb(221,226,24)" fg:x="482661" fg:w="92"/><text x="92.0311%" y="255.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (125 samples, 0.02%)</title><rect x="91.7986%" y="277" width="0.0238%" height="15" fill="rgb(211,5,48)" fg:x="482753" fg:w="125"/><text x="92.0486%" y="287.50"></text></g><g><title>crabchess::magic::get_rook_attacks (1,197 samples, 0.23%)</title><rect x="91.6761%" y="309" width="0.2276%" height="15" fill="rgb(219,150,6)" fg:x="482109" fg:w="1197"/><text x="91.9261%" y="319.50"></text></g><g><title>crabchess::magic::get_attacks (1,197 samples, 0.23%)</title><rect x="91.6761%" y="293" width="0.2276%" height="15" fill="rgb(251,46,16)" fg:x="482109" fg:w="1197"/><text x="91.9261%" y="303.50"></text></g><g><title>crabchess::magic::compute_magic_key (428 samples, 0.08%)</title><rect x="91.8223%" y="277" width="0.0814%" height="15" fill="rgb(220,204,40)" fg:x="482878" fg:w="428"/><text x="92.0723%" y="287.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::arith::Mul&gt;::mul (332 samples, 0.06%)</title><rect x="91.8406%" y="261" width="0.0631%" height="15" fill="rgb(211,85,2)" fg:x="482974" fg:w="332"/><text x="92.0906%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (332 samples, 0.06%)</title><rect x="91.8406%" y="245" width="0.0631%" height="15" fill="rgb(229,17,7)" fg:x="482974" fg:w="332"/><text x="92.0906%" y="255.50"></text></g><g><title>core::cmp::max (329 samples, 0.06%)</title><rect x="92.0433%" y="293" width="0.0626%" height="15" fill="rgb(239,72,28)" fg:x="484040" fg:w="329"/><text x="92.2933%" y="303.50"></text></g><g><title>core::cmp::Ord::max (329 samples, 0.06%)</title><rect x="92.0433%" y="277" width="0.0626%" height="15" fill="rgb(230,47,54)" fg:x="484040" fg:w="329"/><text x="92.2933%" y="287.50"></text></g><g><title>core::cmp::max_by (329 samples, 0.06%)</title><rect x="92.0433%" y="261" width="0.0626%" height="15" fill="rgb(214,50,8)" fg:x="484040" fg:w="329"/><text x="92.2933%" y="271.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (1,122 samples, 0.21%)</title><rect x="92.1058%" y="293" width="0.2134%" height="15" fill="rgb(216,198,43)" fg:x="484369" fg:w="1122"/><text x="92.3558%" y="303.50"></text></g><g><title>crabchess::square::Square::file (609 samples, 0.12%)</title><rect x="92.3192%" y="293" width="0.1158%" height="15" fill="rgb(234,20,35)" fg:x="485491" fg:w="609"/><text x="92.5692%" y="303.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (3,825 samples, 0.73%)</title><rect x="91.9037%" y="309" width="0.7273%" height="15" fill="rgb(254,45,19)" fg:x="483306" fg:w="3825"/><text x="92.1537%" y="319.50"></text></g><g><title>crabchess::square::Square::rank (1,031 samples, 0.20%)</title><rect x="92.4350%" y="293" width="0.1961%" height="15" fill="rgb(219,14,44)" fg:x="486100" fg:w="1031"/><text x="92.6850%" y="303.50"></text></g><g><title>crabchess::util::opposite_color (145 samples, 0.03%)</title><rect x="92.6311%" y="309" width="0.0276%" height="15" fill="rgb(217,220,26)" fg:x="487131" fg:w="145"/><text x="92.8811%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (13,776 samples, 2.62%)</title><rect x="90.1514%" y="325" width="2.6196%" height="15" fill="rgb(213,158,28)" fg:x="474091" fg:w="13776"/><text x="90.4014%" y="335.50">cr..</text></g><g><title>crabchess::util::pawn_direction (591 samples, 0.11%)</title><rect x="92.6586%" y="309" width="0.1124%" height="15" fill="rgb(252,51,52)" fg:x="487276" fg:w="591"/><text x="92.9086%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::is_move_self_check (21,439 samples, 4.08%)</title><rect x="88.8234%" y="341" width="4.0768%" height="15" fill="rgb(246,89,16)" fg:x="467107" fg:w="21439"/><text x="89.0734%" y="351.50">crab..</text></g><g><title>crabchess::util::opposite_color (660 samples, 0.13%)</title><rect x="92.7746%" y="325" width="0.1255%" height="15" fill="rgb(216,158,49)" fg:x="487886" fg:w="660"/><text x="93.0246%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_moves (37,227 samples, 7.08%)</title><rect x="85.8303%" y="357" width="7.0790%" height="15" fill="rgb(236,107,19)" fg:x="451367" fg:w="37227"/><text x="86.0803%" y="367.50">crabchess..</text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (130 samples, 0.02%)</title><rect x="92.9309%" y="325" width="0.0247%" height="15" fill="rgb(228,185,30)" fg:x="488708" fg:w="130"/><text x="93.1809%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (104 samples, 0.02%)</title><rect x="92.9359%" y="309" width="0.0198%" height="15" fill="rgb(246,134,8)" fg:x="488734" fg:w="104"/><text x="93.1859%" y="319.50"></text></g><g><title>core::hash::Hasher::write_u64 (104 samples, 0.02%)</title><rect x="92.9359%" y="293" width="0.0198%" height="15" fill="rgb(214,143,50)" fg:x="488734" fg:w="104"/><text x="93.1859%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (98 samples, 0.02%)</title><rect x="92.9370%" y="277" width="0.0186%" height="15" fill="rgb(228,75,8)" fg:x="488740" fg:w="98"/><text x="93.1870%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (98 samples, 0.02%)</title><rect x="92.9370%" y="261" width="0.0186%" height="15" fill="rgb(207,175,4)" fg:x="488740" fg:w="98"/><text x="93.1870%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (98 samples, 0.02%)</title><rect x="92.9370%" y="245" width="0.0186%" height="15" fill="rgb(205,108,24)" fg:x="488740" fg:w="98"/><text x="93.1870%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (68 samples, 0.01%)</title><rect x="92.9749%" y="261" width="0.0129%" height="15" fill="rgb(244,120,49)" fg:x="488939" fg:w="68"/><text x="93.2249%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (215 samples, 0.04%)</title><rect x="92.9557%" y="325" width="0.0409%" height="15" fill="rgb(223,47,38)" fg:x="488838" fg:w="215"/><text x="93.2057%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (215 samples, 0.04%)</title><rect x="92.9557%" y="309" width="0.0409%" height="15" fill="rgb(229,179,11)" fg:x="488838" fg:w="215"/><text x="93.2057%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (215 samples, 0.04%)</title><rect x="92.9557%" y="293" width="0.0409%" height="15" fill="rgb(231,122,1)" fg:x="488838" fg:w="215"/><text x="93.2057%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (142 samples, 0.03%)</title><rect x="92.9695%" y="277" width="0.0270%" height="15" fill="rgb(245,119,9)" fg:x="488911" fg:w="142"/><text x="93.2195%" y="287.50"></text></g><g><title>hashbrown::map::make_insert_hash (386 samples, 0.07%)</title><rect x="92.9307%" y="341" width="0.0734%" height="15" fill="rgb(241,163,25)" fg:x="488707" fg:w="386"/><text x="93.1807%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.02%)</title><rect x="93.0129%" y="309" width="0.0164%" height="15" fill="rgb(217,214,3)" fg:x="489139" fg:w="86"/><text x="93.2629%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.02%)</title><rect x="93.0129%" y="293" width="0.0164%" height="15" fill="rgb(240,86,28)" fg:x="489139" fg:w="86"/><text x="93.2629%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (346 samples, 0.07%)</title><rect x="93.0041%" y="341" width="0.0658%" height="15" fill="rgb(215,47,9)" fg:x="489093" fg:w="346"/><text x="93.2541%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (346 samples, 0.07%)</title><rect x="93.0041%" y="325" width="0.0658%" height="15" fill="rgb(252,25,45)" fg:x="489093" fg:w="346"/><text x="93.2541%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (196 samples, 0.04%)</title><rect x="93.0327%" y="309" width="0.0373%" height="15" fill="rgb(251,164,9)" fg:x="489243" fg:w="196"/><text x="93.2827%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (196 samples, 0.04%)</title><rect x="93.0327%" y="293" width="0.0373%" height="15" fill="rgb(233,194,0)" fg:x="489243" fg:w="196"/><text x="93.2827%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (196 samples, 0.04%)</title><rect x="93.0327%" y="277" width="0.0373%" height="15" fill="rgb(249,111,24)" fg:x="489243" fg:w="196"/><text x="93.2827%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (176 samples, 0.03%)</title><rect x="93.0365%" y="261" width="0.0335%" height="15" fill="rgb(250,223,3)" fg:x="489263" fg:w="176"/><text x="93.2865%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (176 samples, 0.03%)</title><rect x="93.0365%" y="245" width="0.0335%" height="15" fill="rgb(236,178,37)" fg:x="489263" fg:w="176"/><text x="93.2865%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (176 samples, 0.03%)</title><rect x="93.0365%" y="229" width="0.0335%" height="15" fill="rgb(241,158,50)" fg:x="489263" fg:w="176"/><text x="93.2865%" y="239.50"></text></g><g><title>core::core_arch::simd::i8x16::new (176 samples, 0.03%)</title><rect x="93.0365%" y="213" width="0.0335%" height="15" fill="rgb(213,121,41)" fg:x="489263" fg:w="176"/><text x="93.2865%" y="223.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,074 samples, 0.58%)</title><rect x="93.0800%" y="325" width="0.5845%" height="15" fill="rgb(240,92,3)" fg:x="489492" fg:w="3074"/><text x="93.3300%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,074 samples, 0.58%)</title><rect x="93.0800%" y="309" width="0.5845%" height="15" fill="rgb(205,123,3)" fg:x="489492" fg:w="3074"/><text x="93.3300%" y="319.50"></text></g><g><title>core::ptr::write (3,074 samples, 0.58%)</title><rect x="93.0800%" y="293" width="0.5845%" height="15" fill="rgb(205,97,47)" fg:x="489492" fg:w="3074"/><text x="93.3300%" y="303.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (99 samples, 0.02%)</title><rect x="93.6701%" y="245" width="0.0188%" height="15" fill="rgb(247,152,14)" fg:x="492595" fg:w="99"/><text x="93.9201%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (93 samples, 0.02%)</title><rect x="93.6712%" y="229" width="0.0177%" height="15" fill="rgb(248,195,53)" fg:x="492601" fg:w="93"/><text x="93.9212%" y="239.50"></text></g><g><title>core::hash::Hasher::write_u64 (93 samples, 0.02%)</title><rect x="93.6712%" y="213" width="0.0177%" height="15" fill="rgb(226,201,16)" fg:x="492601" fg:w="93"/><text x="93.9212%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (69 samples, 0.01%)</title><rect x="93.6758%" y="197" width="0.0131%" height="15" fill="rgb(205,98,0)" fg:x="492625" fg:w="69"/><text x="93.9258%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (69 samples, 0.01%)</title><rect x="93.6758%" y="181" width="0.0131%" height="15" fill="rgb(214,191,48)" fg:x="492625" fg:w="69"/><text x="93.9258%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (69 samples, 0.01%)</title><rect x="93.6758%" y="165" width="0.0131%" height="15" fill="rgb(237,112,39)" fg:x="492625" fg:w="69"/><text x="93.9258%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (81 samples, 0.02%)</title><rect x="93.6889%" y="245" width="0.0154%" height="15" fill="rgb(247,203,27)" fg:x="492694" fg:w="81"/><text x="93.9389%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (81 samples, 0.02%)</title><rect x="93.6889%" y="229" width="0.0154%" height="15" fill="rgb(235,124,28)" fg:x="492694" fg:w="81"/><text x="93.9389%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (81 samples, 0.02%)</title><rect x="93.6889%" y="213" width="0.0154%" height="15" fill="rgb(208,207,46)" fg:x="492694" fg:w="81"/><text x="93.9389%" y="223.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (201 samples, 0.04%)</title><rect x="93.6693%" y="277" width="0.0382%" height="15" fill="rgb(234,176,4)" fg:x="492591" fg:w="201"/><text x="93.9193%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (201 samples, 0.04%)</title><rect x="93.6693%" y="261" width="0.0382%" height="15" fill="rgb(230,133,28)" fg:x="492591" fg:w="201"/><text x="93.9193%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (92 samples, 0.02%)</title><rect x="93.7077%" y="277" width="0.0175%" height="15" fill="rgb(211,137,40)" fg:x="492793" fg:w="92"/><text x="93.9577%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (92 samples, 0.02%)</title><rect x="93.7077%" y="261" width="0.0175%" height="15" fill="rgb(254,35,13)" fg:x="492793" fg:w="92"/><text x="93.9577%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (92 samples, 0.02%)</title><rect x="93.7077%" y="245" width="0.0175%" height="15" fill="rgb(225,49,51)" fg:x="492793" fg:w="92"/><text x="93.9577%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (82 samples, 0.02%)</title><rect x="93.7252%" y="261" width="0.0156%" height="15" fill="rgb(251,10,15)" fg:x="492885" fg:w="82"/><text x="93.9752%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (88 samples, 0.02%)</title><rect x="93.7252%" y="277" width="0.0167%" height="15" fill="rgb(228,207,15)" fg:x="492885" fg:w="88"/><text x="93.9752%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (395 samples, 0.08%)</title><rect x="93.6672%" y="325" width="0.0751%" height="15" fill="rgb(241,99,19)" fg:x="492580" fg:w="395"/><text x="93.9172%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (395 samples, 0.08%)</title><rect x="93.6672%" y="309" width="0.0751%" height="15" fill="rgb(207,104,49)" fg:x="492580" fg:w="395"/><text x="93.9172%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (395 samples, 0.08%)</title><rect x="93.6672%" y="293" width="0.0751%" height="15" fill="rgb(234,99,18)" fg:x="492580" fg:w="395"/><text x="93.9172%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (76 samples, 0.01%)</title><rect x="93.7423%" y="325" width="0.0145%" height="15" fill="rgb(213,191,49)" fg:x="492975" fg:w="76"/><text x="93.9923%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4,508 samples, 0.86%)</title><rect x="92.9093%" y="357" width="0.8572%" height="15" fill="rgb(210,226,19)" fg:x="488594" fg:w="4508"/><text x="93.1593%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3,663 samples, 0.70%)</title><rect x="93.0699%" y="341" width="0.6965%" height="15" fill="rgb(229,97,18)" fg:x="489439" fg:w="3663"/><text x="93.3199%" y="351.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (169 samples, 0.03%)</title><rect x="93.7707%" y="293" width="0.0321%" height="15" fill="rgb(211,167,15)" fg:x="493124" fg:w="169"/><text x="94.0207%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (147 samples, 0.03%)</title><rect x="93.7749%" y="277" width="0.0280%" height="15" fill="rgb(210,169,34)" fg:x="493146" fg:w="147"/><text x="94.0249%" y="287.50"></text></g><g><title>core::hash::Hasher::write_u64 (147 samples, 0.03%)</title><rect x="93.7749%" y="261" width="0.0280%" height="15" fill="rgb(241,121,31)" fg:x="493146" fg:w="147"/><text x="94.0249%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (147 samples, 0.03%)</title><rect x="93.7749%" y="245" width="0.0280%" height="15" fill="rgb(232,40,11)" fg:x="493146" fg:w="147"/><text x="94.0249%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (147 samples, 0.03%)</title><rect x="93.7749%" y="229" width="0.0280%" height="15" fill="rgb(205,86,26)" fg:x="493146" fg:w="147"/><text x="94.0249%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (147 samples, 0.03%)</title><rect x="93.7749%" y="213" width="0.0280%" height="15" fill="rgb(231,126,28)" fg:x="493146" fg:w="147"/><text x="94.0249%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (210 samples, 0.04%)</title><rect x="93.8028%" y="293" width="0.0399%" height="15" fill="rgb(219,221,18)" fg:x="493293" fg:w="210"/><text x="94.0528%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (210 samples, 0.04%)</title><rect x="93.8028%" y="277" width="0.0399%" height="15" fill="rgb(211,40,0)" fg:x="493293" fg:w="210"/><text x="94.0528%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (210 samples, 0.04%)</title><rect x="93.8028%" y="261" width="0.0399%" height="15" fill="rgb(239,85,43)" fg:x="493293" fg:w="210"/><text x="94.0528%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (138 samples, 0.03%)</title><rect x="93.8165%" y="245" width="0.0262%" height="15" fill="rgb(231,55,21)" fg:x="493365" fg:w="138"/><text x="94.0665%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (54 samples, 0.01%)</title><rect x="93.8325%" y="229" width="0.0103%" height="15" fill="rgb(225,184,43)" fg:x="493449" fg:w="54"/><text x="94.0825%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (445 samples, 0.08%)</title><rect x="93.7697%" y="309" width="0.0846%" height="15" fill="rgb(251,158,41)" fg:x="493119" fg:w="445"/><text x="94.0197%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (61 samples, 0.01%)</title><rect x="93.8427%" y="293" width="0.0116%" height="15" fill="rgb(234,159,37)" fg:x="493503" fg:w="61"/><text x="94.0927%" y="303.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (392 samples, 0.07%)</title><rect x="93.8908%" y="229" width="0.0745%" height="15" fill="rgb(216,204,22)" fg:x="493756" fg:w="392"/><text x="94.1408%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (457 samples, 0.09%)</title><rect x="93.8811%" y="245" width="0.0869%" height="15" fill="rgb(214,17,3)" fg:x="493705" fg:w="457"/><text x="94.1311%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (566 samples, 0.11%)</title><rect x="93.8703%" y="277" width="0.1076%" height="15" fill="rgb(212,111,17)" fg:x="493648" fg:w="566"/><text x="94.1203%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (566 samples, 0.11%)</title><rect x="93.8703%" y="261" width="0.1076%" height="15" fill="rgb(221,157,24)" fg:x="493648" fg:w="566"/><text x="94.1203%" y="271.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1,938 samples, 0.37%)</title><rect x="93.9779%" y="277" width="0.3685%" height="15" fill="rgb(252,16,13)" fg:x="494214" fg:w="1938"/><text x="94.2279%" y="287.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (1,938 samples, 0.37%)</title><rect x="93.9779%" y="261" width="0.3685%" height="15" fill="rgb(221,62,2)" fg:x="494214" fg:w="1938"/><text x="94.2279%" y="271.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1,898 samples, 0.36%)</title><rect x="93.9855%" y="245" width="0.3609%" height="15" fill="rgb(247,87,22)" fg:x="494254" fg:w="1898"/><text x="94.2355%" y="255.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (1,898 samples, 0.36%)</title><rect x="93.9855%" y="229" width="0.3609%" height="15" fill="rgb(215,73,9)" fg:x="494254" fg:w="1898"/><text x="94.2355%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,898 samples, 0.36%)</title><rect x="93.9855%" y="213" width="0.3609%" height="15" fill="rgb(207,175,33)" fg:x="494254" fg:w="1898"/><text x="94.2355%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,898 samples, 0.36%)</title><rect x="93.9855%" y="197" width="0.3609%" height="15" fill="rgb(243,129,54)" fg:x="494254" fg:w="1898"/><text x="94.2355%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,898 samples, 0.36%)</title><rect x="93.9855%" y="181" width="0.3609%" height="15" fill="rgb(227,119,45)" fg:x="494254" fg:w="1898"/><text x="94.2355%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,898 samples, 0.36%)</title><rect x="93.9855%" y="165" width="0.3609%" height="15" fill="rgb(205,109,36)" fg:x="494254" fg:w="1898"/><text x="94.2355%" y="175.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7,257 samples, 1.38%)</title><rect x="93.7665%" y="357" width="1.3800%" height="15" fill="rgb(205,6,39)" fg:x="493102" fg:w="7257"/><text x="94.0165%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7,257 samples, 1.38%)</title><rect x="93.7665%" y="341" width="1.3800%" height="15" fill="rgb(221,32,16)" fg:x="493102" fg:w="7257"/><text x="94.0165%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7,240 samples, 1.38%)</title><rect x="93.7697%" y="325" width="1.3767%" height="15" fill="rgb(228,144,50)" fg:x="493119" fg:w="7240"/><text x="94.0197%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6,795 samples, 1.29%)</title><rect x="93.8543%" y="309" width="1.2921%" height="15" fill="rgb(229,201,53)" fg:x="493564" fg:w="6795"/><text x="94.1043%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6,795 samples, 1.29%)</title><rect x="93.8543%" y="293" width="1.2921%" height="15" fill="rgb(249,153,27)" fg:x="493564" fg:w="6795"/><text x="94.1043%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4,202 samples, 0.80%)</title><rect x="94.3474%" y="277" width="0.7990%" height="15" fill="rgb(227,106,25)" fg:x="496157" fg:w="4202"/><text x="94.5974%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4,202 samples, 0.80%)</title><rect x="94.3474%" y="261" width="0.7990%" height="15" fill="rgb(230,65,29)" fg:x="496157" fg:w="4202"/><text x="94.5974%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4,202 samples, 0.80%)</title><rect x="94.3474%" y="245" width="0.7990%" height="15" fill="rgb(221,57,46)" fg:x="496157" fg:w="4202"/><text x="94.5974%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4,186 samples, 0.80%)</title><rect x="94.3505%" y="229" width="0.7960%" height="15" fill="rgb(229,161,17)" fg:x="496173" fg:w="4186"/><text x="94.6005%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4,186 samples, 0.80%)</title><rect x="94.3505%" y="213" width="0.7960%" height="15" fill="rgb(222,213,11)" fg:x="496173" fg:w="4186"/><text x="94.6005%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4,186 samples, 0.80%)</title><rect x="94.3505%" y="197" width="0.7960%" height="15" fill="rgb(235,35,13)" fg:x="496173" fg:w="4186"/><text x="94.6005%" y="207.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4,186 samples, 0.80%)</title><rect x="94.3505%" y="181" width="0.7960%" height="15" fill="rgb(233,158,34)" fg:x="496173" fg:w="4186"/><text x="94.6005%" y="191.50"></text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth (488,706 samples, 92.93%)</title><rect x="2.2340%" y="373" width="92.9306%" height="15" fill="rgb(215,151,48)" fg:x="11748" fg:w="488706"/><text x="2.4840%" y="383.50">crabchess::engine::search::Minimax::evaluate_at_depth</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (95 samples, 0.02%)</title><rect x="95.1464%" y="357" width="0.0181%" height="15" fill="rgb(229,84,14)" fg:x="500359" fg:w="95"/><text x="95.3964%" y="367.50"></text></g><g><title>__GI___libc_malloc (84 samples, 0.02%)</title><rect x="95.2041%" y="261" width="0.0160%" height="15" fill="rgb(229,68,14)" fg:x="500662" fg:w="84"/><text x="95.4541%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 samples, 0.02%)</title><rect x="95.2003%" y="277" width="0.0217%" height="15" fill="rgb(243,106,26)" fg:x="500642" fg:w="114"/><text x="95.4503%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (171 samples, 0.03%)</title><rect x="95.1927%" y="341" width="0.0325%" height="15" fill="rgb(206,45,38)" fg:x="500602" fg:w="171"/><text x="95.4427%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (168 samples, 0.03%)</title><rect x="95.1932%" y="325" width="0.0319%" height="15" fill="rgb(226,6,15)" fg:x="500605" fg:w="168"/><text x="95.4432%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (154 samples, 0.03%)</title><rect x="95.1959%" y="309" width="0.0293%" height="15" fill="rgb(232,22,54)" fg:x="500619" fg:w="154"/><text x="95.4459%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (140 samples, 0.03%)</title><rect x="95.1986%" y="293" width="0.0266%" height="15" fill="rgb(229,222,32)" fg:x="500633" fg:w="140"/><text x="95.4486%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79 samples, 0.02%)</title><rect x="95.2339%" y="293" width="0.0150%" height="15" fill="rgb(228,62,29)" fg:x="500819" fg:w="79"/><text x="95.4839%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (79 samples, 0.02%)</title><rect x="95.2339%" y="277" width="0.0150%" height="15" fill="rgb(251,103,34)" fg:x="500819" fg:w="79"/><text x="95.4839%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;crabchess::moves::Move&gt;&gt; (84 samples, 0.02%)</title><rect x="95.2339%" y="341" width="0.0160%" height="15" fill="rgb(233,12,30)" fg:x="500819" fg:w="84"/><text x="95.4839%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;crabchess::moves::Move&gt;&gt; (84 samples, 0.02%)</title><rect x="95.2339%" y="325" width="0.0160%" height="15" fill="rgb(238,52,0)" fg:x="500819" fg:w="84"/><text x="95.4839%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.02%)</title><rect x="95.2339%" y="309" width="0.0160%" height="15" fill="rgb(223,98,5)" fg:x="500819" fg:w="84"/><text x="95.4839%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_square_attackers (150 samples, 0.03%)</title><rect x="95.2512%" y="341" width="0.0285%" height="15" fill="rgb(228,75,37)" fg:x="500910" fg:w="150"/><text x="95.5012%" y="351.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (148 samples, 0.03%)</title><rect x="95.2516%" y="325" width="0.0281%" height="15" fill="rgb(205,115,49)" fg:x="500912" fg:w="148"/><text x="95.5016%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (129 samples, 0.02%)</title><rect x="95.2910%" y="325" width="0.0245%" height="15" fill="rgb(250,154,43)" fg:x="501119" fg:w="129"/><text x="95.5410%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::is_move_self_check (200 samples, 0.04%)</title><rect x="95.2797%" y="341" width="0.0380%" height="15" fill="rgb(226,43,29)" fg:x="501060" fg:w="200"/><text x="95.5297%" y="351.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (60 samples, 0.01%)</title><rect x="95.3480%" y="325" width="0.0114%" height="15" fill="rgb(249,228,39)" fg:x="501419" fg:w="60"/><text x="95.5980%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::pawn_moves (231 samples, 0.04%)</title><rect x="95.3189%" y="341" width="0.0439%" height="15" fill="rgb(216,79,43)" fg:x="501266" fg:w="231"/><text x="95.5689%" y="351.50"></text></g><g><title>crabchess::movegen::MoveGenerator::has_moves (1,056 samples, 0.20%)</title><rect x="95.1752%" y="357" width="0.2008%" height="15" fill="rgb(228,95,12)" fg:x="500510" fg:w="1056"/><text x="95.4252%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (66 samples, 0.01%)</title><rect x="95.3851%" y="293" width="0.0126%" height="15" fill="rgb(249,221,15)" fg:x="501614" fg:w="66"/><text x="95.6351%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (66 samples, 0.01%)</title><rect x="95.3851%" y="277" width="0.0126%" height="15" fill="rgb(233,34,13)" fg:x="501614" fg:w="66"/><text x="95.6351%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (66 samples, 0.01%)</title><rect x="95.3851%" y="261" width="0.0126%" height="15" fill="rgb(214,103,39)" fg:x="501614" fg:w="66"/><text x="95.6351%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (116 samples, 0.02%)</title><rect x="95.3762%" y="309" width="0.0221%" height="15" fill="rgb(251,126,39)" fg:x="501567" fg:w="116"/><text x="95.6262%" y="319.50"></text></g><g><title>crabchess::game::Game::is_game_over (1,251 samples, 0.24%)</title><rect x="95.1721%" y="373" width="0.2379%" height="15" fill="rgb(214,216,36)" fg:x="500494" fg:w="1251"/><text x="95.4221%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (179 samples, 0.03%)</title><rect x="95.3760%" y="357" width="0.0340%" height="15" fill="rgb(220,221,8)" fg:x="501566" fg:w="179"/><text x="95.6260%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (179 samples, 0.03%)</title><rect x="95.3760%" y="341" width="0.0340%" height="15" fill="rgb(240,216,3)" fg:x="501566" fg:w="179"/><text x="95.6260%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (178 samples, 0.03%)</title><rect x="95.3762%" y="325" width="0.0338%" height="15" fill="rgb(232,218,17)" fg:x="501567" fg:w="178"/><text x="95.6262%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (62 samples, 0.01%)</title><rect x="95.3982%" y="309" width="0.0118%" height="15" fill="rgb(229,163,45)" fg:x="501683" fg:w="62"/><text x="95.6482%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (62 samples, 0.01%)</title><rect x="95.3982%" y="293" width="0.0118%" height="15" fill="rgb(231,110,42)" fg:x="501683" fg:w="62"/><text x="95.6482%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (74 samples, 0.01%)</title><rect x="95.4499%" y="357" width="0.0141%" height="15" fill="rgb(208,170,48)" fg:x="501955" fg:w="74"/><text x="95.6999%" y="367.50"></text></g><g><title>&lt;crabchess::piece::PieceType as core::cmp::PartialEq&gt;::eq (53 samples, 0.01%)</title><rect x="95.5576%" y="341" width="0.0101%" height="15" fill="rgb(239,116,25)" fg:x="502521" fg:w="53"/><text x="95.8076%" y="351.50"></text></g><g><title>crabchess::board::Board::remove_castle_rights (111 samples, 0.02%)</title><rect x="95.5764%" y="341" width="0.0211%" height="15" fill="rgb(219,200,50)" fg:x="502620" fg:w="111"/><text x="95.8264%" y="351.50"></text></g><g><title>crabchess::board::Board::remove_piece (399 samples, 0.08%)</title><rect x="95.5975%" y="341" width="0.0759%" height="15" fill="rgb(245,200,0)" fg:x="502731" fg:w="399"/><text x="95.8475%" y="351.50"></text></g><g><title>crabchess::board::Board::add_piece (68 samples, 0.01%)</title><rect x="95.6774%" y="325" width="0.0129%" height="15" fill="rgb(245,119,33)" fg:x="503151" fg:w="68"/><text x="95.9274%" y="335.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAndAssign&gt;::bitand_assign (62 samples, 0.01%)</title><rect x="95.6983%" y="309" width="0.0118%" height="15" fill="rgb(231,125,12)" fg:x="503261" fg:w="62"/><text x="95.9483%" y="319.50"></text></g><g><title>crabchess::board::Board::type_at_square (74 samples, 0.01%)</title><rect x="95.7165%" y="309" width="0.0141%" height="15" fill="rgb(216,96,41)" fg:x="503357" fg:w="74"/><text x="95.9665%" y="319.50"></text></g><g><title>crabchess::board::Board::set_piece (319 samples, 0.06%)</title><rect x="95.6734%" y="341" width="0.0607%" height="15" fill="rgb(248,43,45)" fg:x="503130" fg:w="319"/><text x="95.9234%" y="351.50"></text></g><g><title>crabchess::board::Board::remove_piece (230 samples, 0.04%)</title><rect x="95.6903%" y="325" width="0.0437%" height="15" fill="rgb(217,222,7)" fg:x="503219" fg:w="230"/><text x="95.9403%" y="335.50"></text></g><g><title>crabchess::board::Board::type_at_square (92 samples, 0.02%)</title><rect x="95.7340%" y="341" width="0.0175%" height="15" fill="rgb(233,28,6)" fg:x="503449" fg:w="92"/><text x="95.9840%" y="351.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (115 samples, 0.02%)</title><rect x="95.7538%" y="341" width="0.0219%" height="15" fill="rgb(231,218,15)" fg:x="503553" fg:w="115"/><text x="96.0038%" y="351.50"></text></g><g><title>crabchess::board::Board::make_move (1,660 samples, 0.32%)</title><rect x="95.4659%" y="357" width="0.3157%" height="15" fill="rgb(226,171,48)" fg:x="502039" fg:w="1660"/><text x="95.7159%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (84 samples, 0.02%)</title><rect x="95.7894%" y="293" width="0.0160%" height="15" fill="rgb(235,201,9)" fg:x="503740" fg:w="84"/><text x="96.0394%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (84 samples, 0.02%)</title><rect x="95.7894%" y="277" width="0.0160%" height="15" fill="rgb(217,80,15)" fg:x="503740" fg:w="84"/><text x="96.0394%" y="287.50"></text></g><g><title>core::ptr::write (84 samples, 0.02%)</title><rect x="95.7894%" y="261" width="0.0160%" height="15" fill="rgb(219,152,8)" fg:x="503740" fg:w="84"/><text x="96.0394%" y="271.50"></text></g><g><title>hashbrown::raw::is_full (57 samples, 0.01%)</title><rect x="95.8202%" y="261" width="0.0108%" height="15" fill="rgb(243,107,38)" fg:x="503902" fg:w="57"/><text x="96.0702%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (125 samples, 0.02%)</title><rect x="95.8103%" y="277" width="0.0238%" height="15" fill="rgb(231,17,5)" fg:x="503850" fg:w="125"/><text x="96.0603%" y="287.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (309 samples, 0.06%)</title><rect x="95.7816%" y="357" width="0.0588%" height="15" fill="rgb(209,25,54)" fg:x="503699" fg:w="309"/><text x="96.0316%" y="367.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (309 samples, 0.06%)</title><rect x="95.7816%" y="341" width="0.0588%" height="15" fill="rgb(219,0,2)" fg:x="503699" fg:w="309"/><text x="96.0316%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (309 samples, 0.06%)</title><rect x="95.7816%" y="325" width="0.0588%" height="15" fill="rgb(246,9,5)" fg:x="503699" fg:w="309"/><text x="96.0316%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (284 samples, 0.05%)</title><rect x="95.7863%" y="309" width="0.0540%" height="15" fill="rgb(226,159,4)" fg:x="503724" fg:w="284"/><text x="96.0363%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (158 samples, 0.03%)</title><rect x="95.8103%" y="293" width="0.0300%" height="15" fill="rgb(219,175,34)" fg:x="503850" fg:w="158"/><text x="96.0603%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (56 samples, 0.01%)</title><rect x="95.9181%" y="213" width="0.0106%" height="15" fill="rgb(236,10,46)" fg:x="504417" fg:w="56"/><text x="96.1681%" y="223.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (184 samples, 0.03%)</title><rect x="95.8993%" y="309" width="0.0350%" height="15" fill="rgb(240,211,16)" fg:x="504318" fg:w="184"/><text x="96.1493%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (161 samples, 0.03%)</title><rect x="95.9037%" y="293" width="0.0306%" height="15" fill="rgb(205,3,43)" fg:x="504341" fg:w="161"/><text x="96.1537%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u64 (161 samples, 0.03%)</title><rect x="95.9037%" y="277" width="0.0306%" height="15" fill="rgb(245,7,22)" fg:x="504341" fg:w="161"/><text x="96.1537%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (161 samples, 0.03%)</title><rect x="95.9037%" y="261" width="0.0306%" height="15" fill="rgb(239,132,32)" fg:x="504341" fg:w="161"/><text x="96.1537%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (161 samples, 0.03%)</title><rect x="95.9037%" y="245" width="0.0306%" height="15" fill="rgb(228,202,34)" fg:x="504341" fg:w="161"/><text x="96.1537%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 samples, 0.03%)</title><rect x="95.9037%" y="229" width="0.0306%" height="15" fill="rgb(254,200,22)" fg:x="504341" fg:w="161"/><text x="96.1537%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (63 samples, 0.01%)</title><rect x="95.9584%" y="245" width="0.0120%" height="15" fill="rgb(219,10,39)" fg:x="504629" fg:w="63"/><text x="96.2084%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (254 samples, 0.05%)</title><rect x="95.9343%" y="309" width="0.0483%" height="15" fill="rgb(226,210,39)" fg:x="504502" fg:w="254"/><text x="96.1843%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (254 samples, 0.05%)</title><rect x="95.9343%" y="293" width="0.0483%" height="15" fill="rgb(208,219,16)" fg:x="504502" fg:w="254"/><text x="96.1843%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (254 samples, 0.05%)</title><rect x="95.9343%" y="277" width="0.0483%" height="15" fill="rgb(216,158,51)" fg:x="504502" fg:w="254"/><text x="96.1843%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (166 samples, 0.03%)</title><rect x="95.9510%" y="261" width="0.0316%" height="15" fill="rgb(233,14,44)" fg:x="504590" fg:w="166"/><text x="96.2010%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (64 samples, 0.01%)</title><rect x="95.9704%" y="245" width="0.0122%" height="15" fill="rgb(237,97,39)" fg:x="504692" fg:w="64"/><text x="96.2204%" y="255.50"></text></g><g><title>hashbrown::map::make_insert_hash (497 samples, 0.09%)</title><rect x="95.8978%" y="325" width="0.0945%" height="15" fill="rgb(218,198,43)" fg:x="504310" fg:w="497"/><text x="96.1478%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (118 samples, 0.02%)</title><rect x="96.0120%" y="309" width="0.0224%" height="15" fill="rgb(231,104,20)" fg:x="504911" fg:w="118"/><text x="96.2620%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (118 samples, 0.02%)</title><rect x="96.0120%" y="293" width="0.0224%" height="15" fill="rgb(254,36,13)" fg:x="504911" fg:w="118"/><text x="96.2620%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (118 samples, 0.02%)</title><rect x="96.0120%" y="277" width="0.0224%" height="15" fill="rgb(248,14,50)" fg:x="504911" fg:w="118"/><text x="96.2620%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (98 samples, 0.02%)</title><rect x="96.0158%" y="261" width="0.0186%" height="15" fill="rgb(217,107,29)" fg:x="504931" fg:w="98"/><text x="96.2658%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (98 samples, 0.02%)</title><rect x="96.0158%" y="245" width="0.0186%" height="15" fill="rgb(251,169,33)" fg:x="504931" fg:w="98"/><text x="96.2658%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (98 samples, 0.02%)</title><rect x="96.0158%" y="229" width="0.0186%" height="15" fill="rgb(217,108,32)" fg:x="504931" fg:w="98"/><text x="96.2658%" y="239.50"></text></g><g><title>core::core_arch::simd::i8x16::new (98 samples, 0.02%)</title><rect x="96.0158%" y="213" width="0.0186%" height="15" fill="rgb(219,66,42)" fg:x="504931" fg:w="98"/><text x="96.2658%" y="223.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (834 samples, 0.16%)</title><rect x="95.8768%" y="341" width="0.1586%" height="15" fill="rgb(206,180,7)" fg:x="504200" fg:w="834"/><text x="96.1268%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (227 samples, 0.04%)</title><rect x="95.9923%" y="325" width="0.0432%" height="15" fill="rgb(208,226,31)" fg:x="504807" fg:w="227"/><text x="96.2423%" y="335.50"></text></g><g><title>crabchess::game::Game::make_move (3,352 samples, 0.64%)</title><rect x="95.4100%" y="373" width="0.6374%" height="15" fill="rgb(218,26,49)" fg:x="501745" fg:w="3352"/><text x="95.6600%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1,089 samples, 0.21%)</title><rect x="95.8403%" y="357" width="0.2071%" height="15" fill="rgb(233,197,48)" fg:x="504008" fg:w="1089"/><text x="96.0903%" y="367.50"></text></g><g><title>std::collections::hash::map::map_entry (63 samples, 0.01%)</title><rect x="96.0354%" y="341" width="0.0120%" height="15" fill="rgb(252,181,51)" fg:x="505034" fg:w="63"/><text x="96.2854%" y="351.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (198 samples, 0.04%)</title><rect x="96.0988%" y="309" width="0.0377%" height="15" fill="rgb(253,90,19)" fg:x="505367" fg:w="198"/><text x="96.3488%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (159 samples, 0.03%)</title><rect x="96.1062%" y="293" width="0.0302%" height="15" fill="rgb(215,171,30)" fg:x="505406" fg:w="159"/><text x="96.3562%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u64 (159 samples, 0.03%)</title><rect x="96.1062%" y="277" width="0.0302%" height="15" fill="rgb(214,222,9)" fg:x="505406" fg:w="159"/><text x="96.3562%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (157 samples, 0.03%)</title><rect x="96.1065%" y="261" width="0.0299%" height="15" fill="rgb(223,3,22)" fg:x="505408" fg:w="157"/><text x="96.3565%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (157 samples, 0.03%)</title><rect x="96.1065%" y="245" width="0.0299%" height="15" fill="rgb(225,196,46)" fg:x="505408" fg:w="157"/><text x="96.3565%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (157 samples, 0.03%)</title><rect x="96.1065%" y="229" width="0.0299%" height="15" fill="rgb(209,110,37)" fg:x="505408" fg:w="157"/><text x="96.3565%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (54 samples, 0.01%)</title><rect x="96.1444%" y="261" width="0.0103%" height="15" fill="rgb(249,89,12)" fg:x="505607" fg:w="54"/><text x="96.3944%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (201 samples, 0.04%)</title><rect x="96.1364%" y="309" width="0.0382%" height="15" fill="rgb(226,27,33)" fg:x="505565" fg:w="201"/><text x="96.3864%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (201 samples, 0.04%)</title><rect x="96.1364%" y="293" width="0.0382%" height="15" fill="rgb(213,82,22)" fg:x="505565" fg:w="201"/><text x="96.3864%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (201 samples, 0.04%)</title><rect x="96.1364%" y="277" width="0.0382%" height="15" fill="rgb(248,140,0)" fg:x="505565" fg:w="201"/><text x="96.3864%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (105 samples, 0.02%)</title><rect x="96.1547%" y="261" width="0.0200%" height="15" fill="rgb(228,106,3)" fg:x="505661" fg:w="105"/><text x="96.4047%" y="271.50"></text></g><g><title>hashbrown::map::make_insert_hash (454 samples, 0.09%)</title><rect x="96.0986%" y="325" width="0.0863%" height="15" fill="rgb(209,23,37)" fg:x="505366" fg:w="454"/><text x="96.3486%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (54 samples, 0.01%)</title><rect x="96.1746%" y="309" width="0.0103%" height="15" fill="rgb(241,93,50)" fg:x="505766" fg:w="54"/><text x="96.4246%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.01%)</title><rect x="96.1915%" y="309" width="0.0114%" height="15" fill="rgb(253,46,43)" fg:x="505855" fg:w="60"/><text x="96.4415%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.01%)</title><rect x="96.1915%" y="293" width="0.0114%" height="15" fill="rgb(226,206,43)" fg:x="505855" fg:w="60"/><text x="96.4415%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.01%)</title><rect x="96.1923%" y="277" width="0.0106%" height="15" fill="rgb(217,54,7)" fg:x="505859" fg:w="56"/><text x="96.4423%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (62 samples, 0.01%)</title><rect x="96.2060%" y="309" width="0.0118%" height="15" fill="rgb(223,5,52)" fg:x="505931" fg:w="62"/><text x="96.4560%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (62 samples, 0.01%)</title><rect x="96.2060%" y="293" width="0.0118%" height="15" fill="rgb(206,52,46)" fg:x="505931" fg:w="62"/><text x="96.4560%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (62 samples, 0.01%)</title><rect x="96.2060%" y="277" width="0.0118%" height="15" fill="rgb(253,136,11)" fg:x="505931" fg:w="62"/><text x="96.4560%" y="287.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (945 samples, 0.18%)</title><rect x="96.0754%" y="341" width="0.1797%" height="15" fill="rgb(208,106,33)" fg:x="505244" fg:w="945"/><text x="96.3254%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (369 samples, 0.07%)</title><rect x="96.1849%" y="325" width="0.0702%" height="15" fill="rgb(206,54,4)" fg:x="505820" fg:w="369"/><text x="96.4349%" y="335.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (196 samples, 0.04%)</title><rect x="96.2178%" y="309" width="0.0373%" height="15" fill="rgb(213,3,15)" fg:x="505993" fg:w="196"/><text x="96.4678%" y="319.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (196 samples, 0.04%)</title><rect x="96.2178%" y="293" width="0.0373%" height="15" fill="rgb(252,211,39)" fg:x="505993" fg:w="196"/><text x="96.4678%" y="303.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (115 samples, 0.02%)</title><rect x="96.2332%" y="277" width="0.0219%" height="15" fill="rgb(223,6,36)" fg:x="506074" fg:w="115"/><text x="96.4832%" y="287.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (115 samples, 0.02%)</title><rect x="96.2332%" y="261" width="0.0219%" height="15" fill="rgb(252,169,45)" fg:x="506074" fg:w="115"/><text x="96.4832%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (115 samples, 0.02%)</title><rect x="96.2332%" y="245" width="0.0219%" height="15" fill="rgb(212,48,26)" fg:x="506074" fg:w="115"/><text x="96.4832%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (115 samples, 0.02%)</title><rect x="96.2332%" y="229" width="0.0219%" height="15" fill="rgb(251,102,48)" fg:x="506074" fg:w="115"/><text x="96.4832%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (115 samples, 0.02%)</title><rect x="96.2332%" y="213" width="0.0219%" height="15" fill="rgb(243,208,16)" fg:x="506074" fg:w="115"/><text x="96.4832%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (115 samples, 0.02%)</title><rect x="96.2332%" y="197" width="0.0219%" height="15" fill="rgb(219,96,24)" fg:x="506074" fg:w="115"/><text x="96.4832%" y="207.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1,002 samples, 0.19%)</title><rect x="96.0679%" y="357" width="0.1905%" height="15" fill="rgb(219,33,29)" fg:x="505205" fg:w="1002"/><text x="96.3179%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (63 samples, 0.01%)</title><rect x="96.2925%" y="197" width="0.0120%" height="15" fill="rgb(223,176,5)" fg:x="506386" fg:w="63"/><text x="96.5425%" y="207.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (195 samples, 0.04%)</title><rect x="96.2722%" y="293" width="0.0371%" height="15" fill="rgb(228,140,14)" fg:x="506279" fg:w="195"/><text x="96.5222%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (170 samples, 0.03%)</title><rect x="96.2769%" y="277" width="0.0323%" height="15" fill="rgb(217,179,31)" fg:x="506304" fg:w="170"/><text x="96.5269%" y="287.50"></text></g><g><title>core::hash::Hasher::write_u64 (170 samples, 0.03%)</title><rect x="96.2769%" y="261" width="0.0323%" height="15" fill="rgb(230,9,30)" fg:x="506304" fg:w="170"/><text x="96.5269%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (166 samples, 0.03%)</title><rect x="96.2777%" y="245" width="0.0316%" height="15" fill="rgb(230,136,20)" fg:x="506308" fg:w="166"/><text x="96.5277%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (166 samples, 0.03%)</title><rect x="96.2777%" y="229" width="0.0316%" height="15" fill="rgb(215,210,22)" fg:x="506308" fg:w="166"/><text x="96.5277%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (166 samples, 0.03%)</title><rect x="96.2777%" y="213" width="0.0316%" height="15" fill="rgb(218,43,5)" fg:x="506308" fg:w="166"/><text x="96.5277%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (208 samples, 0.04%)</title><rect x="96.3093%" y="293" width="0.0396%" height="15" fill="rgb(216,11,5)" fg:x="506474" fg:w="208"/><text x="96.5593%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (208 samples, 0.04%)</title><rect x="96.3093%" y="277" width="0.0396%" height="15" fill="rgb(209,82,29)" fg:x="506474" fg:w="208"/><text x="96.5593%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (208 samples, 0.04%)</title><rect x="96.3093%" y="261" width="0.0396%" height="15" fill="rgb(244,115,12)" fg:x="506474" fg:w="208"/><text x="96.5593%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (121 samples, 0.02%)</title><rect x="96.3258%" y="245" width="0.0230%" height="15" fill="rgb(222,82,18)" fg:x="506561" fg:w="121"/><text x="96.5758%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (62 samples, 0.01%)</title><rect x="96.3370%" y="229" width="0.0118%" height="15" fill="rgb(249,227,8)" fg:x="506620" fg:w="62"/><text x="96.5870%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (484 samples, 0.09%)</title><rect x="96.2689%" y="309" width="0.0920%" height="15" fill="rgb(253,141,45)" fg:x="506262" fg:w="484"/><text x="96.5189%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (64 samples, 0.01%)</title><rect x="96.3488%" y="293" width="0.0122%" height="15" fill="rgb(234,184,4)" fg:x="506682" fg:w="64"/><text x="96.5988%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (175 samples, 0.03%)</title><rect x="96.4019%" y="277" width="0.0333%" height="15" fill="rgb(218,194,23)" fg:x="506961" fg:w="175"/><text x="96.6519%" y="287.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (175 samples, 0.03%)</title><rect x="96.4019%" y="261" width="0.0333%" height="15" fill="rgb(235,66,41)" fg:x="506961" fg:w="175"/><text x="96.6519%" y="271.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (105 samples, 0.02%)</title><rect x="96.4152%" y="245" width="0.0200%" height="15" fill="rgb(245,217,1)" fg:x="507031" fg:w="105"/><text x="96.6652%" y="255.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (105 samples, 0.02%)</title><rect x="96.4152%" y="229" width="0.0200%" height="15" fill="rgb(229,91,1)" fg:x="507031" fg:w="105"/><text x="96.6652%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (105 samples, 0.02%)</title><rect x="96.4152%" y="213" width="0.0200%" height="15" fill="rgb(207,101,30)" fg:x="507031" fg:w="105"/><text x="96.6652%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (105 samples, 0.02%)</title><rect x="96.4152%" y="197" width="0.0200%" height="15" fill="rgb(223,82,49)" fg:x="507031" fg:w="105"/><text x="96.6652%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (105 samples, 0.02%)</title><rect x="96.4152%" y="181" width="0.0200%" height="15" fill="rgb(218,167,17)" fg:x="507031" fg:w="105"/><text x="96.6652%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (105 samples, 0.02%)</title><rect x="96.4152%" y="165" width="0.0200%" height="15" fill="rgb(208,103,14)" fg:x="507031" fg:w="105"/><text x="96.6652%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (69 samples, 0.01%)</title><rect x="96.4220%" y="149" width="0.0131%" height="15" fill="rgb(238,20,8)" fg:x="507067" fg:w="69"/><text x="96.6720%" y="159.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (69 samples, 0.01%)</title><rect x="96.4220%" y="133" width="0.0131%" height="15" fill="rgb(218,80,54)" fg:x="507067" fg:w="69"/><text x="96.6720%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (69 samples, 0.01%)</title><rect x="96.4220%" y="117" width="0.0131%" height="15" fill="rgb(240,144,17)" fg:x="507067" fg:w="69"/><text x="96.6720%" y="127.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::eq (69 samples, 0.01%)</title><rect x="96.4220%" y="101" width="0.0131%" height="15" fill="rgb(245,27,50)" fg:x="507067" fg:w="69"/><text x="96.6720%" y="111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (410 samples, 0.08%)</title><rect x="96.3730%" y="293" width="0.0780%" height="15" fill="rgb(251,51,7)" fg:x="506809" fg:w="410"/><text x="96.6230%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (64 samples, 0.01%)</title><rect x="96.4388%" y="277" width="0.0122%" height="15" fill="rgb(245,217,29)" fg:x="507155" fg:w="64"/><text x="96.6888%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (64 samples, 0.01%)</title><rect x="96.4388%" y="261" width="0.0122%" height="15" fill="rgb(221,176,29)" fg:x="507155" fg:w="64"/><text x="96.6888%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (64 samples, 0.01%)</title><rect x="96.4388%" y="245" width="0.0122%" height="15" fill="rgb(212,180,24)" fg:x="507155" fg:w="64"/><text x="96.6888%" y="255.50"></text></g><g><title>crabchess::game::Game::undo (2,322 samples, 0.44%)</title><rect x="96.0474%" y="373" width="0.4415%" height="15" fill="rgb(254,24,2)" fg:x="505097" fg:w="2322"/><text x="96.2974%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1,212 samples, 0.23%)</title><rect x="96.2585%" y="357" width="0.2305%" height="15" fill="rgb(230,100,2)" fg:x="506207" fg:w="1212"/><text x="96.5085%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1,203 samples, 0.23%)</title><rect x="96.2602%" y="341" width="0.2288%" height="15" fill="rgb(219,142,25)" fg:x="506216" fg:w="1203"/><text x="96.5102%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1,169 samples, 0.22%)</title><rect x="96.2667%" y="325" width="0.2223%" height="15" fill="rgb(240,73,43)" fg:x="506250" fg:w="1169"/><text x="96.5167%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (673 samples, 0.13%)</title><rect x="96.3610%" y="309" width="0.1280%" height="15" fill="rgb(214,114,15)" fg:x="506746" fg:w="673"/><text x="96.6110%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (200 samples, 0.04%)</title><rect x="96.4509%" y="293" width="0.0380%" height="15" fill="rgb(207,130,4)" fg:x="507219" fg:w="200"/><text x="96.7009%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (158 samples, 0.03%)</title><rect x="96.4589%" y="277" width="0.0300%" height="15" fill="rgb(221,25,40)" fg:x="507261" fg:w="158"/><text x="96.7089%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (144 samples, 0.03%)</title><rect x="96.4616%" y="261" width="0.0274%" height="15" fill="rgb(241,184,7)" fg:x="507275" fg:w="144"/><text x="96.7116%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (69 samples, 0.01%)</title><rect x="96.4758%" y="245" width="0.0131%" height="15" fill="rgb(235,159,4)" fg:x="507350" fg:w="69"/><text x="96.7258%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (69 samples, 0.01%)</title><rect x="96.4758%" y="229" width="0.0131%" height="15" fill="rgb(214,87,48)" fg:x="507350" fg:w="69"/><text x="96.7258%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (64 samples, 0.01%)</title><rect x="96.4768%" y="213" width="0.0122%" height="15" fill="rgb(246,198,24)" fg:x="507355" fg:w="64"/><text x="96.7268%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (348 samples, 0.07%)</title><rect x="96.5473%" y="357" width="0.0662%" height="15" fill="rgb(209,66,40)" fg:x="507726" fg:w="348"/><text x="96.7973%" y="367.50"></text></g><g><title>core::ptr::write (54 samples, 0.01%)</title><rect x="96.6032%" y="341" width="0.0103%" height="15" fill="rgb(233,147,39)" fg:x="508020" fg:w="54"/><text x="96.8532%" y="351.50"></text></g><g><title>__GI___libc_malloc (98 samples, 0.02%)</title><rect x="96.6152%" y="245" width="0.0186%" height="15" fill="rgb(231,145,52)" fg:x="508083" fg:w="98"/><text x="96.8652%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (111 samples, 0.02%)</title><rect x="96.6146%" y="293" width="0.0211%" height="15" fill="rgb(206,20,26)" fg:x="508080" fg:w="111"/><text x="96.8646%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (111 samples, 0.02%)</title><rect x="96.6146%" y="277" width="0.0211%" height="15" fill="rgb(238,220,4)" fg:x="508080" fg:w="111"/><text x="96.8646%" y="287.50"></text></g><g><title>alloc::alloc::alloc (111 samples, 0.02%)</title><rect x="96.6146%" y="261" width="0.0211%" height="15" fill="rgb(252,195,42)" fg:x="508080" fg:w="111"/><text x="96.8646%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (121 samples, 0.02%)</title><rect x="96.6135%" y="357" width="0.0230%" height="15" fill="rgb(209,10,6)" fg:x="508074" fg:w="121"/><text x="96.8635%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (121 samples, 0.02%)</title><rect x="96.6135%" y="341" width="0.0230%" height="15" fill="rgb(229,3,52)" fg:x="508074" fg:w="121"/><text x="96.8635%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (118 samples, 0.02%)</title><rect x="96.6141%" y="325" width="0.0224%" height="15" fill="rgb(253,49,37)" fg:x="508077" fg:w="118"/><text x="96.8641%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (118 samples, 0.02%)</title><rect x="96.6141%" y="309" width="0.0224%" height="15" fill="rgb(240,103,49)" fg:x="508077" fg:w="118"/><text x="96.8641%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (97 samples, 0.02%)</title><rect x="96.6365%" y="261" width="0.0184%" height="15" fill="rgb(250,182,30)" fg:x="508195" fg:w="97"/><text x="96.8865%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (97 samples, 0.02%)</title><rect x="96.6365%" y="245" width="0.0184%" height="15" fill="rgb(248,8,30)" fg:x="508195" fg:w="97"/><text x="96.8865%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;crabchess::moves::Move&gt;&gt; (117 samples, 0.02%)</title><rect x="96.6365%" y="357" width="0.0222%" height="15" fill="rgb(237,120,30)" fg:x="508195" fg:w="117"/><text x="96.8865%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.02%)</title><rect x="96.6365%" y="341" width="0.0222%" height="15" fill="rgb(221,146,34)" fg:x="508195" fg:w="117"/><text x="96.8865%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;crabchess::moves::Move,alloc::alloc::Global&gt;&gt; (117 samples, 0.02%)</title><rect x="96.6365%" y="325" width="0.0222%" height="15" fill="rgb(242,55,13)" fg:x="508195" fg:w="117"/><text x="96.8865%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.02%)</title><rect x="96.6365%" y="309" width="0.0222%" height="15" fill="rgb(242,112,31)" fg:x="508195" fg:w="117"/><text x="96.8865%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;crabchess::moves::Move&gt;&gt; (117 samples, 0.02%)</title><rect x="96.6365%" y="293" width="0.0222%" height="15" fill="rgb(249,192,27)" fg:x="508195" fg:w="117"/><text x="96.8865%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.02%)</title><rect x="96.6365%" y="277" width="0.0222%" height="15" fill="rgb(208,204,44)" fg:x="508195" fg:w="117"/><text x="96.8865%" y="287.50"></text></g><g><title>crabchess::bitboard::Bitboard::is_square_occupied (80 samples, 0.02%)</title><rect x="96.6711%" y="341" width="0.0152%" height="15" fill="rgb(208,93,54)" fg:x="508377" fg:w="80"/><text x="96.9211%" y="351.50"></text></g><g><title>crabchess::board::Board::is_move_castle (198 samples, 0.04%)</title><rect x="96.6588%" y="357" width="0.0377%" height="15" fill="rgb(242,1,31)" fg:x="508312" fg:w="198"/><text x="96.9088%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (157 samples, 0.03%)</title><rect x="96.7367%" y="341" width="0.0299%" height="15" fill="rgb(241,83,25)" fg:x="508722" fg:w="157"/><text x="96.9867%" y="351.50"></text></g><g><title>core::ptr::read (61 samples, 0.01%)</title><rect x="96.7550%" y="325" width="0.0116%" height="15" fill="rgb(205,169,50)" fg:x="508818" fg:w="61"/><text x="97.0050%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (293 samples, 0.06%)</title><rect x="96.7774%" y="341" width="0.0557%" height="15" fill="rgb(239,186,37)" fg:x="508936" fg:w="293"/><text x="97.0274%" y="351.50"></text></g><g><title>core::ptr::write (227 samples, 0.04%)</title><rect x="96.7900%" y="325" width="0.0432%" height="15" fill="rgb(205,221,10)" fg:x="509002" fg:w="227"/><text x="97.0400%" y="335.50"></text></g><g><title>__GI___libc_malloc (147 samples, 0.03%)</title><rect x="96.8379%" y="229" width="0.0280%" height="15" fill="rgb(218,196,15)" fg:x="509254" fg:w="147"/><text x="97.0879%" y="239.50"></text></g><g><title>tcache_get (67 samples, 0.01%)</title><rect x="96.8531%" y="213" width="0.0127%" height="15" fill="rgb(218,196,35)" fg:x="509334" fg:w="67"/><text x="97.1031%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (175 samples, 0.03%)</title><rect x="96.8375%" y="277" width="0.0333%" height="15" fill="rgb(233,63,24)" fg:x="509252" fg:w="175"/><text x="97.0875%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (175 samples, 0.03%)</title><rect x="96.8375%" y="261" width="0.0333%" height="15" fill="rgb(225,8,4)" fg:x="509252" fg:w="175"/><text x="97.0875%" y="271.50"></text></g><g><title>alloc::alloc::alloc (174 samples, 0.03%)</title><rect x="96.8377%" y="245" width="0.0331%" height="15" fill="rgb(234,105,35)" fg:x="509253" fg:w="174"/><text x="97.0877%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (207 samples, 0.04%)</title><rect x="96.8331%" y="341" width="0.0394%" height="15" fill="rgb(236,21,32)" fg:x="509229" fg:w="207"/><text x="97.0831%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (207 samples, 0.04%)</title><rect x="96.8331%" y="325" width="0.0394%" height="15" fill="rgb(228,109,6)" fg:x="509229" fg:w="207"/><text x="97.0831%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (190 samples, 0.04%)</title><rect x="96.8364%" y="309" width="0.0361%" height="15" fill="rgb(229,215,31)" fg:x="509246" fg:w="190"/><text x="97.0864%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (190 samples, 0.04%)</title><rect x="96.8364%" y="293" width="0.0361%" height="15" fill="rgb(221,52,54)" fg:x="509246" fg:w="190"/><text x="97.0864%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (188 samples, 0.04%)</title><rect x="96.8725%" y="341" width="0.0357%" height="15" fill="rgb(252,129,43)" fg:x="509436" fg:w="188"/><text x="97.1225%" y="351.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (188 samples, 0.04%)</title><rect x="96.8725%" y="325" width="0.0357%" height="15" fill="rgb(248,183,27)" fg:x="509436" fg:w="188"/><text x="97.1225%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (188 samples, 0.04%)</title><rect x="96.8725%" y="309" width="0.0357%" height="15" fill="rgb(250,0,22)" fg:x="509436" fg:w="188"/><text x="97.1225%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (188 samples, 0.04%)</title><rect x="96.8725%" y="293" width="0.0357%" height="15" fill="rgb(213,166,10)" fg:x="509436" fg:w="188"/><text x="97.1225%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (128 samples, 0.02%)</title><rect x="96.8839%" y="277" width="0.0243%" height="15" fill="rgb(207,163,36)" fg:x="509496" fg:w="128"/><text x="97.1339%" y="287.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_pseudolegal_moves::{{closure}} (113 samples, 0.02%)</title><rect x="96.8868%" y="261" width="0.0215%" height="15" fill="rgb(208,122,22)" fg:x="509511" fg:w="113"/><text x="97.1368%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (113 samples, 0.02%)</title><rect x="96.8868%" y="245" width="0.0215%" height="15" fill="rgb(207,104,49)" fg:x="509511" fg:w="113"/><text x="97.1368%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (110 samples, 0.02%)</title><rect x="96.9143%" y="245" width="0.0209%" height="15" fill="rgb(248,211,50)" fg:x="509656" fg:w="110"/><text x="97.1643%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (110 samples, 0.02%)</title><rect x="96.9143%" y="229" width="0.0209%" height="15" fill="rgb(217,13,45)" fg:x="509656" fg:w="110"/><text x="97.1643%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(crabchess::square::Square,crabchess::bitboard::Bitboard)&gt;&gt; (122 samples, 0.02%)</title><rect x="96.9143%" y="341" width="0.0232%" height="15" fill="rgb(211,216,49)" fg:x="509656" fg:w="122"/><text x="97.1643%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.02%)</title><rect x="96.9143%" y="325" width="0.0232%" height="15" fill="rgb(221,58,53)" fg:x="509656" fg:w="122"/><text x="97.1643%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(crabchess::square::Square,crabchess::bitboard::Bitboard),alloc::alloc::Global&gt;&gt; (122 samples, 0.02%)</title><rect x="96.9143%" y="309" width="0.0232%" height="15" fill="rgb(220,112,41)" fg:x="509656" fg:w="122"/><text x="97.1643%" y="319.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.02%)</title><rect x="96.9143%" y="293" width="0.0232%" height="15" fill="rgb(236,38,28)" fg:x="509656" fg:w="122"/><text x="97.1643%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(crabchess::square::Square,crabchess::bitboard::Bitboard)&gt;&gt; (122 samples, 0.02%)</title><rect x="96.9143%" y="277" width="0.0232%" height="15" fill="rgb(227,195,22)" fg:x="509656" fg:w="122"/><text x="97.1643%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.02%)</title><rect x="96.9143%" y="261" width="0.0232%" height="15" fill="rgb(214,55,33)" fg:x="509656" fg:w="122"/><text x="97.1643%" y="271.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.01%)</title><rect x="97.0241%" y="325" width="0.0103%" height="15" fill="rgb(248,80,13)" fg:x="510233" fg:w="54"/><text x="97.2741%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (54 samples, 0.01%)</title><rect x="97.0241%" y="309" width="0.0103%" height="15" fill="rgb(238,52,6)" fg:x="510233" fg:w="54"/><text x="97.2741%" y="319.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (54 samples, 0.01%)</title><rect x="97.0241%" y="293" width="0.0103%" height="15" fill="rgb(224,198,47)" fg:x="510233" fg:w="54"/><text x="97.2741%" y="303.50"></text></g><g><title>crabchess::board::Board::color_at_square (110 samples, 0.02%)</title><rect x="97.0608%" y="325" width="0.0209%" height="15" fill="rgb(233,171,20)" fg:x="510426" fg:w="110"/><text x="97.3108%" y="335.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (84 samples, 0.02%)</title><rect x="97.1051%" y="309" width="0.0160%" height="15" fill="rgb(241,30,25)" fg:x="510659" fg:w="84"/><text x="97.3551%" y="319.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (234 samples, 0.04%)</title><rect x="97.0845%" y="325" width="0.0445%" height="15" fill="rgb(207,171,38)" fg:x="510551" fg:w="234"/><text x="97.3345%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::pawn_moves (1,061 samples, 0.20%)</title><rect x="96.9392%" y="341" width="0.2018%" height="15" fill="rgb(234,70,1)" fg:x="509787" fg:w="1061"/><text x="97.1892%" y="351.50"></text></g><g><title>crabchess::movegen::MoveGenerator::bishop_moves (74 samples, 0.01%)</title><rect x="97.2353%" y="325" width="0.0141%" height="15" fill="rgb(232,178,18)" fg:x="511344" fg:w="74"/><text x="97.4853%" y="335.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (66 samples, 0.01%)</title><rect x="97.2368%" y="309" width="0.0126%" height="15" fill="rgb(241,78,40)" fg:x="511352" fg:w="66"/><text x="97.4868%" y="319.50"></text></g><g><title>crabchess::magic::get_attacks (66 samples, 0.01%)</title><rect x="97.2368%" y="293" width="0.0126%" height="15" fill="rgb(222,35,25)" fg:x="511352" fg:w="66"/><text x="97.4868%" y="303.50"></text></g><g><title>crabchess::movegen::MoveGenerator::knight_moves (53 samples, 0.01%)</title><rect x="97.2545%" y="325" width="0.0101%" height="15" fill="rgb(207,92,16)" fg:x="511445" fg:w="53"/><text x="97.5045%" y="335.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::cmp::PartialEq&gt;::ne (71 samples, 0.01%)</title><rect x="97.2661%" y="277" width="0.0135%" height="15" fill="rgb(216,59,51)" fg:x="511506" fg:w="71"/><text x="97.5161%" y="287.50"></text></g><g><title>crabchess::board::Board::color_at_square (72 samples, 0.01%)</title><rect x="97.2661%" y="293" width="0.0137%" height="15" fill="rgb(213,80,28)" fg:x="511506" fg:w="72"/><text x="97.5161%" y="303.50"></text></g><g><title>crabchess::movegen::MoveGenerator::bishop_moves (109 samples, 0.02%)</title><rect x="97.2654%" y="309" width="0.0207%" height="15" fill="rgb(220,93,7)" fg:x="511502" fg:w="109"/><text x="97.5154%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::queen_moves (121 samples, 0.02%)</title><rect x="97.2646%" y="325" width="0.0230%" height="15" fill="rgb(225,24,44)" fg:x="511498" fg:w="121"/><text x="97.5146%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::sq_pseudolegal_moves (821 samples, 0.16%)</title><rect x="97.1410%" y="341" width="0.1561%" height="15" fill="rgb(243,74,40)" fg:x="510848" fg:w="821"/><text x="97.3910%" y="351.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.03%)</title><rect x="97.3471%" y="309" width="0.0295%" height="15" fill="rgb(228,39,7)" fg:x="511932" fg:w="155"/><text x="97.5971%" y="319.50"></text></g><g><title>crabchess::movegen::bitboard_to_moves (779 samples, 0.15%)</title><rect x="97.2971%" y="341" width="0.1481%" height="15" fill="rgb(227,79,8)" fg:x="511669" fg:w="779"/><text x="97.5471%" y="351.50"></text></g><g><title>crabchess::movegen::bitboard_to_promotions (779 samples, 0.15%)</title><rect x="97.2971%" y="325" width="0.1481%" height="15" fill="rgb(236,58,11)" fg:x="511669" fg:w="779"/><text x="97.5471%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (361 samples, 0.07%)</title><rect x="97.3766%" y="309" width="0.0686%" height="15" fill="rgb(249,63,35)" fg:x="512087" fg:w="361"/><text x="97.6266%" y="319.50"></text></g><g><title>core::ptr::write (273 samples, 0.05%)</title><rect x="97.3933%" y="293" width="0.0519%" height="15" fill="rgb(252,114,16)" fg:x="512175" fg:w="273"/><text x="97.6433%" y="303.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_pseudolegal_moves (3,943 samples, 0.75%)</title><rect x="96.6964%" y="357" width="0.7498%" height="15" fill="rgb(254,151,24)" fg:x="508510" fg:w="3943"/><text x="96.9464%" y="367.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (88 samples, 0.02%)</title><rect x="97.5795%" y="341" width="0.0167%" height="15" fill="rgb(253,54,39)" fg:x="513154" fg:w="88"/><text x="97.8295%" y="351.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOr&gt;::bitor (58 samples, 0.01%)</title><rect x="97.5962%" y="341" width="0.0110%" height="15" fill="rgb(243,25,45)" fg:x="513242" fg:w="58"/><text x="97.8462%" y="351.50"></text></g><g><title>crabchess::board::Board::color_at_square (193 samples, 0.04%)</title><rect x="97.6122%" y="341" width="0.0367%" height="15" fill="rgb(234,134,9)" fg:x="513326" fg:w="193"/><text x="97.8622%" y="351.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::convert::From&lt;crabchess::square::Square&gt;&gt;::from (66 samples, 0.01%)</title><rect x="97.6364%" y="325" width="0.0126%" height="15" fill="rgb(227,166,31)" fg:x="513453" fg:w="66"/><text x="97.8864%" y="335.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (60 samples, 0.01%)</title><rect x="97.6493%" y="341" width="0.0114%" height="15" fill="rgb(245,143,41)" fg:x="513521" fg:w="60"/><text x="97.8993%" y="351.50"></text></g><g><title>crabchess::board::Board::is_move_en_passant (102 samples, 0.02%)</title><rect x="97.6607%" y="341" width="0.0194%" height="15" fill="rgb(238,181,32)" fg:x="513581" fg:w="102"/><text x="97.9107%" y="351.50"></text></g><g><title>crabchess::moves::Move::to_square (76 samples, 0.01%)</title><rect x="97.6656%" y="325" width="0.0145%" height="15" fill="rgb(224,113,18)" fg:x="513607" fg:w="76"/><text x="97.9156%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (170 samples, 0.03%)</title><rect x="97.7052%" y="261" width="0.0323%" height="15" fill="rgb(240,229,28)" fg:x="513815" fg:w="170"/><text x="97.9552%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (170 samples, 0.03%)</title><rect x="97.7052%" y="245" width="0.0323%" height="15" fill="rgb(250,185,3)" fg:x="513815" fg:w="170"/><text x="97.9552%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (161 samples, 0.03%)</title><rect x="97.7069%" y="229" width="0.0306%" height="15" fill="rgb(212,59,25)" fg:x="513824" fg:w="161"/><text x="97.9569%" y="239.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (189 samples, 0.04%)</title><rect x="97.7052%" y="293" width="0.0359%" height="15" fill="rgb(221,87,20)" fg:x="513815" fg:w="189"/><text x="97.9552%" y="303.50"></text></g><g><title>crabchess::magic::get_attacks (189 samples, 0.04%)</title><rect x="97.7052%" y="277" width="0.0359%" height="15" fill="rgb(213,74,28)" fg:x="513815" fg:w="189"/><text x="97.9552%" y="287.50"></text></g><g><title>crabchess::movegen::MoveGenerator::is_square_attacked_by (425 samples, 0.08%)</title><rect x="97.6801%" y="341" width="0.0808%" height="15" fill="rgb(224,132,34)" fg:x="513683" fg:w="425"/><text x="97.9301%" y="351.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_square_attackers (425 samples, 0.08%)</title><rect x="97.6801%" y="325" width="0.0808%" height="15" fill="rgb(222,101,24)" fg:x="513683" fg:w="425"/><text x="97.9301%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (416 samples, 0.08%)</title><rect x="97.6818%" y="309" width="0.0791%" height="15" fill="rgb(254,142,4)" fg:x="513692" fg:w="416"/><text x="97.9318%" y="319.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (131 samples, 0.02%)</title><rect x="97.9374%" y="325" width="0.0249%" height="15" fill="rgb(230,229,49)" fg:x="515036" fg:w="131"/><text x="98.1874%" y="335.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitOrAssign&gt;::bitor_assign (129 samples, 0.02%)</title><rect x="97.9722%" y="325" width="0.0245%" height="15" fill="rgb(238,70,47)" fg:x="515219" fg:w="129"/><text x="98.2222%" y="335.50"></text></g><g><title>&lt;crabchess::square::Square as core::ops::arith::Add&lt;crabchess::direction::Direction&gt;&gt;::add (80 samples, 0.02%)</title><rect x="97.9967%" y="325" width="0.0152%" height="15" fill="rgb(231,160,17)" fg:x="515348" fg:w="80"/><text x="98.2467%" y="335.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::bit::BitAnd&gt;::bitand (189 samples, 0.04%)</title><rect x="98.0119%" y="309" width="0.0359%" height="15" fill="rgb(218,68,53)" fg:x="515428" fg:w="189"/><text x="98.2619%" y="319.50"></text></g><g><title>crabchess::board::Board::get_type_and_color (231 samples, 0.04%)</title><rect x="98.0119%" y="325" width="0.0439%" height="15" fill="rgb(236,111,10)" fg:x="515428" fg:w="231"/><text x="98.2619%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (386 samples, 0.07%)</title><rect x="98.0558%" y="277" width="0.0734%" height="15" fill="rgb(224,34,41)" fg:x="515659" fg:w="386"/><text x="98.3058%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (334 samples, 0.06%)</title><rect x="98.0657%" y="261" width="0.0635%" height="15" fill="rgb(241,118,19)" fg:x="515711" fg:w="334"/><text x="98.3157%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (424 samples, 0.08%)</title><rect x="98.0558%" y="293" width="0.0806%" height="15" fill="rgb(238,129,25)" fg:x="515659" fg:w="424"/><text x="98.3058%" y="303.50"></text></g><g><title>crabchess::magic::get_bishop_attacks (553 samples, 0.11%)</title><rect x="98.0558%" y="325" width="0.1052%" height="15" fill="rgb(238,22,31)" fg:x="515659" fg:w="553"/><text x="98.3058%" y="335.50"></text></g><g><title>crabchess::magic::get_attacks (553 samples, 0.11%)</title><rect x="98.0558%" y="309" width="0.1052%" height="15" fill="rgb(222,174,48)" fg:x="515659" fg:w="553"/><text x="98.3058%" y="319.50"></text></g><g><title>crabchess::magic::compute_magic_key (89 samples, 0.02%)</title><rect x="98.1441%" y="293" width="0.0169%" height="15" fill="rgb(206,152,40)" fg:x="516123" fg:w="89"/><text x="98.3941%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (62 samples, 0.01%)</title><rect x="98.1728%" y="277" width="0.0118%" height="15" fill="rgb(218,99,54)" fg:x="516274" fg:w="62"/><text x="98.4228%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (91 samples, 0.02%)</title><rect x="98.1728%" y="293" width="0.0173%" height="15" fill="rgb(220,174,26)" fg:x="516274" fg:w="91"/><text x="98.4228%" y="303.50"></text></g><g><title>crabchess::magic::get_rook_attacks (310 samples, 0.06%)</title><rect x="98.1610%" y="325" width="0.0589%" height="15" fill="rgb(245,116,9)" fg:x="516212" fg:w="310"/><text x="98.4110%" y="335.50"></text></g><g><title>crabchess::magic::get_attacks (310 samples, 0.06%)</title><rect x="98.1610%" y="309" width="0.0589%" height="15" fill="rgb(209,72,35)" fg:x="516212" fg:w="310"/><text x="98.4110%" y="319.50"></text></g><g><title>crabchess::magic::compute_magic_key (112 samples, 0.02%)</title><rect x="98.1986%" y="293" width="0.0213%" height="15" fill="rgb(226,126,21)" fg:x="516410" fg:w="112"/><text x="98.4486%" y="303.50"></text></g><g><title>&lt;crabchess::bitboard::Bitboard as core::ops::arith::Mul&gt;::mul (80 samples, 0.02%)</title><rect x="98.2047%" y="277" width="0.0152%" height="15" fill="rgb(227,192,1)" fg:x="516442" fg:w="80"/><text x="98.4547%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (80 samples, 0.02%)</title><rect x="98.2047%" y="261" width="0.0152%" height="15" fill="rgb(237,180,29)" fg:x="516442" fg:w="80"/><text x="98.4547%" y="271.50"></text></g><g><title>core::cmp::max (87 samples, 0.02%)</title><rect x="98.2471%" y="309" width="0.0165%" height="15" fill="rgb(230,197,35)" fg:x="516665" fg:w="87"/><text x="98.4971%" y="319.50"></text></g><g><title>core::cmp::Ord::max (87 samples, 0.02%)</title><rect x="98.2471%" y="293" width="0.0165%" height="15" fill="rgb(246,193,31)" fg:x="516665" fg:w="87"/><text x="98.4971%" y="303.50"></text></g><g><title>core::cmp::max_by (87 samples, 0.02%)</title><rect x="98.2471%" y="277" width="0.0165%" height="15" fill="rgb(241,36,4)" fg:x="516665" fg:w="87"/><text x="98.4971%" y="287.50"></text></g><g><title>core::num::&lt;impl i16&gt;::abs (297 samples, 0.06%)</title><rect x="98.2637%" y="309" width="0.0565%" height="15" fill="rgb(241,130,17)" fg:x="516752" fg:w="297"/><text x="98.5137%" y="319.50"></text></g><g><title>crabchess::square::Square::file (151 samples, 0.03%)</title><rect x="98.3202%" y="309" width="0.0287%" height="15" fill="rgb(206,137,32)" fg:x="517049" fg:w="151"/><text x="98.5702%" y="319.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (908 samples, 0.17%)</title><rect x="98.2199%" y="325" width="0.1727%" height="15" fill="rgb(237,228,51)" fg:x="516522" fg:w="908"/><text x="98.4699%" y="335.50"></text></g><g><title>crabchess::square::Square::rank (230 samples, 0.04%)</title><rect x="98.3489%" y="309" width="0.0437%" height="15" fill="rgb(243,6,42)" fg:x="517200" fg:w="230"/><text x="98.5989%" y="319.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (3,504 samples, 0.67%)</title><rect x="97.7609%" y="341" width="0.6663%" height="15" fill="rgb(251,74,28)" fg:x="514108" fg:w="3504"/><text x="98.0109%" y="351.50"></text></g><g><title>crabchess::util::pawn_direction (142 samples, 0.03%)</title><rect x="98.4002%" y="325" width="0.0270%" height="15" fill="rgb(218,20,49)" fg:x="517470" fg:w="142"/><text x="98.6502%" y="335.50"></text></g><g><title>crabchess::movegen::MoveGenerator::is_move_self_check (5,343 samples, 1.02%)</title><rect x="97.4462%" y="357" width="1.0160%" height="15" fill="rgb(238,28,14)" fg:x="512453" fg:w="5343"/><text x="97.6962%" y="367.50"></text></g><g><title>crabchess::util::opposite_color (180 samples, 0.03%)</title><rect x="98.4280%" y="341" width="0.0342%" height="15" fill="rgb(229,40,46)" fg:x="517616" fg:w="180"/><text x="98.6780%" y="351.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_moves (10,415 samples, 1.98%)</title><rect x="96.4890%" y="373" width="1.9805%" height="15" fill="rgb(244,195,20)" fg:x="507419" fg:w="10415"/><text x="96.7390%" y="383.50">c..</text></g><g><title>hashbrown::map::make_insert_hash (123 samples, 0.02%)</title><rect x="98.4765%" y="357" width="0.0234%" height="15" fill="rgb(253,56,35)" fg:x="517871" fg:w="123"/><text x="98.7265%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (161 samples, 0.03%)</title><rect x="98.4999%" y="357" width="0.0306%" height="15" fill="rgb(210,149,44)" fg:x="517994" fg:w="161"/><text x="98.7499%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (161 samples, 0.03%)</title><rect x="98.4999%" y="341" width="0.0306%" height="15" fill="rgb(240,135,12)" fg:x="517994" fg:w="161"/><text x="98.7499%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (89 samples, 0.02%)</title><rect x="98.5135%" y="325" width="0.0169%" height="15" fill="rgb(251,24,50)" fg:x="518066" fg:w="89"/><text x="98.7635%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (89 samples, 0.02%)</title><rect x="98.5135%" y="309" width="0.0169%" height="15" fill="rgb(243,200,47)" fg:x="518066" fg:w="89"/><text x="98.7635%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (89 samples, 0.02%)</title><rect x="98.5135%" y="293" width="0.0169%" height="15" fill="rgb(224,166,26)" fg:x="518066" fg:w="89"/><text x="98.7635%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (83 samples, 0.02%)</title><rect x="98.5147%" y="277" width="0.0158%" height="15" fill="rgb(233,0,47)" fg:x="518072" fg:w="83"/><text x="98.7647%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (83 samples, 0.02%)</title><rect x="98.5147%" y="261" width="0.0158%" height="15" fill="rgb(253,80,5)" fg:x="518072" fg:w="83"/><text x="98.7647%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (83 samples, 0.02%)</title><rect x="98.5147%" y="245" width="0.0158%" height="15" fill="rgb(214,133,25)" fg:x="518072" fg:w="83"/><text x="98.7647%" y="255.50"></text></g><g><title>core::core_arch::simd::i8x16::new (83 samples, 0.02%)</title><rect x="98.5147%" y="229" width="0.0158%" height="15" fill="rgb(209,27,14)" fg:x="518072" fg:w="83"/><text x="98.7647%" y="239.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (886 samples, 0.17%)</title><rect x="98.5335%" y="341" width="0.1685%" height="15" fill="rgb(219,102,51)" fg:x="518171" fg:w="886"/><text x="98.7835%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (886 samples, 0.17%)</title><rect x="98.5335%" y="325" width="0.1685%" height="15" fill="rgb(237,18,16)" fg:x="518171" fg:w="886"/><text x="98.7835%" y="335.50"></text></g><g><title>core::ptr::write (886 samples, 0.17%)</title><rect x="98.5335%" y="309" width="0.1685%" height="15" fill="rgb(241,85,17)" fg:x="518171" fg:w="886"/><text x="98.7835%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,261 samples, 0.24%)</title><rect x="98.4694%" y="373" width="0.2398%" height="15" fill="rgb(236,90,42)" fg:x="517834" fg:w="1261"/><text x="98.7194%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (940 samples, 0.18%)</title><rect x="98.5305%" y="357" width="0.1787%" height="15" fill="rgb(249,57,21)" fg:x="518155" fg:w="940"/><text x="98.7805%" y="367.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (57 samples, 0.01%)</title><rect x="98.7210%" y="309" width="0.0108%" height="15" fill="rgb(243,12,36)" fg:x="519157" fg:w="57"/><text x="98.9710%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (87 samples, 0.02%)</title><rect x="98.7318%" y="309" width="0.0165%" height="15" fill="rgb(253,128,47)" fg:x="519214" fg:w="87"/><text x="98.9818%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (87 samples, 0.02%)</title><rect x="98.7318%" y="293" width="0.0165%" height="15" fill="rgb(207,33,20)" fg:x="519214" fg:w="87"/><text x="98.9818%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (87 samples, 0.02%)</title><rect x="98.7318%" y="277" width="0.0165%" height="15" fill="rgb(233,215,35)" fg:x="519214" fg:w="87"/><text x="98.9818%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (59 samples, 0.01%)</title><rect x="98.7372%" y="261" width="0.0112%" height="15" fill="rgb(249,188,52)" fg:x="519242" fg:w="59"/><text x="98.9872%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (223 samples, 0.04%)</title><rect x="98.7102%" y="325" width="0.0424%" height="15" fill="rgb(225,12,32)" fg:x="519100" fg:w="223"/><text x="98.9602%" y="335.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (109 samples, 0.02%)</title><rect x="98.7665%" y="245" width="0.0207%" height="15" fill="rgb(247,98,14)" fg:x="519396" fg:w="109"/><text x="99.0165%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (138 samples, 0.03%)</title><rect x="98.7625%" y="261" width="0.0262%" height="15" fill="rgb(247,219,48)" fg:x="519375" fg:w="138"/><text x="99.0125%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (179 samples, 0.03%)</title><rect x="98.7583%" y="293" width="0.0340%" height="15" fill="rgb(253,60,48)" fg:x="519353" fg:w="179"/><text x="99.0083%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (179 samples, 0.03%)</title><rect x="98.7583%" y="277" width="0.0340%" height="15" fill="rgb(245,15,52)" fg:x="519353" fg:w="179"/><text x="99.0083%" y="287.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (899 samples, 0.17%)</title><rect x="98.7923%" y="293" width="0.1710%" height="15" fill="rgb(220,133,28)" fg:x="519532" fg:w="899"/><text x="99.0423%" y="303.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (899 samples, 0.17%)</title><rect x="98.7923%" y="277" width="0.1710%" height="15" fill="rgb(217,180,4)" fg:x="519532" fg:w="899"/><text x="99.0423%" y="287.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (881 samples, 0.17%)</title><rect x="98.7957%" y="261" width="0.1675%" height="15" fill="rgb(251,24,1)" fg:x="519550" fg:w="881"/><text x="99.0457%" y="271.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (881 samples, 0.17%)</title><rect x="98.7957%" y="245" width="0.1675%" height="15" fill="rgb(212,185,49)" fg:x="519550" fg:w="881"/><text x="99.0457%" y="255.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (881 samples, 0.17%)</title><rect x="98.7957%" y="229" width="0.1675%" height="15" fill="rgb(215,175,22)" fg:x="519550" fg:w="881"/><text x="99.0457%" y="239.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (881 samples, 0.17%)</title><rect x="98.7957%" y="213" width="0.1675%" height="15" fill="rgb(250,205,14)" fg:x="519550" fg:w="881"/><text x="99.0457%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (881 samples, 0.17%)</title><rect x="98.7957%" y="197" width="0.1675%" height="15" fill="rgb(225,211,22)" fg:x="519550" fg:w="881"/><text x="99.0457%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (881 samples, 0.17%)</title><rect x="98.7957%" y="181" width="0.1675%" height="15" fill="rgb(251,179,42)" fg:x="519550" fg:w="881"/><text x="99.0457%" y="191.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,712 samples, 0.52%)</title><rect x="98.7092%" y="373" width="0.5157%" height="15" fill="rgb(208,216,51)" fg:x="519095" fg:w="2712"/><text x="98.9592%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,712 samples, 0.52%)</title><rect x="98.7092%" y="357" width="0.5157%" height="15" fill="rgb(235,36,11)" fg:x="519095" fg:w="2712"/><text x="98.9592%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,707 samples, 0.51%)</title><rect x="98.7102%" y="341" width="0.5148%" height="15" fill="rgb(213,189,28)" fg:x="519100" fg:w="2707"/><text x="98.9602%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,484 samples, 0.47%)</title><rect x="98.7526%" y="325" width="0.4723%" height="15" fill="rgb(227,203,42)" fg:x="519323" fg:w="2484"/><text x="99.0026%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,484 samples, 0.47%)</title><rect x="98.7526%" y="309" width="0.4723%" height="15" fill="rgb(244,72,36)" fg:x="519323" fg:w="2484"/><text x="99.0026%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1,375 samples, 0.26%)</title><rect x="98.9635%" y="293" width="0.2615%" height="15" fill="rgb(213,53,17)" fg:x="520432" fg:w="1375"/><text x="99.2135%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1,375 samples, 0.26%)</title><rect x="98.9635%" y="277" width="0.2615%" height="15" fill="rgb(207,167,3)" fg:x="520432" fg:w="1375"/><text x="99.2135%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1,375 samples, 0.26%)</title><rect x="98.9635%" y="261" width="0.2615%" height="15" fill="rgb(216,98,30)" fg:x="520432" fg:w="1375"/><text x="99.2135%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,369 samples, 0.26%)</title><rect x="98.9646%" y="245" width="0.2603%" height="15" fill="rgb(236,123,15)" fg:x="520438" fg:w="1369"/><text x="99.2146%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1,369 samples, 0.26%)</title><rect x="98.9646%" y="229" width="0.2603%" height="15" fill="rgb(248,81,50)" fg:x="520438" fg:w="1369"/><text x="99.2146%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1,369 samples, 0.26%)</title><rect x="98.9646%" y="213" width="0.2603%" height="15" fill="rgb(214,120,4)" fg:x="520438" fg:w="1369"/><text x="99.2146%" y="223.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1,369 samples, 0.26%)</title><rect x="98.9646%" y="197" width="0.2603%" height="15" fill="rgb(208,179,34)" fg:x="520438" fg:w="1369"/><text x="99.2146%" y="207.50"></text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth (520,142 samples, 98.91%)</title><rect x="0.3227%" y="389" width="98.9083%" height="15" fill="rgb(227,140,7)" fg:x="1697" fg:w="520142"/><text x="0.5727%" y="399.50">crabchess::engine::search::Minimax::evaluate_at_depth</text></g><g><title>crabchess::movegen::MoveGenerator::has_moves (80 samples, 0.02%)</title><rect x="99.2323%" y="373" width="0.0152%" height="15" fill="rgb(214,22,6)" fg:x="521846" fg:w="80"/><text x="99.4823%" y="383.50"></text></g><g><title>crabchess::game::Game::is_game_over (98 samples, 0.02%)</title><rect x="99.2314%" y="389" width="0.0186%" height="15" fill="rgb(207,137,27)" fg:x="521841" fg:w="98"/><text x="99.4814%" y="399.50"></text></g><g><title>crabchess::board::Board::remove_piece (97 samples, 0.02%)</title><rect x="99.3063%" y="357" width="0.0184%" height="15" fill="rgb(210,8,46)" fg:x="522235" fg:w="97"/><text x="99.5563%" y="367.50"></text></g><g><title>crabchess::board::Board::set_piece (80 samples, 0.02%)</title><rect x="99.3248%" y="357" width="0.0152%" height="15" fill="rgb(240,16,54)" fg:x="522332" fg:w="80"/><text x="99.5748%" y="367.50"></text></g><g><title>crabchess::board::Board::remove_piece (53 samples, 0.01%)</title><rect x="99.3299%" y="341" width="0.0101%" height="15" fill="rgb(211,209,29)" fg:x="522359" fg:w="53"/><text x="99.5799%" y="351.50"></text></g><g><title>crabchess::board::Board::make_move (464 samples, 0.09%)</title><rect x="99.2723%" y="373" width="0.0882%" height="15" fill="rgb(226,228,24)" fg:x="522056" fg:w="464"/><text x="99.5223%" y="383.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (112 samples, 0.02%)</title><rect x="99.3605%" y="373" width="0.0213%" height="15" fill="rgb(222,84,9)" fg:x="522520" fg:w="112"/><text x="99.6105%" y="383.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (112 samples, 0.02%)</title><rect x="99.3605%" y="357" width="0.0213%" height="15" fill="rgb(234,203,30)" fg:x="522520" fg:w="112"/><text x="99.6105%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (112 samples, 0.02%)</title><rect x="99.3605%" y="341" width="0.0213%" height="15" fill="rgb(238,109,14)" fg:x="522520" fg:w="112"/><text x="99.6105%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (100 samples, 0.02%)</title><rect x="99.3628%" y="325" width="0.0190%" height="15" fill="rgb(233,206,34)" fg:x="522532" fg:w="100"/><text x="99.6128%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (56 samples, 0.01%)</title><rect x="99.3712%" y="309" width="0.0106%" height="15" fill="rgb(220,167,47)" fg:x="522576" fg:w="56"/><text x="99.6212%" y="319.50"></text></g><g><title>&lt;crabchess::board::Board as core::hash::Hash&gt;::hash (67 samples, 0.01%)</title><rect x="99.4021%" y="325" width="0.0127%" height="15" fill="rgb(238,105,10)" fg:x="522739" fg:w="67"/><text x="99.6521%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (58 samples, 0.01%)</title><rect x="99.4039%" y="309" width="0.0110%" height="15" fill="rgb(213,227,17)" fg:x="522748" fg:w="58"/><text x="99.6539%" y="319.50"></text></g><g><title>core::hash::Hasher::write_u64 (58 samples, 0.01%)</title><rect x="99.4039%" y="293" width="0.0110%" height="15" fill="rgb(217,132,38)" fg:x="522748" fg:w="58"/><text x="99.6539%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (58 samples, 0.01%)</title><rect x="99.4039%" y="277" width="0.0110%" height="15" fill="rgb(242,146,4)" fg:x="522748" fg:w="58"/><text x="99.6539%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (58 samples, 0.01%)</title><rect x="99.4039%" y="261" width="0.0110%" height="15" fill="rgb(212,61,9)" fg:x="522748" fg:w="58"/><text x="99.6539%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (58 samples, 0.01%)</title><rect x="99.4039%" y="245" width="0.0110%" height="15" fill="rgb(247,126,22)" fg:x="522748" fg:w="58"/><text x="99.6539%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (68 samples, 0.01%)</title><rect x="99.4149%" y="325" width="0.0129%" height="15" fill="rgb(220,196,2)" fg:x="522806" fg:w="68"/><text x="99.6649%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (68 samples, 0.01%)</title><rect x="99.4149%" y="309" width="0.0129%" height="15" fill="rgb(208,46,4)" fg:x="522806" fg:w="68"/><text x="99.6649%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (68 samples, 0.01%)</title><rect x="99.4149%" y="293" width="0.0129%" height="15" fill="rgb(252,104,46)" fg:x="522806" fg:w="68"/><text x="99.6649%" y="303.50"></text></g><g><title>hashbrown::map::make_insert_hash (152 samples, 0.03%)</title><rect x="99.4020%" y="341" width="0.0289%" height="15" fill="rgb(237,152,48)" fg:x="522738" fg:w="152"/><text x="99.6520%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (259 samples, 0.05%)</title><rect x="99.3940%" y="357" width="0.0493%" height="15" fill="rgb(221,59,37)" fg:x="522696" fg:w="259"/><text x="99.6440%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (65 samples, 0.01%)</title><rect x="99.4309%" y="341" width="0.0124%" height="15" fill="rgb(209,202,51)" fg:x="522890" fg:w="65"/><text x="99.6809%" y="351.50"></text></g><g><title>crabchess::game::Game::make_move (1,034 samples, 0.20%)</title><rect x="99.2500%" y="389" width="0.1966%" height="15" fill="rgb(228,81,30)" fg:x="521939" fg:w="1034"/><text x="99.5000%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (341 samples, 0.06%)</title><rect x="99.3818%" y="373" width="0.0648%" height="15" fill="rgb(227,42,39)" fg:x="522632" fg:w="341"/><text x="99.6318%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (60 samples, 0.01%)</title><rect x="99.4752%" y="325" width="0.0114%" height="15" fill="rgb(221,26,2)" fg:x="523123" fg:w="60"/><text x="99.7252%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (60 samples, 0.01%)</title><rect x="99.4752%" y="309" width="0.0114%" height="15" fill="rgb(254,61,31)" fg:x="523123" fg:w="60"/><text x="99.7252%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (60 samples, 0.01%)</title><rect x="99.4752%" y="293" width="0.0114%" height="15" fill="rgb(222,173,38)" fg:x="523123" fg:w="60"/><text x="99.7252%" y="303.50"></text></g><g><title>hashbrown::map::make_insert_hash (137 samples, 0.03%)</title><rect x="99.4655%" y="341" width="0.0261%" height="15" fill="rgb(218,50,12)" fg:x="523072" fg:w="137"/><text x="99.7155%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (315 samples, 0.06%)</title><rect x="99.4582%" y="357" width="0.0599%" height="15" fill="rgb(223,88,40)" fg:x="523034" fg:w="315"/><text x="99.7082%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (140 samples, 0.03%)</title><rect x="99.4915%" y="341" width="0.0266%" height="15" fill="rgb(237,54,19)" fg:x="523209" fg:w="140"/><text x="99.7415%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (84 samples, 0.02%)</title><rect x="99.5022%" y="325" width="0.0160%" height="15" fill="rgb(251,129,25)" fg:x="523265" fg:w="84"/><text x="99.7522%" y="335.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (84 samples, 0.02%)</title><rect x="99.5022%" y="309" width="0.0160%" height="15" fill="rgb(238,97,19)" fg:x="523265" fg:w="84"/><text x="99.7522%" y="319.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (63 samples, 0.01%)</title><rect x="99.5062%" y="293" width="0.0120%" height="15" fill="rgb(240,169,18)" fg:x="523286" fg:w="63"/><text x="99.7562%" y="303.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (63 samples, 0.01%)</title><rect x="99.5062%" y="277" width="0.0120%" height="15" fill="rgb(230,187,49)" fg:x="523286" fg:w="63"/><text x="99.7562%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (63 samples, 0.01%)</title><rect x="99.5062%" y="261" width="0.0120%" height="15" fill="rgb(209,44,26)" fg:x="523286" fg:w="63"/><text x="99.7562%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (63 samples, 0.01%)</title><rect x="99.5062%" y="245" width="0.0120%" height="15" fill="rgb(244,0,6)" fg:x="523286" fg:w="63"/><text x="99.7562%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (63 samples, 0.01%)</title><rect x="99.5062%" y="229" width="0.0120%" height="15" fill="rgb(248,18,21)" fg:x="523286" fg:w="63"/><text x="99.7562%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (63 samples, 0.01%)</title><rect x="99.5062%" y="213" width="0.0120%" height="15" fill="rgb(245,180,19)" fg:x="523286" fg:w="63"/><text x="99.7562%" y="223.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (335 samples, 0.06%)</title><rect x="99.4556%" y="373" width="0.0637%" height="15" fill="rgb(252,118,36)" fg:x="523020" fg:w="335"/><text x="99.7056%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (82 samples, 0.02%)</title><rect x="99.5347%" y="309" width="0.0156%" height="15" fill="rgb(210,224,19)" fg:x="523436" fg:w="82"/><text x="99.7847%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (82 samples, 0.02%)</title><rect x="99.5347%" y="293" width="0.0156%" height="15" fill="rgb(218,30,24)" fg:x="523436" fg:w="82"/><text x="99.7847%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (82 samples, 0.02%)</title><rect x="99.5347%" y="277" width="0.0156%" height="15" fill="rgb(219,75,50)" fg:x="523436" fg:w="82"/><text x="99.7847%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (156 samples, 0.03%)</title><rect x="99.5246%" y="325" width="0.0297%" height="15" fill="rgb(234,72,50)" fg:x="523383" fg:w="156"/><text x="99.7746%" y="335.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (60 samples, 0.01%)</title><rect x="99.5739%" y="293" width="0.0114%" height="15" fill="rgb(219,100,48)" fg:x="523642" fg:w="60"/><text x="99.8239%" y="303.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (60 samples, 0.01%)</title><rect x="99.5739%" y="277" width="0.0114%" height="15" fill="rgb(253,5,41)" fg:x="523642" fg:w="60"/><text x="99.8239%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (152 samples, 0.03%)</title><rect x="99.5600%" y="309" width="0.0289%" height="15" fill="rgb(247,181,11)" fg:x="523569" fg:w="152"/><text x="99.8100%" y="319.50"></text></g><g><title>crabchess::game::Game::undo (840 samples, 0.16%)</title><rect x="99.4466%" y="389" width="0.1597%" height="15" fill="rgb(222,223,25)" fg:x="522973" fg:w="840"/><text x="99.6966%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (458 samples, 0.09%)</title><rect x="99.5193%" y="373" width="0.0871%" height="15" fill="rgb(214,198,28)" fg:x="523355" fg:w="458"/><text x="99.7693%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (453 samples, 0.09%)</title><rect x="99.5202%" y="357" width="0.0861%" height="15" fill="rgb(230,46,43)" fg:x="523360" fg:w="453"/><text x="99.7702%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (433 samples, 0.08%)</title><rect x="99.5240%" y="341" width="0.0823%" height="15" fill="rgb(233,65,53)" fg:x="523380" fg:w="433"/><text x="99.7740%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (274 samples, 0.05%)</title><rect x="99.5543%" y="325" width="0.0521%" height="15" fill="rgb(221,121,27)" fg:x="523539" fg:w="274"/><text x="99.8043%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (92 samples, 0.02%)</title><rect x="99.5889%" y="309" width="0.0175%" height="15" fill="rgb(247,70,47)" fg:x="523721" fg:w="92"/><text x="99.8389%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (66 samples, 0.01%)</title><rect x="99.5938%" y="293" width="0.0126%" height="15" fill="rgb(228,85,35)" fg:x="523747" fg:w="66"/><text x="99.8438%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (62 samples, 0.01%)</title><rect x="99.5946%" y="277" width="0.0118%" height="15" fill="rgb(209,50,18)" fg:x="523751" fg:w="62"/><text x="99.8446%" y="287.50"></text></g><g><title>crabchess::movegen::MoveGenerator::pawn_moves (95 samples, 0.02%)</title><rect x="99.6471%" y="357" width="0.0181%" height="15" fill="rgb(250,19,35)" fg:x="524027" fg:w="95"/><text x="99.8971%" y="367.50"></text></g><g><title>crabchess::movegen::bitboard_to_moves (91 samples, 0.02%)</title><rect x="99.6748%" y="357" width="0.0173%" height="15" fill="rgb(253,107,29)" fg:x="524173" fg:w="91"/><text x="99.9248%" y="367.50"></text></g><g><title>crabchess::movegen::bitboard_to_promotions (91 samples, 0.02%)</title><rect x="99.6748%" y="341" width="0.0173%" height="15" fill="rgb(252,179,29)" fg:x="524173" fg:w="91"/><text x="99.9248%" y="351.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_pseudolegal_moves (335 samples, 0.06%)</title><rect x="99.6286%" y="373" width="0.0637%" height="15" fill="rgb(238,194,6)" fg:x="523930" fg:w="335"/><text x="99.8786%" y="383.50"></text></g><g><title>crabchess::square::Square::chebyshev_to (101 samples, 0.02%)</title><rect x="99.7773%" y="341" width="0.0192%" height="15" fill="rgb(238,164,29)" fg:x="524712" fg:w="101"/><text x="100.0273%" y="351.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (379 samples, 0.07%)</title><rect x="99.7279%" y="357" width="0.0721%" height="15" fill="rgb(224,25,9)" fg:x="524452" fg:w="379"/><text x="99.9779%" y="367.50"></text></g><g><title>crabchess::movegen::MoveGenerator::is_move_self_check (580 samples, 0.11%)</title><rect x="99.6923%" y="373" width="0.1103%" height="15" fill="rgb(244,153,23)" fg:x="524265" fg:w="580"/><text x="99.9423%" y="383.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_moves (1,034 samples, 0.20%)</title><rect x="99.6064%" y="389" width="0.1966%" height="15" fill="rgb(212,203,14)" fg:x="523813" fg:w="1034"/><text x="99.8564%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (73 samples, 0.01%)</title><rect x="99.8133%" y="357" width="0.0139%" height="15" fill="rgb(220,164,20)" fg:x="524901" fg:w="73"/><text x="100.0633%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (73 samples, 0.01%)</title><rect x="99.8133%" y="341" width="0.0139%" height="15" fill="rgb(222,203,48)" fg:x="524901" fg:w="73"/><text x="100.0633%" y="351.50"></text></g><g><title>core::ptr::write (73 samples, 0.01%)</title><rect x="99.8133%" y="325" width="0.0139%" height="15" fill="rgb(215,159,22)" fg:x="524901" fg:w="73"/><text x="100.0633%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (129 samples, 0.02%)</title><rect x="99.8030%" y="389" width="0.0245%" height="15" fill="rgb(216,183,47)" fg:x="524847" fg:w="129"/><text x="100.0530%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (76 samples, 0.01%)</title><rect x="99.8131%" y="373" width="0.0145%" height="15" fill="rgb(229,195,25)" fg:x="524900" fg:w="76"/><text x="100.0631%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (65 samples, 0.01%)</title><rect x="99.8329%" y="309" width="0.0124%" height="15" fill="rgb(224,132,51)" fg:x="525004" fg:w="65"/><text x="100.0829%" y="319.50"></text></g><g><title>&lt;crabchess::board::Board as core::cmp::PartialEq&gt;::eq (65 samples, 0.01%)</title><rect x="99.8329%" y="293" width="0.0124%" height="15" fill="rgb(240,63,7)" fg:x="525004" fg:w="65"/><text x="100.0829%" y="303.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (64 samples, 0.01%)</title><rect x="99.8330%" y="277" width="0.0122%" height="15" fill="rgb(249,182,41)" fg:x="525005" fg:w="64"/><text x="100.0830%" y="287.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;Other,_&gt;&gt;::spec_eq (64 samples, 0.01%)</title><rect x="99.8330%" y="261" width="0.0122%" height="15" fill="rgb(243,47,26)" fg:x="525005" fg:w="64"/><text x="100.0830%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (64 samples, 0.01%)</title><rect x="99.8330%" y="245" width="0.0122%" height="15" fill="rgb(233,48,2)" fg:x="525005" fg:w="64"/><text x="100.0830%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (64 samples, 0.01%)</title><rect x="99.8330%" y="229" width="0.0122%" height="15" fill="rgb(244,165,34)" fg:x="525005" fg:w="64"/><text x="100.0830%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (64 samples, 0.01%)</title><rect x="99.8330%" y="213" width="0.0122%" height="15" fill="rgb(207,89,7)" fg:x="525005" fg:w="64"/><text x="100.0830%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (64 samples, 0.01%)</title><rect x="99.8330%" y="197" width="0.0122%" height="15" fill="rgb(244,117,36)" fg:x="525005" fg:w="64"/><text x="100.0830%" y="207.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (206 samples, 0.04%)</title><rect x="99.8275%" y="389" width="0.0392%" height="15" fill="rgb(226,144,34)" fg:x="524976" fg:w="206"/><text x="100.0775%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (206 samples, 0.04%)</title><rect x="99.8275%" y="373" width="0.0392%" height="15" fill="rgb(213,23,19)" fg:x="524976" fg:w="206"/><text x="100.0775%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (205 samples, 0.04%)</title><rect x="99.8277%" y="357" width="0.0390%" height="15" fill="rgb(217,75,12)" fg:x="524977" fg:w="205"/><text x="100.0777%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (193 samples, 0.04%)</title><rect x="99.8300%" y="341" width="0.0367%" height="15" fill="rgb(224,159,17)" fg:x="524989" fg:w="193"/><text x="100.0800%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (193 samples, 0.04%)</title><rect x="99.8300%" y="325" width="0.0367%" height="15" fill="rgb(217,118,1)" fg:x="524989" fg:w="193"/><text x="100.0800%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (113 samples, 0.02%)</title><rect x="99.8452%" y="309" width="0.0215%" height="15" fill="rgb(232,180,48)" fg:x="525069" fg:w="113"/><text x="100.0952%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (113 samples, 0.02%)</title><rect x="99.8452%" y="293" width="0.0215%" height="15" fill="rgb(230,27,33)" fg:x="525069" fg:w="113"/><text x="100.0952%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (113 samples, 0.02%)</title><rect x="99.8452%" y="277" width="0.0215%" height="15" fill="rgb(205,31,21)" fg:x="525069" fg:w="113"/><text x="100.0952%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (113 samples, 0.02%)</title><rect x="99.8452%" y="261" width="0.0215%" height="15" fill="rgb(253,59,4)" fg:x="525069" fg:w="113"/><text x="100.0952%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (113 samples, 0.02%)</title><rect x="99.8452%" y="245" width="0.0215%" height="15" fill="rgb(224,201,9)" fg:x="525069" fg:w="113"/><text x="100.0952%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (113 samples, 0.02%)</title><rect x="99.8452%" y="229" width="0.0215%" height="15" fill="rgb(229,206,30)" fg:x="525069" fg:w="113"/><text x="100.0952%" y="239.50"></text></g><g><title>core::core_arch::simd::i8x16::new (113 samples, 0.02%)</title><rect x="99.8452%" y="213" width="0.0215%" height="15" fill="rgb(212,67,47)" fg:x="525069" fg:w="113"/><text x="100.0952%" y="223.50"></text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth (524,884 samples, 99.81%)</title><rect x="0.0586%" y="405" width="99.8100%" height="15" fill="rgb(211,96,50)" fg:x="308" fg:w="524884"/><text x="0.3086%" y="415.50">crabchess::engine::search::Minimax::evaluate_at_depth</text></g><g><title>crabchess::game::Game::make_move (84 samples, 0.02%)</title><rect x="99.8762%" y="405" width="0.0160%" height="15" fill="rgb(252,114,18)" fg:x="525232" fg:w="84"/><text x="100.1262%" y="415.50"></text></g><g><title>crabchess::game::Game::undo (66 samples, 0.01%)</title><rect x="99.8922%" y="405" width="0.0126%" height="15" fill="rgb(223,58,37)" fg:x="525316" fg:w="66"/><text x="100.1422%" y="415.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_pseudolegal_moves (121 samples, 0.02%)</title><rect x="99.9102%" y="389" width="0.0230%" height="15" fill="rgb(237,70,4)" fg:x="525411" fg:w="121"/><text x="100.1602%" y="399.50"></text></g><g><title>crabchess::movegen::MoveGenerator::square_attackers_with_occupancy (91 samples, 0.02%)</title><rect x="99.9403%" y="373" width="0.0173%" height="15" fill="rgb(244,85,46)" fg:x="525569" fg:w="91"/><text x="100.1903%" y="383.50"></text></g><g><title>crabchess::movegen::MoveGenerator::is_move_self_check (132 samples, 0.03%)</title><rect x="99.9333%" y="389" width="0.0251%" height="15" fill="rgb(223,39,52)" fg:x="525532" fg:w="132"/><text x="100.1833%" y="399.50"></text></g><g><title>crabchess::movegen::MoveGenerator::get_moves (284 samples, 0.05%)</title><rect x="99.9047%" y="405" width="0.0540%" height="15" fill="rgb(218,200,14)" fg:x="525382" fg:w="284"/><text x="100.1547%" y="415.50"></text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth (525,729 samples, 99.97%)</title><rect x="0.0074%" y="421" width="99.9707%" height="15" fill="rgb(208,171,16)" fg:x="39" fg:w="525729"/><text x="0.2574%" y="431.50">crabchess::engine::search::Minimax::evaluate_at_depth</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (63 samples, 0.01%)</title><rect x="99.9662%" y="405" width="0.0120%" height="15" fill="rgb(234,200,18)" fg:x="525705" fg:w="63"/><text x="100.2162%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (63 samples, 0.01%)</title><rect x="99.9662%" y="389" width="0.0120%" height="15" fill="rgb(228,45,11)" fg:x="525705" fg:w="63"/><text x="100.2162%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (63 samples, 0.01%)</title><rect x="99.9662%" y="373" width="0.0120%" height="15" fill="rgb(237,182,11)" fg:x="525705" fg:w="63"/><text x="100.2162%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (58 samples, 0.01%)</title><rect x="99.9671%" y="357" width="0.0110%" height="15" fill="rgb(241,175,49)" fg:x="525710" fg:w="58"/><text x="100.2171%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (58 samples, 0.01%)</title><rect x="99.9671%" y="341" width="0.0110%" height="15" fill="rgb(247,38,35)" fg:x="525710" fg:w="58"/><text x="100.2171%" y="351.50"></text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth (525,835 samples, 99.99%)</title><rect x="0.0010%" y="437" width="99.9909%" height="15" fill="rgb(228,39,49)" fg:x="5" fg:w="525835"/><text x="0.2510%" y="447.50">crabchess::engine::search::Minimax::evaluate_at_depth</text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth (525,859 samples, 100.00%)</title><rect x="0.0000%" y="469" width="99.9954%" height="15" fill="rgb(226,101,26)" fg:x="0" fg:w="525859"/><text x="0.2500%" y="479.50">crabchess::engine::search::Minimax::evaluate_at_depth</text></g><g><title>crabchess::engine::search::Minimax::evaluate_at_depth (525,859 samples, 100.00%)</title><rect x="0.0000%" y="453" width="99.9954%" height="15" fill="rgb(206,141,19)" fg:x="0" fg:w="525859"/><text x="0.2500%" y="463.50">crabchess::engine::search::Minimax::evaluate_at_depth</text></g><g><title>&lt;crabchess::engine::search::Minimax as crabchess::engine::Engine&gt;::evaluate (525,862 samples, 100.00%)</title><rect x="0.0000%" y="485" width="99.9960%" height="15" fill="rgb(211,200,13)" fg:x="0" fg:w="525862"/><text x="0.2500%" y="495.50">&lt;crabchess::engine::search::Minimax as crabchess::engine::Engine&gt;::evaluate</text></g><g><title>&lt;crabchess::engine::search::Minimax as crabchess::engine::Engine&gt;::get_evals (525,863 samples, 100.00%)</title><rect x="0.0000%" y="501" width="99.9962%" height="15" fill="rgb(241,121,6)" fg:x="0" fg:w="525863"/><text x="0.2500%" y="511.50">&lt;crabchess::engine::search::Minimax as crabchess::engine::Engine&gt;::get_evals</text></g><g><title>crabchess::main (525,864 samples, 100.00%)</title><rect x="0.0000%" y="517" width="99.9964%" height="15" fill="rgb(234,221,29)" fg:x="0" fg:w="525864"/><text x="0.2500%" y="527.50">crabchess::main</text></g><g><title>[unknown] (525,881 samples, 100.00%)</title><rect x="0.0000%" y="533" width="99.9996%" height="15" fill="rgb(229,136,5)" fg:x="0" fg:w="525881"/><text x="0.2500%" y="543.50">[unknown]</text></g><g><title>all (525,883 samples, 100%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(238,36,11)" fg:x="0" fg:w="525883"/><text x="0.2500%" y="575.50"></text></g><g><title>crabchess (525,883 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(251,55,41)" fg:x="0" fg:w="525883"/><text x="0.2500%" y="559.50">crabchess</text></g></svg></svg>